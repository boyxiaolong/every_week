syntax = "proto3";
package protomsg;



// 排行榜玩家/公会杂项数据
message RankMiscInfo
{
    uint64 player_id        = 1;    // 玩家/会长ID
    string player_name      = 2;    // 玩家/会长名字
    string player_head      = 3;    // 玩家/会长头像
    uint64 guild_id         = 4;    // 公会ID
    string guild_name       = 5;    // 公会名字
    string guild_short_name = 6;    // 公会简称
    uint32 guild_icon       = 7;    // 公会图标
    uint64 kingdom_id = 8;
}

// 玩家排行榜数据
message RankInfo
{
    uint32 rank         = 1;    // 名次
    uint32 last_rank    = 2;    // 上次名次
    uint64 score        = 3;    // 积分
    int64 update_time   = 4;    // 更新时间

    RankMiscInfo misc   = 5;
    int64 data_id = 6;
}

// 排行榜数据类型
enum RankBoardDataType
{
    kRankBoardDataTypeNone      = 0;
    kRankBoardDataTypePlayer    = 1;    // 个人排行榜
    kRankBoardDataTypeGuild     = 2;    // 公会排行榜
}

// 排行榜类型
enum RankBoardType
{
    kRankBoardTypeNone      = 0;
    kRankBoardTypeCommon    = 1;          // 公共排行榜
    kRankBoardTypeActivity  = 2;          // 活动排行榜
    kRankBoardTypeGlobalActivity  = 3;    // 跨服活动排行榜
}

// 王国普通排行榜类型(ID)
enum CommonRankBoardType
{
    kCommonRankBoardTypeNone                    = 0;
    kCommonRankBoardTypeGuildBattlePower        = 1;
    kCommonRankBoardTypeGuildKillCount          = 2;
    kCommonRankBoardTypeGuildFlagCount          = 3;
    kCommonRankBoardTypePlayerBattlePower       = 4;
    kCommonRankBoardTypePlayerKillCount         = 5;
    kCommonRankBoardTypePlayerCollectResource   = 6;
    kCommonRankBoardTypePlayerExpe              = 7;
}

// 排行榜信息
message RankBoardInfo
{
    RankBoardType type      = 1;
    uint32 rank_board_id    = 2;
    uint64 last_score       = 3;    // 最后一名成绩
    bool is_open            = 4;    // 是否开启

}

message ActivityRankSimpleData
{
    string name             = 1;
    int64 score             = 2;
    string head             = 3;
    string guild_short_name = 4;    // 公会简称
    uint32 rank             = 5;    // 名次
    string guild_name       = 6;    // 公会名称
    uint64 kingdom_id = 7;
}

message ActivityRankSimpleDatas
{
    uint64 rank_period = 1; // 排行榜期数
    repeated ActivityRankSimpleData rank_info   = 5;    // 排行榜数据
}

message RankBoardHistory
{
  uint64 id = 1; // 唯一id
  uint32 rank_id = 2;
  uint64 rank_period = 3; // 期数
  repeated RankInfo infos = 4;  // 榜单
  int64 start_time = 5;
}

message RankPeriodData
{
    uint32  rank_board_id = 1;    // 排行榜ID
    uint64  period = 2;
}
