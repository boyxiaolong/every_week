syntax = "proto3";
package protomsg;
import "msg_common.proto";

// 雷达状态类型
enum RadarStatus
{
	kRadarStatus_None			= 0;	// 初始
	kRadarStatus_Accept			= 1;	// 已接受
	kRadarStatus_Complete		= 2;	// 已完成
	kRadarStatus_Destroy		= 3;	// 销毁中
}

// 雷达时间类型
enum RadarTimeType
{
	kRadarTimeType_None			= 0;
	kRadarTimeType_Daily		= 1;	// 每日
	kRadarTimeType_Weekly		= 2;	// 每周
	kRadarTimeType_Yearly		= 3;	// 每年
	kRadarTimeType_Once			= 4;	// 一次性
}

// 雷达处理类型
enum RadarType
{
	kRadarType_None			= 0;
	kRadarType_Monster		= 1;	// 杀怪
	kRadarType_Common		= 2;	// 普通运输
}

// 怪物处理类型的雷达处理子类型
enum RadarMonsterSubType
{
	kRadarMonsterSubType_None		= 0;
	kRadarMonsterSubType_Own		= 1;	// 专属
	kRadarMonsterSubType_Common		= 2;	// 普通
}

// 普通运输处理类型的雷达处理子类型
enum RadarCommonSubType
{
	kRadarCommonSubType_None		= 0;
	kRadarCommonSubType_Assist		= 1;	// 物资援助
	kRadarCommonSubType_Rescue		= 2;	// 营救难民
	kRadarCommonSubType_Supply		= 3;	// 空投补给
	kRadarCommonSubType_Explore		= 4;	// 塔防探索
}

// 雷达品质
enum RadarQuality
{
	kRadarQuality_None			= 0;
	kRadarQuality_Green			= 1;	// 绿
	kRadarQuality_Blue			= 2;	// 蓝
	kRadarQuality_Purple		= 3;	// 紫
	kRadarQuality_Orange		= 4;	// 橙
	kRadarQuality_Red			= 5;	// 红
}

// 雷达销毁原因
enum RadarDestroyReason
{
	kRadarDestroyReason_None			= 0;
	kRadarDestroyReason_Reward			= 1;
	kRadarDestroyReason_Timeout			= 2;
	kRadarDestroyReason_CastleChange	= 3;		// 城堡位置变化或者kvk之类
	kRadarDestroyReason_DayReset		= 4;
}

// 雷达完成类型
enum RadarCompleteType
{
	kRadarCompleteType_None				= 0;	// 一般类型
	kRadarCompleteType_QueueAccpet		= 1;	// 队列接受
}

// 雷达数据
message RadarData
{
	uint32 		radar_id			= 1;	// 雷达编号
	uint32 		radar_config_id		= 2;	// 雷达配置编号
	int32 		status				= 3;	// 状态
	int64		param				= 4;	// 动态处理参数(根据处理类型定义不同)
	int64		param2				= 5;	// 动态处理参数2(根据处理类型定义不同)
	vector2d 	position			= 6;	// 位置
	int64 		begin_time			= 7;	// 创建时间(创建时间点)
	int64 		end_time			= 8;	// 结束时间
	int64 		start_time			= 9;	// 开始时间(接受时间点)
	int64 		stop_time			= 10;	// 停止时间
	uint32		reward_id			= 11;	// 奖励编号
	bool		give				= 12;	// 是否送的
	int32		dialog_index		= 13;	// 对话索引
}

// 雷达村庄数据
message RadarVillageData
{
	uint64 		valliage_id			= 1;	// 村庄编号
	vector2d 	position			= 2;	// 位置
}

///////////////////////////////////////////////////////////////

// 虚拟队列类型
enum VirtualQueueType
{
	kVirtualQueueType_None 		= 0;
	kVirtualQueueType_Radar 		= 1;		// 雷达系统
}

// 虚拟队列状态
enum VirtualQueueStatus
{
	kVirtualQueueStatus_None 		= 0;
	kVirtualQueueStatus_Accpet 		= 1;		// 接受
	kVirtualQueueStatus_Complete 	= 2;		// 完成
}

// 虚拟队列
message VirtualQueueData
{
	uint32	queue_id			= 1;	// 虚拟队列编号
	int64	start_time			= 2;	// 开始时间
	int32	type				= 3;	// 类型
	int64	param1				= 4;	// 动态参数1(雷达系统时，雷达配置编号)
	int64	param2				= 5;	// 动态参数2(雷达系统时，村庄id)
	int64	param3				= 6;	// 动态参数3(雷达系统时，radar_id)
	repeated vector2d paths 	= 7;	// 路径
	int32	status				= 8;	// 状态
}
