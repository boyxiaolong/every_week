// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mall_lv_config.proto

package db

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MallLvConfig struct {
	Id      uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	GoodsId uint64 `protobuf:"varint,2,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	Lv      string `protobuf:"bytes,3,opt,name=lv" json:"lv,omitempty"`
	Reward  string `protobuf:"bytes,4,opt,name=reward" json:"reward,omitempty"`
}

func (m *MallLvConfig) Reset()                    { *m = MallLvConfig{} }
func (m *MallLvConfig) String() string            { return proto.CompactTextString(m) }
func (*MallLvConfig) ProtoMessage()               {}
func (*MallLvConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *MallLvConfig) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MallLvConfig) GetGoodsId() uint64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *MallLvConfig) GetLv() string {
	if m != nil {
		return m.Lv
	}
	return ""
}

func (m *MallLvConfig) GetReward() string {
	if m != nil {
		return m.Reward
	}
	return ""
}

type MallLvConfigSet struct {
	Set []*MallLvConfig `protobuf:"bytes,1,rep,name=set" json:"set,omitempty"`
}

func (m *MallLvConfigSet) Reset()                    { *m = MallLvConfigSet{} }
func (m *MallLvConfigSet) String() string            { return proto.CompactTextString(m) }
func (*MallLvConfigSet) ProtoMessage()               {}
func (*MallLvConfigSet) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *MallLvConfigSet) GetSet() []*MallLvConfig {
	if m != nil {
		return m.Set
	}
	return nil
}

func init() {
	proto.RegisterType((*MallLvConfig)(nil), "db.mall_lv_config")
	proto.RegisterType((*MallLvConfigSet)(nil), "db.mall_lv_config_set")
}

func init() { proto.RegisterFile("mall_lv_config.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc9, 0x4d, 0xcc, 0xc9,
	0x89, 0xcf, 0x29, 0x8b, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0x4a, 0x49, 0x52, 0x4a, 0xe6, 0xe2, 0x43, 0x95, 0x13, 0xe2, 0xe3, 0x62, 0xca, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x09, 0x62, 0xca, 0x4c, 0x11, 0x92, 0xe4, 0xe2, 0x48, 0xcf,
	0xcf, 0x4f, 0x29, 0x8e, 0xcf, 0x4c, 0x91, 0x60, 0x02, 0x8b, 0xb2, 0x83, 0xf9, 0x9e, 0x29, 0x20,
	0xa5, 0x39, 0x65, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x4c, 0x39, 0x65, 0x42, 0x62, 0x5c,
	0x6c, 0x45, 0xa9, 0xe5, 0x89, 0x45, 0x29, 0x12, 0x2c, 0x60, 0x31, 0x28, 0x4f, 0xc9, 0x8a, 0x4b,
	0x08, 0xd5, 0x92, 0xf8, 0xe2, 0xd4, 0x12, 0x21, 0x15, 0x2e, 0xe6, 0xe2, 0xd4, 0x12, 0x09, 0x46,
	0x05, 0x66, 0x0d, 0x6e, 0x23, 0x21, 0xbd, 0x94, 0x24, 0x3d, 0x54, 0x45, 0x41, 0x20, 0xe9, 0x24,
	0x36, 0xb0, 0x5b, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x66, 0x59, 0x53, 0xc3, 0x00,
	0x00, 0x00,
}
