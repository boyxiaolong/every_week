// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_common_city.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ConstructionType int32

const (
	ConstructionType_kConstructionType_None          ConstructionType = 0
	ConstructionType_kConstructionType_MainCastle    ConstructionType = 1000
	ConstructionType_kConstructionType_ScienceCenter ConstructionType = 1001
	ConstructionType_kConstructionType_CityWall      ConstructionType = 1002
	ConstructionType_kConstructionType_UnionCenter   ConstructionType = 1003
	ConstructionType_kConstructionType_Farm          ConstructionType = 1004
	ConstructionType_kConstructionType_Wood          ConstructionType = 1005
	ConstructionType_kConstructionType_Steel         ConstructionType = 1006
	ConstructionType_kConstructionType_Oil           ConstructionType = 1007
	ConstructionType_kConstructionType_WarCenter     ConstructionType = 1008
	ConstructionType_kConstructionType_StoreHouse    ConstructionType = 1009
	ConstructionType_kConstructionType_Barrack       ConstructionType = 1010
	ConstructionType_kConstructionType_Police        ConstructionType = 1012
	ConstructionType_kConstructionType_WatchTower    ConstructionType = 1013
	ConstructionType_kConstructionType_ScoutCamp     ConstructionType = 1028
	ConstructionType_kConstructionType_Radar         ConstructionType = 1029
	ConstructionType_kConstructionType_TradingPost   ConstructionType = 1031
	ConstructionType_kConstructionType_Hospital      ConstructionType = 1032
	ConstructionType_kConstructionType_SeekTalent    ConstructionType = 1041
	ConstructionType_kConstructionType_Mintage       ConstructionType = 1042
)

var ConstructionType_name = map[int32]string{
	0:    "kConstructionType_None",
	1000: "kConstructionType_MainCastle",
	1001: "kConstructionType_ScienceCenter",
	1002: "kConstructionType_CityWall",
	1003: "kConstructionType_UnionCenter",
	1004: "kConstructionType_Farm",
	1005: "kConstructionType_Wood",
	1006: "kConstructionType_Steel",
	1007: "kConstructionType_Oil",
	1008: "kConstructionType_WarCenter",
	1009: "kConstructionType_StoreHouse",
	1010: "kConstructionType_Barrack",
	1012: "kConstructionType_Police",
	1013: "kConstructionType_WatchTower",
	1028: "kConstructionType_ScoutCamp",
	1029: "kConstructionType_Radar",
	1031: "kConstructionType_TradingPost",
	1032: "kConstructionType_Hospital",
	1041: "kConstructionType_SeekTalent",
	1042: "kConstructionType_Mintage",
}
var ConstructionType_value = map[string]int32{
	"kConstructionType_None":          0,
	"kConstructionType_MainCastle":    1000,
	"kConstructionType_ScienceCenter": 1001,
	"kConstructionType_CityWall":      1002,
	"kConstructionType_UnionCenter":   1003,
	"kConstructionType_Farm":          1004,
	"kConstructionType_Wood":          1005,
	"kConstructionType_Steel":         1006,
	"kConstructionType_Oil":           1007,
	"kConstructionType_WarCenter":     1008,
	"kConstructionType_StoreHouse":    1009,
	"kConstructionType_Barrack":       1010,
	"kConstructionType_Police":        1012,
	"kConstructionType_WatchTower":    1013,
	"kConstructionType_ScoutCamp":     1028,
	"kConstructionType_Radar":         1029,
	"kConstructionType_TradingPost":   1031,
	"kConstructionType_Hospital":      1032,
	"kConstructionType_SeekTalent":    1041,
	"kConstructionType_Mintage":       1042,
}

func (x ConstructionType) String() string {
	return proto.EnumName(ConstructionType_name, int32(x))
}
func (ConstructionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor40, []int{0} }

// 建筑状态
type BuildingStatus int32

const (
	BuildingStatus_kBuildingStatus_None       BuildingStatus = 0
	BuildingStatus_kBuildingStatus_Upgrading  BuildingStatus = 1
	BuildingStatus_kBuildingStatus_WaitActive BuildingStatus = 2
	BuildingStatus_kBuildingStatus_Normal     BuildingStatus = 3
	BuildingStatus_kBuildingStatus_Removing   BuildingStatus = 4
)

var BuildingStatus_name = map[int32]string{
	0: "kBuildingStatus_None",
	1: "kBuildingStatus_Upgrading",
	2: "kBuildingStatus_WaitActive",
	3: "kBuildingStatus_Normal",
	4: "kBuildingStatus_Removing",
}
var BuildingStatus_value = map[string]int32{
	"kBuildingStatus_None":       0,
	"kBuildingStatus_Upgrading":  1,
	"kBuildingStatus_WaitActive": 2,
	"kBuildingStatus_Normal":     3,
	"kBuildingStatus_Removing":   4,
}

func (x BuildingStatus) String() string {
	return proto.EnumName(BuildingStatus_name, int32(x))
}
func (BuildingStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor40, []int{1} }

// 战略值类型
type CityStrategyType int32

const (
	CityStrategyType_kCityStrategyType_None     CityStrategyType = 0
	CityStrategyType_kCityStrategyType_Military CityStrategyType = 1
	CityStrategyType_kCityStrategyType_Economy  CityStrategyType = 2
	CityStrategyType_kCityStrategyType_Develop  CityStrategyType = 3
)

var CityStrategyType_name = map[int32]string{
	0: "kCityStrategyType_None",
	1: "kCityStrategyType_Military",
	2: "kCityStrategyType_Economy",
	3: "kCityStrategyType_Develop",
}
var CityStrategyType_value = map[string]int32{
	"kCityStrategyType_None":     0,
	"kCityStrategyType_Military": 1,
	"kCityStrategyType_Economy":  2,
	"kCityStrategyType_Develop":  3,
}

func (x CityStrategyType) String() string {
	return proto.EnumName(CityStrategyType_name, int32(x))
}
func (CityStrategyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor40, []int{2} }

// 坐标
type CityCoord struct {
	X int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *CityCoord) Reset()                    { *m = CityCoord{} }
func (m *CityCoord) String() string            { return proto.CompactTextString(m) }
func (*CityCoord) ProtoMessage()               {}
func (*CityCoord) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{0} }

func (m *CityCoord) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CityCoord) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type RequestBuilding struct {
	ConstructionType uint32 `protobuf:"varint,1,opt,name=construction_type,json=constructionType" json:"construction_type,omitempty"`
	Level            uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (m *RequestBuilding) Reset()                    { *m = RequestBuilding{} }
func (m *RequestBuilding) String() string            { return proto.CompactTextString(m) }
func (*RequestBuilding) ProtoMessage()               {}
func (*RequestBuilding) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{1} }

func (m *RequestBuilding) GetConstructionType() uint32 {
	if m != nil {
		return m.ConstructionType
	}
	return 0
}

func (m *RequestBuilding) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 建筑信息
type BuildingInfo struct {
	Id         uint32         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type       uint32         `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Level      uint32         `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	Position   *CityCoord     `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`
	Status     BuildingStatus `protobuf:"varint,5,opt,name=status,enum=protomsg.BuildingStatus" json:"status,omitempty"`
	RemoveTime int64          `protobuf:"varint,6,opt,name=remove_time,json=removeTime" json:"remove_time,omitempty"`
}

func (m *BuildingInfo) Reset()                    { *m = BuildingInfo{} }
func (m *BuildingInfo) String() string            { return proto.CompactTextString(m) }
func (*BuildingInfo) ProtoMessage()               {}
func (*BuildingInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{2} }

func (m *BuildingInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuildingInfo) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *BuildingInfo) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *BuildingInfo) GetPosition() *CityCoord {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *BuildingInfo) GetStatus() BuildingStatus {
	if m != nil {
		return m.Status
	}
	return BuildingStatus_kBuildingStatus_None
}

func (m *BuildingInfo) GetRemoveTime() int64 {
	if m != nil {
		return m.RemoveTime
	}
	return 0
}

// 建筑工作信息
type BuildWorkInfo struct {
	Id          uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BuildingId  uint32 `protobuf:"varint,2,opt,name=building_id,json=buildingId" json:"building_id,omitempty"`
	StartTime   int64  `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime     int64  `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	ExpiredTime int64  `protobuf:"varint,5,opt,name=expired_time,json=expiredTime" json:"expired_time,omitempty"`
	WorkTime    int64  `protobuf:"varint,6,opt,name=work_time,json=workTime" json:"work_time,omitempty"`
}

func (m *BuildWorkInfo) Reset()                    { *m = BuildWorkInfo{} }
func (m *BuildWorkInfo) String() string            { return proto.CompactTextString(m) }
func (*BuildWorkInfo) ProtoMessage()               {}
func (*BuildWorkInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{3} }

func (m *BuildWorkInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuildWorkInfo) GetBuildingId() uint32 {
	if m != nil {
		return m.BuildingId
	}
	return 0
}

func (m *BuildWorkInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *BuildWorkInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *BuildWorkInfo) GetExpiredTime() int64 {
	if m != nil {
		return m.ExpiredTime
	}
	return 0
}

func (m *BuildWorkInfo) GetWorkTime() int64 {
	if m != nil {
		return m.WorkTime
	}
	return 0
}

type BuildQueueInfo struct {
	Works []*BuildWorkInfo `protobuf:"bytes,1,rep,name=works" json:"works,omitempty"`
}

func (m *BuildQueueInfo) Reset()                    { *m = BuildQueueInfo{} }
func (m *BuildQueueInfo) String() string            { return proto.CompactTextString(m) }
func (*BuildQueueInfo) ProtoMessage()               {}
func (*BuildQueueInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{4} }

func (m *BuildQueueInfo) GetWorks() []*BuildWorkInfo {
	if m != nil {
		return m.Works
	}
	return nil
}

type StrategyInfo struct {
	StrategyId        uint32 `protobuf:"varint,1,opt,name=strategy_id,json=strategyId" json:"strategy_id,omitempty"`
	ActivateTime      int64  `protobuf:"varint,2,opt,name=activate_time,json=activateTime" json:"activate_time,omitempty"`
	NextLordSkillTime int64  `protobuf:"varint,3,opt,name=next_lord_skill_time,json=nextLordSkillTime" json:"next_lord_skill_time,omitempty"`
}

func (m *StrategyInfo) Reset()                    { *m = StrategyInfo{} }
func (m *StrategyInfo) String() string            { return proto.CompactTextString(m) }
func (*StrategyInfo) ProtoMessage()               {}
func (*StrategyInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{5} }

func (m *StrategyInfo) GetStrategyId() uint32 {
	if m != nil {
		return m.StrategyId
	}
	return 0
}

func (m *StrategyInfo) GetActivateTime() int64 {
	if m != nil {
		return m.ActivateTime
	}
	return 0
}

func (m *StrategyInfo) GetNextLordSkillTime() int64 {
	if m != nil {
		return m.NextLordSkillTime
	}
	return 0
}

// 横向道路数据
type RoadLineInfo struct {
	X uint32   `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	V []uint32 `protobuf:"varint,2,rep,packed,name=v" json:"v,omitempty"`
}

func (m *RoadLineInfo) Reset()                    { *m = RoadLineInfo{} }
func (m *RoadLineInfo) String() string            { return proto.CompactTextString(m) }
func (*RoadLineInfo) ProtoMessage()               {}
func (*RoadLineInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{6} }

func (m *RoadLineInfo) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *RoadLineInfo) GetV() []uint32 {
	if m != nil {
		return m.V
	}
	return nil
}

// 道路整行数据
type RoadRowInfo struct {
	Y uint32          `protobuf:"varint,1,opt,name=y" json:"y,omitempty"`
	E []*RoadLineInfo `protobuf:"bytes,2,rep,name=e" json:"e,omitempty"`
}

func (m *RoadRowInfo) Reset()                    { *m = RoadRowInfo{} }
func (m *RoadRowInfo) String() string            { return proto.CompactTextString(m) }
func (*RoadRowInfo) ProtoMessage()               {}
func (*RoadRowInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{7} }

func (m *RoadRowInfo) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *RoadRowInfo) GetE() []*RoadLineInfo {
	if m != nil {
		return m.E
	}
	return nil
}

// 内城道路数据
type CityRoadInfo struct {
	Rows []*RoadRowInfo `protobuf:"bytes,1,rep,name=rows" json:"rows,omitempty"`
}

func (m *CityRoadInfo) Reset()                    { *m = CityRoadInfo{} }
func (m *CityRoadInfo) String() string            { return proto.CompactTextString(m) }
func (*CityRoadInfo) ProtoMessage()               {}
func (*CityRoadInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{8} }

func (m *CityRoadInfo) GetRows() []*RoadRowInfo {
	if m != nil {
		return m.Rows
	}
	return nil
}

// 单点道路数据
type RoadItemInfo struct {
	Coord *CityCoord `protobuf:"bytes,1,opt,name=coord" json:"coord,omitempty"`
	Value uint32     `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *RoadItemInfo) Reset()                    { *m = RoadItemInfo{} }
func (m *RoadItemInfo) String() string            { return proto.CompactTextString(m) }
func (*RoadItemInfo) ProtoMessage()               {}
func (*RoadItemInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{9} }

func (m *RoadItemInfo) GetCoord() *CityCoord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *RoadItemInfo) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 建筑收纳容器
type CityContainerInfo struct {
	Buildings map[uint32]uint32 `protobuf:"bytes,1,rep,name=buildings" json:"buildings,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Roads     map[uint32]uint32 `protobuf:"bytes,2,rep,name=roads" json:"roads,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *CityContainerInfo) Reset()                    { *m = CityContainerInfo{} }
func (m *CityContainerInfo) String() string            { return proto.CompactTextString(m) }
func (*CityContainerInfo) ProtoMessage()               {}
func (*CityContainerInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{10} }

func (m *CityContainerInfo) GetBuildings() map[uint32]uint32 {
	if m != nil {
		return m.Buildings
	}
	return nil
}

func (m *CityContainerInfo) GetRoads() map[uint32]uint32 {
	if m != nil {
		return m.Roads
	}
	return nil
}

// 内城方案
type CityThemeInfo struct {
	Buildings []*BuildingInfo `protobuf:"bytes,1,rep,name=buildings" json:"buildings,omitempty"`
	Road      *CityRoadInfo   `protobuf:"bytes,2,opt,name=road" json:"road,omitempty"`
}

func (m *CityThemeInfo) Reset()                    { *m = CityThemeInfo{} }
func (m *CityThemeInfo) String() string            { return proto.CompactTextString(m) }
func (*CityThemeInfo) ProtoMessage()               {}
func (*CityThemeInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{11} }

func (m *CityThemeInfo) GetBuildings() []*BuildingInfo {
	if m != nil {
		return m.Buildings
	}
	return nil
}

func (m *CityThemeInfo) GetRoad() *CityRoadInfo {
	if m != nil {
		return m.Road
	}
	return nil
}

// 内城信息
type CityInfo struct {
	Buildings  []*BuildingInfo    `protobuf:"bytes,1,rep,name=buildings" json:"buildings,omitempty"`
	Road       *CityRoadInfo      `protobuf:"bytes,2,opt,name=road" json:"road,omitempty"`
	Container  *CityContainerInfo `protobuf:"bytes,3,opt,name=container" json:"container,omitempty"`
	Themes     []*CityThemeInfo   `protobuf:"bytes,4,rep,name=themes" json:"themes,omitempty"`
	MainTheme  uint32             `protobuf:"varint,5,opt,name=main_theme,json=mainTheme" json:"main_theme,omitempty"`
	ForbidCopy bool               `protobuf:"varint,6,opt,name=forbid_copy,json=forbidCopy" json:"forbid_copy,omitempty"`
}

func (m *CityInfo) Reset()                    { *m = CityInfo{} }
func (m *CityInfo) String() string            { return proto.CompactTextString(m) }
func (*CityInfo) ProtoMessage()               {}
func (*CityInfo) Descriptor() ([]byte, []int) { return fileDescriptor40, []int{12} }

func (m *CityInfo) GetBuildings() []*BuildingInfo {
	if m != nil {
		return m.Buildings
	}
	return nil
}

func (m *CityInfo) GetRoad() *CityRoadInfo {
	if m != nil {
		return m.Road
	}
	return nil
}

func (m *CityInfo) GetContainer() *CityContainerInfo {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *CityInfo) GetThemes() []*CityThemeInfo {
	if m != nil {
		return m.Themes
	}
	return nil
}

func (m *CityInfo) GetMainTheme() uint32 {
	if m != nil {
		return m.MainTheme
	}
	return 0
}

func (m *CityInfo) GetForbidCopy() bool {
	if m != nil {
		return m.ForbidCopy
	}
	return false
}

func init() {
	proto.RegisterType((*CityCoord)(nil), "protomsg.CityCoord")
	proto.RegisterType((*RequestBuilding)(nil), "protomsg.RequestBuilding")
	proto.RegisterType((*BuildingInfo)(nil), "protomsg.BuildingInfo")
	proto.RegisterType((*BuildWorkInfo)(nil), "protomsg.BuildWorkInfo")
	proto.RegisterType((*BuildQueueInfo)(nil), "protomsg.BuildQueueInfo")
	proto.RegisterType((*StrategyInfo)(nil), "protomsg.StrategyInfo")
	proto.RegisterType((*RoadLineInfo)(nil), "protomsg.RoadLineInfo")
	proto.RegisterType((*RoadRowInfo)(nil), "protomsg.RoadRowInfo")
	proto.RegisterType((*CityRoadInfo)(nil), "protomsg.CityRoadInfo")
	proto.RegisterType((*RoadItemInfo)(nil), "protomsg.RoadItemInfo")
	proto.RegisterType((*CityContainerInfo)(nil), "protomsg.CityContainerInfo")
	proto.RegisterType((*CityThemeInfo)(nil), "protomsg.CityThemeInfo")
	proto.RegisterType((*CityInfo)(nil), "protomsg.CityInfo")
	proto.RegisterEnum("protomsg.ConstructionType", ConstructionType_name, ConstructionType_value)
	proto.RegisterEnum("protomsg.BuildingStatus", BuildingStatus_name, BuildingStatus_value)
	proto.RegisterEnum("protomsg.CityStrategyType", CityStrategyType_name, CityStrategyType_value)
}

func init() { proto.RegisterFile("msg_common_city.proto", fileDescriptor40) }

var fileDescriptor40 = []byte{
	// 1123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcf, 0x73, 0xdb, 0x44,
	0x14, 0x46, 0xfe, 0x11, 0xcb, 0xcf, 0x76, 0xd9, 0x2e, 0x49, 0xaa, 0x38, 0x49, 0xe3, 0x8a, 0x0e,
	0x04, 0x33, 0x24, 0x4c, 0xe0, 0xd0, 0x32, 0x9d, 0x61, 0x5a, 0x53, 0x26, 0x99, 0x69, 0x68, 0x91,
	0xdd, 0xc9, 0xd1, 0xb3, 0x91, 0xb6, 0xee, 0x8e, 0x25, 0xad, 0xbb, 0x5a, 0x3b, 0xd1, 0x9d, 0x0e,
	0x1c, 0xb8, 0x00, 0x17, 0x6e, 0x1c, 0xf8, 0x2f, 0xf8, 0x1b, 0xf8, 0x43, 0xf8, 0xfd, 0x6b, 0xe0,
	0xce, 0xec, 0x4a, 0xb2, 0x1d, 0xcb, 0xe9, 0x0c, 0x17, 0x4e, 0xf6, 0xbe, 0xef, 0x7b, 0xdf, 0x7e,
	0xef, 0xe9, 0xed, 0x4a, 0xb0, 0x16, 0x44, 0x83, 0xbe, 0xcb, 0x83, 0x80, 0x87, 0x7d, 0x97, 0xc9,
	0x78, 0x6f, 0x24, 0xb8, 0xe4, 0xd8, 0xd4, 0x3f, 0x41, 0x34, 0xb0, 0x5f, 0x87, 0x6a, 0x87, 0xc9,
	0xb8, 0xc3, 0xb9, 0xf0, 0x70, 0x1d, 0x8c, 0x73, 0xcb, 0x68, 0x19, 0xbb, 0x65, 0xc7, 0x38, 0x57,
	0xab, 0xd8, 0x2a, 0x24, 0xab, 0xd8, 0xee, 0xc1, 0xcb, 0x0e, 0x7d, 0x36, 0xa6, 0x91, 0xbc, 0x37,
	0x66, 0xbe, 0xc7, 0xc2, 0x01, 0x7e, 0x13, 0xae, 0xba, 0x3c, 0x8c, 0xa4, 0x18, 0xbb, 0x92, 0xf1,
	0xb0, 0x2f, 0xe3, 0x11, 0xd5, 0xe9, 0x0d, 0x07, 0xcd, 0x03, 0xbd, 0x78, 0x44, 0xf1, 0x2a, 0x94,
	0x7d, 0x3a, 0xa1, 0xbe, 0x56, 0x6c, 0x38, 0xc9, 0xc2, 0xfe, 0xde, 0x80, 0x7a, 0xa6, 0x77, 0x14,
	0x3e, 0xe1, 0xf8, 0x0a, 0x14, 0x98, 0x97, 0x8a, 0x14, 0x98, 0x87, 0x31, 0x94, 0xb4, 0x6c, 0x92,
	0xa5, 0xff, 0xcf, 0xa4, 0x8a, 0x73, 0x52, 0x78, 0x1f, 0xcc, 0x11, 0x8f, 0x98, 0xda, 0xd0, 0x2a,
	0xb5, 0x8c, 0xdd, 0xda, 0xc1, 0x2b, 0x7b, 0x59, 0x99, 0x7b, 0xd3, 0x1a, 0x9d, 0x29, 0x09, 0xbf,
	0x0d, 0x2b, 0x91, 0x24, 0x72, 0x1c, 0x59, 0xe5, 0x96, 0xb1, 0x7b, 0xe5, 0xc0, 0x9a, 0xd1, 0x33,
	0x4b, 0x5d, 0x8d, 0x3b, 0x29, 0x0f, 0xef, 0x40, 0x4d, 0xd0, 0x80, 0x4f, 0x68, 0x5f, 0xb2, 0x80,
	0x5a, 0x2b, 0x2d, 0x63, 0xb7, 0xe8, 0x40, 0x12, 0xea, 0xb1, 0x80, 0xda, 0xdf, 0x19, 0xd0, 0xd0,
	0xb9, 0x27, 0x5c, 0x0c, 0x97, 0xd6, 0xb3, 0x03, 0xb5, 0xd3, 0x54, 0xbc, 0xcf, 0xbc, 0xb4, 0x2c,
	0xc8, 0x42, 0x47, 0x1e, 0xde, 0x06, 0x88, 0x24, 0x11, 0x32, 0xd9, 0xa2, 0xa8, 0xb7, 0xa8, 0xea,
	0x88, 0xda, 0x01, 0x6f, 0x80, 0x49, 0x43, 0x2f, 0x01, 0x4b, 0x1a, 0xac, 0xd0, 0xd0, 0xd3, 0xd0,
	0x0d, 0xa8, 0xd3, 0xf3, 0x11, 0x13, 0x34, 0x85, 0xcb, 0x1a, 0xae, 0xa5, 0x31, 0x4d, 0xd9, 0x84,
	0xea, 0x19, 0x17, 0xc3, 0x79, 0xfb, 0xa6, 0x0a, 0x68, 0xf3, 0xef, 0xc3, 0x15, 0xed, 0xfd, 0xe3,
	0x31, 0x1d, 0x53, 0x6d, 0xfe, 0x2d, 0x28, 0x2b, 0x34, 0xb2, 0x8c, 0x56, 0x71, 0xb7, 0x76, 0x70,
	0x6d, 0xa1, 0x41, 0x59, 0x91, 0x4e, 0xc2, 0xb2, 0x9f, 0x1b, 0x50, 0xef, 0x4a, 0x41, 0x24, 0x1d,
	0xc4, 0x3a, 0x7f, 0x07, 0x6a, 0x51, 0xba, 0xee, 0x4f, 0xbb, 0x00, 0x59, 0xe8, 0xc8, 0xc3, 0xaf,
	0x42, 0x83, 0xb8, 0x92, 0x4d, 0x88, 0x4c, 0x5b, 0x5a, 0xd0, 0x9e, 0xea, 0x59, 0x50, 0x9b, 0xde,
	0x87, 0xd5, 0x90, 0x9e, 0xcb, 0xbe, 0xcf, 0x85, 0xd7, 0x8f, 0x86, 0xcc, 0xf7, 0xe7, 0x7b, 0x73,
	0x55, 0x61, 0x0f, 0xb8, 0xf0, 0xba, 0x0a, 0xd1, 0x85, 0xb4, 0xa1, 0xee, 0x70, 0xe2, 0x3d, 0x60,
	0x61, 0x52, 0xc6, 0x74, 0xac, 0x1b, 0xe9, 0x58, 0x4f, 0xac, 0x42, 0xab, 0xa8, 0x56, 0x13, 0xfb,
	0x2e, 0xd4, 0x14, 0xd7, 0xe1, 0x67, 0x19, 0x35, 0xce, 0xa8, 0x31, 0xbe, 0x09, 0x06, 0xd5, 0xd4,
	0xda, 0xc1, 0xfa, 0xac, 0xf6, 0x79, 0x6d, 0xc7, 0xa0, 0xf6, 0x6d, 0xa8, 0xab, 0xf1, 0x52, 0x61,
	0xad, 0xf1, 0x06, 0x94, 0x04, 0x3f, 0xcb, 0x9a, 0xb6, 0x76, 0x31, 0x31, 0xdd, 0xc8, 0xd1, 0x14,
	0xfb, 0x61, 0xe2, 0xf4, 0x48, 0xd2, 0x20, 0x4d, 0x2d, 0xbb, 0x6a, 0x4a, 0xb5, 0x85, 0x4b, 0x06,
	0x38, 0x61, 0xa8, 0x43, 0x30, 0x21, 0xfe, 0x38, 0x3b, 0x19, 0xc9, 0xc2, 0xfe, 0xaa, 0x00, 0x57,
	0x13, 0x6a, 0x28, 0x09, 0x0b, 0xa9, 0xd0, 0xb2, 0x87, 0x50, 0xcd, 0x26, 0x2c, 0xb3, 0xd5, 0x5e,
	0x94, 0x9e, 0xe3, 0x4f, 0xc7, 0x3f, 0xba, 0x1f, 0x4a, 0x11, 0x3b, 0xb3, 0x64, 0x7c, 0x07, 0xca,
	0x82, 0x13, 0x2f, 0x4a, 0xbb, 0xf2, 0xda, 0x8b, 0x54, 0x54, 0x65, 0xa9, 0x42, 0x92, 0xd4, 0xbc,
	0x93, 0x4e, 0xd8, 0x54, 0x1a, 0x23, 0x28, 0x0e, 0x69, 0xd6, 0x71, 0xf5, 0x77, 0x79, 0x5d, 0xef,
	0x15, 0x6e, 0x19, 0xcd, 0x5b, 0x00, 0x33, 0xc9, 0xff, 0x92, 0x69, 0x3f, 0x83, 0x86, 0xb2, 0xd7,
	0x7b, 0x4a, 0x83, 0x64, 0x22, 0xde, 0xcd, 0x37, 0x64, 0x3d, 0x7f, 0xfa, 0xf5, 0x83, 0x9a, 0x2b,
	0xbe, 0xad, 0x1e, 0x2c, 0x49, 0x0e, 0xed, 0x85, 0x84, 0xf9, 0xc7, 0xef, 0x68, 0x8e, 0xfd, 0x75,
	0x01, 0x4c, 0x15, 0xfe, 0x7f, 0xb6, 0xc3, 0xb7, 0xa1, 0xea, 0x66, 0xcd, 0xd7, 0x07, 0xa3, 0x76,
	0xb0, 0xf9, 0x82, 0x67, 0xe3, 0xcc, 0xd8, 0x78, 0x1f, 0x56, 0xa4, 0x6a, 0x4c, 0x64, 0x95, 0x16,
	0x4f, 0xf9, 0x85, 0xa6, 0x39, 0x29, 0x4d, 0xdd, 0x50, 0x01, 0x61, 0x61, 0x5f, 0x2f, 0xf5, 0x2d,
	0xd3, 0x70, 0xaa, 0x2a, 0xa2, 0xa9, 0xea, 0xd0, 0x3f, 0xe1, 0xe2, 0x94, 0x79, 0x7d, 0x97, 0x8f,
	0x62, 0x7d, 0xcb, 0x98, 0x0e, 0x24, 0xa1, 0x0e, 0x1f, 0xc5, 0xed, 0x6f, 0xca, 0x80, 0x3a, 0x8b,
	0xaf, 0x87, 0x26, 0xac, 0x0f, 0x17, 0x83, 0xfd, 0x8f, 0x78, 0x48, 0xd1, 0x4b, 0xf8, 0x06, 0x6c,
	0xe5, 0xb1, 0x63, 0xc2, 0xc2, 0x0e, 0x89, 0xa4, 0x4f, 0xd1, 0x0f, 0x15, 0x7c, 0x13, 0x76, 0xf2,
	0x94, 0xae, 0xcb, 0x68, 0xe8, 0xd2, 0x0e, 0x0d, 0x25, 0x15, 0xe8, 0xc7, 0x0a, 0xde, 0x81, 0x66,
	0x9e, 0xa5, 0x8a, 0x3c, 0x21, 0xbe, 0x8f, 0x7e, 0xaa, 0x60, 0x1b, 0xb6, 0xf3, 0x84, 0xc7, 0x21,
	0xe3, 0x61, 0x2a, 0xf2, 0x73, 0x05, 0x6f, 0x2e, 0x73, 0xfa, 0x21, 0x11, 0x01, 0xfa, 0xe5, 0x12,
	0xf0, 0x84, 0x73, 0x0f, 0xfd, 0x5a, 0xc1, 0x5b, 0x70, 0x6d, 0x89, 0x49, 0x49, 0xa9, 0x8f, 0x7e,
	0xab, 0xe0, 0x26, 0xac, 0xe5, 0xd1, 0x87, 0xcc, 0x47, 0xbf, 0x57, 0x70, 0x0b, 0x36, 0x97, 0xc8,
	0x12, 0x91, 0xba, 0xfa, 0xa3, 0xb2, 0xbc, 0x47, 0x5d, 0xc9, 0x05, 0x3d, 0xe4, 0xe3, 0x88, 0xa2,
	0x3f, 0x2b, 0xf8, 0x3a, 0x6c, 0xe4, 0x29, 0xf7, 0x88, 0x10, 0xc4, 0x1d, 0xa2, 0xbf, 0x2a, 0x78,
	0x1b, 0xac, 0x3c, 0xfe, 0x88, 0xfb, 0xcc, 0xa5, 0xe8, 0xef, 0x4b, 0x76, 0x38, 0x21, 0xd2, 0x7d,
	0xda, 0xe3, 0x67, 0x54, 0xa0, 0x7f, 0x2e, 0xb1, 0xd9, 0x75, 0xf9, 0x58, 0x76, 0x48, 0x30, 0x42,
	0x9f, 0x98, 0xcb, 0x5b, 0xe0, 0x10, 0x8f, 0x08, 0xf4, 0xdc, 0x5c, 0xde, 0xfe, 0x9e, 0x20, 0xea,
	0x3c, 0x3c, 0xe2, 0x91, 0x44, 0x9f, 0x9a, 0xcb, 0x9f, 0xe1, 0x21, 0x8f, 0x46, 0x4c, 0x12, 0x1f,
	0x7d, 0x66, 0x5e, 0xd2, 0x09, 0x4a, 0x87, 0x3d, 0xe2, 0xd3, 0x50, 0xa2, 0x2f, 0xcc, 0xe5, 0x9d,
	0x38, 0x66, 0xa1, 0x24, 0x03, 0x8a, 0xbe, 0x34, 0xdb, 0xdf, 0x1a, 0xb3, 0x8b, 0x2a, 0xf9, 0x04,
	0xc0, 0x16, 0xac, 0x0e, 0x2f, 0x86, 0xb2, 0xe9, 0xdc, 0x86, 0x8d, 0x45, 0xe4, 0xf1, 0x68, 0x90,
	0x98, 0x46, 0x06, 0xbe, 0x0e, 0xcd, 0x45, 0xf8, 0x84, 0x30, 0x79, 0x57, 0xbd, 0xe1, 0x28, 0x2a,
	0xe8, 0xc1, 0xcf, 0x09, 0x8b, 0x80, 0xf8, 0xa8, 0x88, 0xb7, 0xc0, 0x5a, 0xc4, 0x1c, 0xf5, 0xb1,
	0xa1, 0x94, 0x4b, 0xed, 0xcf, 0x0d, 0x40, 0x6a, 0x78, 0xb3, 0x57, 0xee, 0xec, 0x1c, 0x2d, 0x04,
	0x33, 0xa7, 0xca, 0x4a, 0x0e, 0x3b, 0x66, 0x3e, 0x93, 0x44, 0xc4, 0xc8, 0xd0, 0x95, 0xe4, 0xf0,
	0xfb, 0x2e, 0x0f, 0x79, 0x10, 0xa3, 0xc2, 0x72, 0xf8, 0x03, 0xf5, 0xed, 0xc5, 0x47, 0xa8, 0x78,
	0xba, 0xa2, 0xaf, 0x8d, 0x77, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x05, 0x96, 0x0e, 0x73,
	0x0a, 0x00, 0x00,
}
