syntax = "proto3";
package protomsg;
import "msg_common_map.proto";
import "msg_common.proto";
import "msg_common_battle.proto";

//////////////////////////////////////////////////////////////////////////
///  战斗模块 开始
//////////////////////////////////////////////////////////////////////////

// 主动技能释放
message MsgCL2GSSkillCastRequest
{
	uint32					march_index				= 1;
	uint32					skill_group_id		= 2;
	uint64					target_entity_id	= 3;
	vector2d				tar_pos						= 4;
	uint64          region_id					= 5;
}

message MsgGS2CLSkillCastReply
{
	uint64 region_id		= 1;
	int32	error_code		= 99;
}

// 战斗回合结束以后的entity数据
message BattleEntityRoundEndData
{
	uint64 entity_id = 1;		// entity_id
	bool is_dead = 2;
	int32 remain_rage                   = 3;
}

// 同步主动技能即时数据
message MsgGS2CLBattleDirectDataSyn
{	
	SkillResult skill_results			= 1;

	uint32					skill_group_id		= 2;
	uint64					target_entity_id	= 3;
	vector2d				tar_pos						= 4;

	// special
	// 冲锋的位置
	vector2d				assault_pos				= 10;
	repeated BattleEntityRoundEndData entity_data = 100;	// entity数据
}


// 同步回合数据
message MsgGS2CLBattleRoundDataSyn
{	
	repeated SkillResult skill_results			= 1;
	bool src_dead                       = 5;    // 发起方是否死亡
	int32 remain_rage                   = 6;    // 剩余怒气
	repeated BattleEntityRoundEndData entity_data = 100;	// entity数据
}

// 立即同步战斗状态
message MsgGS2CLBattleStatusChangeSyn 
{
	uint64 entity_id = 1;			// entity_id
	bool is_battle = 2;				// 是否正在战斗
	uint64 target_entity_id = 3;	// 目标的entity_id
}

// 立即同步战斗目标
message MsgGS2CLBattleTargetChangeSyn
{
	uint64 entity_id = 1;			// 自己的entity_id
	uint64 target_entity_id = 2;	// 目标的entity_id
}

// 立即同步黏住状态
message MsgGS2CLBattleStickEnemy
{
	uint64 entity_id = 1;			// 自己的entity_id
	uint64 target_entity_id = 2;	// 目标的entity_id
	bool is_stick = 3;				// 是否粘着
}

// 立即同步跳跃
message MsgGS2CLBattleStickJump
{
	uint64 entity_id = 1;			// 自己的entity_id
	uint64 target_entity_id = 2;	// 目标的entity_id
	vector2d cur_pos = 3;			// 当前位置
	vector2d tar_pos = 4;			// 跳跃的位置
}

// 准备释放技能
message MsgGS2CLBattlePrepareUseSkill
{
    uint64 enitity_id  = 1;			// 准备释放技能的英雄id
	uint32 hero_id = 2;			// 英雄id.队友hero.csv的id
	uint32 skill_id = 3;		// 对应skills.csv里面的id
}

//////////////////////////////////////////////////////////////////////////
///  战斗模块 结束
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
///  战斗日志开始
//////////////////////////////////////////////////////////////////////////

// 请求战斗日志
message MsgCL2GSGetBattleDetailLogRequest
{
	repeated BattleDetailLogSimple report_simple = 1;		// 请求战报的简单信息.可以请求多份
}

// 响应战斗日志
message MsgGS2CLGetBattleDetailLogReply
{
	repeated bytes all_log = 1;  // 所有战报(message BattleDetailLog.要先解压缩)
	int32	error_code		= 99;
}

// 请求战斗邮件缓存
message MsgCL2GSGetBattleMailCacheRequest
{
	string url = 2;
}

// 响应战斗邮件缓存
message MsgGS2CLGetBattleMailCacheReply
{
	bytes battle_mail = 1;  // 所有战报(message BattleMail,要先解压缩)
	string url = 2;
	int32	error_code		= 99;
}

// 进入战斗同步(注意是首次进入战斗).目前只有city类型的才会同步这个包
message MsgGS2CLEnterBattleSyn 
{
	uint64 entity_id = 1;
	repeated TroopData init_troops          = 2;    // 初始兵团
}


//////////////////////////////////////////////////////////////////////////
///  战斗日志结束
//////////////////////////////////////////////////////////////////////////