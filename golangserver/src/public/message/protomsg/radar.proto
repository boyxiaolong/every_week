syntax = "proto3";
package protomsg;

import "msg_common.proto";
import "msg_common_radar.proto";

// 雷达系统所有信息通知
message MsgGS2CLRadarAllInfoNotice 
{
	int32 level			= 1;		// 等级
	int32 exp			= 2;		// 经验
	int32 daily_count	= 3;		// 已完成的每日雷达数量
	int64 next_time		= 4;		// 下一个每日刷新时间
	vector2d castle_pos	= 6;		// 城堡坐标
	vector2d bottom_pos	= 7;		// 左下坐标
	vector2d top_pos	= 8;		// 右上坐标
	
	repeated RadarData radars = 5;	// 雷达数据

	int32 left_radar_num = 10;//剩余未刷新次数
}

// 雷达系统基础信息更新通知
message MsgGS2CLRadarBaseInfoNotice
{
	int32 level				= 1;	// 等级
	int32 exp				= 2;	// 经验
	int32 daily_count		= 3;	// 已分配的每日雷达数量
	int64 next_time			= 4;	// 下一个每日刷新时间
	vector2d castle_pos		= 5;
	vector2d bottom_pos		= 6;
	vector2d top_pos		= 7;
	int32 left_radar_num = 10;//剩余未刷新次数
}

// 雷达系统雷达信息更新通知
message MsgGS2CLRadarInfoNotice
{
	RadarData radar	= 1;			// 雷达数据
}

// 雷达系统删除雷达信息通知
message MsgGS2CLDelRadarNotice
{
	uint32 	radar_id = 1;			// 雷达编号
}

// 雷达系统接受请求
message MsgCL2GSRadarAcceptRequest
{
	uint32 	radar_id = 1;			// 雷达编号
}

// 雷达系统接受回应
message MsgGS2CLRadarAcceptReply
{
	uint32 	radar_id = 1;			// 雷达编号
	int32	error_code = 99;		// 结果和错误码
}

// 雷达系统领取奖励请求
message MsgCL2GSRadarRewardRequest
{
	uint32 	radar_id = 1;			// 雷达编号
}

// 雷达系统领取奖励回应
message MsgGS2CLRadarRewardReply
{
	uint32 	radar_id = 1;			// 雷达编号
	repeated Resource rewards = 2;	// 奖品信息
	int32	error_code = 99;		// 结果和错误码
}

// 雷达系统刷新请求
message MsgCL2GSRadarRefreshRequest
{
}

// 雷达系统刷新回应
message MsgGS2CLRadarRefreshReply
{
	int32	error_code = 99;		// 结果和错误码
}

///////////////////////////////////////////////////////////////

// 虚拟队列更新信息通知
message MsgGS2CLVirtualQueueUpdateInfoNotice 
{
	uint64	map_id	= 1;			// 地图id
	VirtualQueueData queues = 2;	// 虚拟队列数据
}

// 虚拟队列完成请求
message MsgCL2GSVirtualQueueCompleteRequest
{
	uint64	map_id	= 1;			// 地图id
	uint32 	queue_id = 2;			// 虚拟队列编号
}

// 虚拟队列完成回应
message MsgGS2CLVirtualQueueCompleteReply
{
	uint64	map_id	= 1;			// 地图id
	uint32 	queue_id = 2;			// 虚拟队列编号
	int32	error_code = 99;		// 结果和错误码
}

// 虚拟队列接受请求
message MsgCL2GSVirtualQueueAcceptRequest
{
	uint32 	queue_id = 1;			// 虚拟队列编号
}

// 虚拟队列接受回应
message MsgGS2CLVirtualQueueAcceptReply
{
	uint32 	queue_id = 1;			// 虚拟队列编号
	int32	error_code = 99;		// 结果和错误码
}
