syntax = "proto3";
package protomsg;
import "msg_common_city.proto";
import "msg_common_map.proto";

// 客户端请求内城信息
message MsgCL2GSCityInfoRequest
{
}

// 服务器下发内城信息
message MsgGS2CLCityInfoReply
{
  protomsg.CityInfo map = 1;
  protomsg.BuildQueueInfo queue = 2;
  int32	error_code		= 99;		// 结果和错误码
}

// 下发内城繁荣值
message MsgGS2CLProsperityNotice
{
   uint32 prosperity = 1; // 繁荣值
   bool init = 2; // 标记初始化
}

// 服务器通知客户端更新工作队列
message MsgGS2CLCityBuildQueueNotice
{
  protomsg.BuildQueueInfo queue = 1;
}

// 创建新建筑
message MsgCL2GSCityCreateBuildingRequest
{
	uint32	construction_type	= 1;		// 建筑ID，见配置表
	CityCoord	coord					= 2;		// 建筑左上角坐标
	uint32  queue_index			= 3;		// 工作队列编号（0-2）， 0表示服务器自选
}

message MsgGS2CLCityCreateBuildingReply
{
	uint32	construction_type	= 1;		// 建筑ID，见配置表
	uint32	building_id		= 2;			// 建筑动态ID
	int32	error_code		= 99;				// 结果和错误码
}

// 升级建筑
message MsgCL2GSCityUpgradeBuidlingRequest
{
	uint32	building_id			= 1;		// 建筑动态ID
	uint32  queue_index			= 2;		// 工作队列编号（0-2）， 0表示服务器自选
}

message MsgGS2CLCityUpgradeBuidlingReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;		// 结果和错误码
}

// 建筑立即升级
message MsgCL2GSCityInstantUpgrageBuildingRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
}

message MsgGS2CLCityInstantUpgrageBuildingReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;			// 结果和错误码
}

// 建筑立即完成升级
message MsgCL2GSCityImmediateCompleteRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
}

message MsgGS2CLCityImmediateCompleteReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;			// 结果和错误码
}

// 服务器通知建筑状态变化（建设、升级、取消升级、取消建设时）
message MsgGS2CLCityBuildingUpdateNotice
{
	BuildingInfo data			= 1;		// 建筑信息
}

// 取消建设/升级
message MsgCL2GSCityCancelBuildingRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
}

message MsgGS2CLCityCancelBuildingReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;		// 结果和错误码
} 

// 购买第二建筑队列时间
message MsgCL2GSCityBuyBuildQueueTimeRequest
{
	uint32	count		= 1;
}

message MsgGS2CLCityBuyBuildQueueTimeReply
{
	uint32	count		= 1;
	int32	error_code		= 99;		// 结果和错误码
}


// 移动建筑
message MsgCL2GSCityMoveBuildingRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
	CityCoord	coord			= 2;			// 目标左上角坐标
}

message MsgGS2CLCityMoveBuildingReply
{
	uint32	building_id		= 1;		// 建筑动态ID
	int32	error_code		= 99;		// 结果和错误码
}

// 移除建筑
message MsgCL2GSCityRemoveBuildingRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
}

message MsgGS2CLCityRemoveBuildingReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;		// 结果和错误码
} 

// 立即移除建筑
message MsgCL2GSCityInstantRemoveBuildingRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
}

message MsgGS2CLCityInstantRemoveBuildingReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;		// 结果和错误码
} 

// 加速移除建筑
message MsgCL2GSCitySpeedUpRemoveBuildingRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
}

message MsgGS2CLCitySpeedUpRemoveBuildingReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;		// 结果和错误码
}

// 取消移除
message MsgCL2GSCityCancelRemoveBuildingRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
}

message MsgGS2CLCityCancelRemoveBuildingReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;		// 结果和错误码
}

// 激活建筑
message MsgCL2GSCityActivateBuildingRequest
{
	uint32	building_id	= 1;			// 建筑动态ID
}

message MsgGS2CLCityActivateBuildingReply
{
	uint32	building_id	= 1;			// 建筑动态ID
	int32	error_code		= 99;		// 结果和错误码
} 

// 查看王国内指定玩家内城信息
message MsgCL2GSQueryKingdomPlayerCityInfoRequest
{
	uint64	player_id			= 1;
}

message MsgGS2CLQueryKingdomPlayerCityInfoReply
{
	uint64	player_id				= 1;
  protomsg.CityInfo map		= 2;
	int32	error_code				= 99;		// 结果和错误码
}

// 查看全服范围内指定玩家内城信息
message MsgCL2GSQueryWorldPlayerCityInfoRequest
{
	uint64	player_id			= 1;
	uint32	kingdom_id		= 3;		// 玩家所在王国ID，不知道填0
}

message MsgGS2CLQueryWorldPlayerCityInfoReply
{
	uint64	player_id				= 1;
  protomsg.CityInfo map		= 2;
	int32	error_code				= 99;		// 结果和错误码
}

message MsgGS2CLCityFindLocationNotice
{
	uint32 construction_type = 1;
	protomsg.CityCoord coord = 2;
	int32	error_code				= 99;		// 结果和错误码
}


// 请求激活战略流派
message MsgCL2GSCityActivateStrategyRequest
{
	uint32 strategy_id		= 1;
}

message MsgGS2CLCityActivateStrategyReply
{
	uint32 strategy_id		= 1;
	int32	error_code				= 99;		// 结果和错误码
}

// 策略信息通知
message MsgGS2CLCityStrategyInfoNotice
{
	uint32 strategy_id		= 1;		// 当前策略ID
	bool is_activated			= 2;		// 是否已激活
	int64 activate_time		= 3;		// 激活时间
}

// 施放主动技
message MsgCL2GSCityCastLordSkillRequest
{

}

message MsgGS2CLCityCastLordSkillReply
{
	int32	error_code				= 99;		// 结果和错误码
}

// 主动技CD时间通知
message MsgGS2CLCityLordSkillCDNotice
{
	int64 next_lord_skill_time = 1;
}


// 添加道路
message MsgCL2GSCityAddRoadRequest
{
	repeated CityCoord coords		= 1;
	uint32	road_type						= 2;
}

message MsgGS2CLCityAddRoadReply
{
	repeated CityCoord coords		= 1;
	uint32	road_type						= 2;
	int32	error_code				= 99;		// 结果和错误码
}

// 移除道路
message MsgCL2GSCityRemoveRoadRequest
{
	repeated CityCoord coords		= 1;	
}

message MsgGS2CLCityRemoveRoadReply
{
	repeated CityCoord coords		= 1;
	int32	error_code				= 99;		// 结果和错误码
}

// 移动道路
message MsgCL2GSCityMoveRoadRequest
{
	repeated CityCoord olds		= 1;		// 旧有道路
	repeated CityCoord news		= 2;		// 新路信息（二者要严格一一对应)
}

message MsgGS2CLCityMoveRoadReply
{
	repeated CityCoord olds		= 1;		// 旧有道路
	repeated CityCoord news		= 2;		// 新路信息（二者要严格一一对应)
	int32	error_code				= 99;		// 结果和错误码
}


// 客户端请求查看副本内所有建筑等级
message MsgCL2GSCityInstanceBuildingsRequest
{
	uint64 region_id = 1;
}

message MsgGS2CLCityInstanceBuildingsReply
{
	MapBuildingData data = 1;
	int32	error_code				= 99;		// 结果和错误码
}

/////////////////////////////////////////////////////////////////////////////

message MsgGS2CLCityContainerInfoNotice
{
	CityContainerInfo container = 1;
}

// 收纳装饰建筑
message MsgCL2GSCityStoreBuildingRequest
{
	uint32 building_id = 1;
}

message MsgGS2CLCityStoreBuildingReply
{
	uint32 building_id = 1;
	int32	error_code				= 99;		// 结果和错误码
}

// 取出装饰建筑
message MsgCL2GSCityFetchBuildingRequest
{
	uint32 contruction_type = 1;
	CityCoord	coord					= 2;		// 建筑左上角坐标
}

message MsgGS2CLCityFetchBuildingReply
{
	uint32 contruction_type = 1;
	CityCoord	coord					= 2;		// 建筑左上角坐标
	int32	error_code				= 99;		// 结果和错误码
}


// 收纳道路
message MsgCL2GSCityStoreRoadRequest
{
	repeated CityCoord coords		= 1;	
}

message MsgGS2CLCityStoreRoadReply
{
	repeated CityCoord coords		= 1;
	int32	error_code				= 99;		// 结果和错误码
}

// 取出道路
message MsgCL2GSCityFetchRoadRequest
{
	repeated CityCoord coords		= 1;
	uint32	road_type						= 2;
}

message MsgGS2CLCityFetchRoadReply
{
	repeated CityCoord coords		= 1;
	uint32	road_type						= 2;
	int32	error_code						= 99;		// 结果和错误码
}

message MsgCL2GSCityBuyToContainterRequest
{
	map<uint32, uint32> buildings = 1;		// 建筑类型, 数量
	map<uint32, uint32> roads = 2;				// 道路类型， 数量
}

message MsgGS2CLCityBuyToContainerReply
{
	int32	error_code						= 99;		// 结果和错误码
}


// 复制玩家内城建设方案7
message MsgCL2GSCityCopyThemeRequest
{
	uint64 target_player_id			= 1;
	uint32 theme_index					= 2;	// 自己的方案索引(从1开始)
}

message MsgGS2CLCityCopyThemeReply
{
	uint64 target_player_id			= 1;
	uint32 theme_index					= 2;
	CityThemeInfo theme					= 3;
	int32	error_code						= 99;	// 结果和错误码
}

// 更新保存内城建设方案
message MsgCL2GSCityUpdateThemeRequest
{
	uint32 theme_index					= 1;
	CityThemeInfo theme					= 2;
}

message MsgGS2CLCityUpdateThemeReply
{
	uint32 theme_index					= 1;
	int32	error_code						= 99;	// 结果和错误码
}

// 应用指定内城建设方案
message MsgCL2GSCityApplyThemeRequest
{
	uint32 theme_index					= 1;
}

message MsgGS2CLCityApplyThemeReply
{
	uint32 theme_index					= 1;
	int32	error_code						= 99;	// 结果和错误码
}

// 设置是否禁止复制
message MsgCL2GSCityUpdateForbidCopyRequest
{
	bool forbid_copy	= 1;
}

message MsgGS2CLCityUpdateForbidCopyReply
{
	bool forbid_copy	= 1;
	int32	error_code						= 99;	// 结果和错误码
}

// 使用VIP时间，立刻完成
message MsgCL2GSCityVipFreeTimeRequest
{
	uint32	building_id			= 1;			// 建筑动态ID
}

message MsgGS2CLCityVipFreeTimeReply
{
	uint32	building_id			= 1;	// 建筑动态ID
	int32	error_code				= 99;	// 结果和错误码
}
