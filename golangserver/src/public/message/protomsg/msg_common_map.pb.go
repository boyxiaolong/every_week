// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_common_map.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RegionType int32

const (
	RegionType_kRegionType_None       RegionType = 0
	RegionType_kRegionType_Kingdom    RegionType = 1
	RegionType_kRegionType_KVK        RegionType = 2
	RegionType_kRegionType_Expedition RegionType = 3
	RegionType_kRegionType_Pompeii    RegionType = 4
	RegionType_kRegionType_Guide      RegionType = 65534
)

var RegionType_name = map[int32]string{
	0:     "kRegionType_None",
	1:     "kRegionType_Kingdom",
	2:     "kRegionType_KVK",
	3:     "kRegionType_Expedition",
	4:     "kRegionType_Pompeii",
	65534: "kRegionType_Guide",
}
var RegionType_value = map[string]int32{
	"kRegionType_None":       0,
	"kRegionType_Kingdom":    1,
	"kRegionType_KVK":        2,
	"kRegionType_Expedition": 3,
	"kRegionType_Pompeii":    4,
	"kRegionType_Guide":      65534,
}

func (x RegionType) String() string {
	return proto.EnumName(RegionType_name, int32(x))
}
func (RegionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{0} }

type EntityMonitorType int32

const (
	EntityMonitorType_kEntityMonitorType_None   EntityMonitorType = 0
	EntityMonitorType_kEntityMonitorType_View   EntityMonitorType = 1
	EntityMonitorType_kEntityMonitorType_World  EntityMonitorType = 2
	EntityMonitorType_kEntityMonitorType_Player EntityMonitorType = 3
	EntityMonitorType_kEntityMonitorType_Guild  EntityMonitorType = 4
	EntityMonitorType_kEntityMonitorType_Alarm  EntityMonitorType = 5
)

var EntityMonitorType_name = map[int32]string{
	0: "kEntityMonitorType_None",
	1: "kEntityMonitorType_View",
	2: "kEntityMonitorType_World",
	3: "kEntityMonitorType_Player",
	4: "kEntityMonitorType_Guild",
	5: "kEntityMonitorType_Alarm",
}
var EntityMonitorType_value = map[string]int32{
	"kEntityMonitorType_None":   0,
	"kEntityMonitorType_View":   1,
	"kEntityMonitorType_World":  2,
	"kEntityMonitorType_Player": 3,
	"kEntityMonitorType_Guild":  4,
	"kEntityMonitorType_Alarm":  5,
}

func (x EntityMonitorType) String() string {
	return proto.EnumName(EntityMonitorType_name, int32(x))
}
func (EntityMonitorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{1} }

type EntityType int32

const (
	EntityType_kEntityType_None                   EntityType = 0
	EntityType_kEntityType_March                  EntityType = 1
	EntityType_kEntityType_GuildMarch             EntityType = 2
	EntityType_kEntityType_Castle                 EntityType = 101
	EntityType_kEntityType_Collect                EntityType = 103
	EntityType_kEntityType_GuildFort              EntityType = 104
	EntityType_kEntityType_GuildFlag              EntityType = 105
	EntityType_kEntityType_Temple                 EntityType = 106
	EntityType_kEntityType_Pass                   EntityType = 107
	EntityType_kEntityType_PompeiiBuildPoint      EntityType = 108
	EntityType_kEntityType_PompeiiBuildRelocate   EntityType = 109
	EntityType_kEntityType_PompeiiLab             EntityType = 110
	EntityType_kEntityType_PompeiiCultureTank     EntityType = 111
	EntityType_kEntityType_PompeiiTrainStation    EntityType = 112
	EntityType_kEntityType_PompeiiRailwayPlatform EntityType = 113
	EntityType_kEntityType_Train                  EntityType = 114
	EntityType_kEntityType_Scout                  EntityType = 200
	EntityType_kEntityType_Summon                 EntityType = 201
	EntityType_kEntityType_Trap                   EntityType = 202
	EntityType_kEntityType_GuildResourceField     EntityType = 203
	EntityType_kEntityType_GuildCollect           EntityType = 204
	EntityType_kEntityType_Cave                   EntityType = 205
	EntityType_kEntityType_Village                EntityType = 206
	EntityType_kEntityType_Carriage               EntityType = 207
	// 各种怪物 (1000 ~ 1999)
	EntityType_kEntityType_GenericMonster           EntityType = 1000
	EntityType_kEntityType_SummonMonster            EntityType = 1001
	EntityType_kEntityType_ExpeStronghold           EntityType = 1002
	EntityType_kEntityType_Barbarians               EntityType = 1003
	EntityType_kEntityType_BarbarianFort            EntityType = 1004
	EntityType_kEntityType_ExpeEnemyFort            EntityType = 1005
	EntityType_kEntityType_ExpeGroupMarch           EntityType = 1006
	EntityType_kEntityType_TrafficUnit              EntityType = 1007
	EntityType_kEntityType_PompeiiMonster           EntityType = 1008
	EntityType_kEntityType_PompeiiBoss              EntityType = 1009
	EntityType_kEntityType_PrivateRadarMonster      EntityType = 1010
	EntityType_kEntityType_PublicRadarMonster       EntityType = 1011
	EntityType_kEntityType_VirtualQueue             EntityType = 10007
	EntityType_kEntityType_TempleGuardMonster       EntityType = 1101
	EntityType_kEntityType_Catapult                 EntityType = 1102
	EntityType_kEntityType_NpcForceBarbarians       EntityType = 1201
	EntityType_kEntityType_NpcForceFort             EntityType = 1202
	EntityType_kEntityType_NpcForceAttackStronghold EntityType = 1203
	EntityType_kEntityType_MonsterEnd               EntityType = 1999
	EntityType_kEntityType_TempleWall               EntityType = 2000
	EntityType_kEntityType_Drop                     EntityType = 2001
	EntityType_kEntityType_StrongHold               EntityType = 2002
	EntityType_kEntityType_TempleVirtualWall        EntityType = 2003
)

var EntityType_name = map[int32]string{
	0:     "kEntityType_None",
	1:     "kEntityType_March",
	2:     "kEntityType_GuildMarch",
	101:   "kEntityType_Castle",
	103:   "kEntityType_Collect",
	104:   "kEntityType_GuildFort",
	105:   "kEntityType_GuildFlag",
	106:   "kEntityType_Temple",
	107:   "kEntityType_Pass",
	108:   "kEntityType_PompeiiBuildPoint",
	109:   "kEntityType_PompeiiBuildRelocate",
	110:   "kEntityType_PompeiiLab",
	111:   "kEntityType_PompeiiCultureTank",
	112:   "kEntityType_PompeiiTrainStation",
	113:   "kEntityType_PompeiiRailwayPlatform",
	114:   "kEntityType_Train",
	200:   "kEntityType_Scout",
	201:   "kEntityType_Summon",
	202:   "kEntityType_Trap",
	203:   "kEntityType_GuildResourceField",
	204:   "kEntityType_GuildCollect",
	205:   "kEntityType_Cave",
	206:   "kEntityType_Village",
	207:   "kEntityType_Carriage",
	1000:  "kEntityType_GenericMonster",
	1001:  "kEntityType_SummonMonster",
	1002:  "kEntityType_ExpeStronghold",
	1003:  "kEntityType_Barbarians",
	1004:  "kEntityType_BarbarianFort",
	1005:  "kEntityType_ExpeEnemyFort",
	1006:  "kEntityType_ExpeGroupMarch",
	1007:  "kEntityType_TrafficUnit",
	1008:  "kEntityType_PompeiiMonster",
	1009:  "kEntityType_PompeiiBoss",
	1010:  "kEntityType_PrivateRadarMonster",
	1011:  "kEntityType_PublicRadarMonster",
	10007: "kEntityType_VirtualQueue",
	1101:  "kEntityType_TempleGuardMonster",
	1102:  "kEntityType_Catapult",
	1201:  "kEntityType_NpcForceBarbarians",
	1202:  "kEntityType_NpcForceFort",
	1203:  "kEntityType_NpcForceAttackStronghold",
	1999:  "kEntityType_MonsterEnd",
	2000:  "kEntityType_TempleWall",
	2001:  "kEntityType_Drop",
	2002:  "kEntityType_StrongHold",
	2003:  "kEntityType_TempleVirtualWall",
}
var EntityType_value = map[string]int32{
	"kEntityType_None":                     0,
	"kEntityType_March":                    1,
	"kEntityType_GuildMarch":               2,
	"kEntityType_Castle":                   101,
	"kEntityType_Collect":                  103,
	"kEntityType_GuildFort":                104,
	"kEntityType_GuildFlag":                105,
	"kEntityType_Temple":                   106,
	"kEntityType_Pass":                     107,
	"kEntityType_PompeiiBuildPoint":        108,
	"kEntityType_PompeiiBuildRelocate":     109,
	"kEntityType_PompeiiLab":               110,
	"kEntityType_PompeiiCultureTank":       111,
	"kEntityType_PompeiiTrainStation":      112,
	"kEntityType_PompeiiRailwayPlatform":   113,
	"kEntityType_Train":                    114,
	"kEntityType_Scout":                    200,
	"kEntityType_Summon":                   201,
	"kEntityType_Trap":                     202,
	"kEntityType_GuildResourceField":       203,
	"kEntityType_GuildCollect":             204,
	"kEntityType_Cave":                     205,
	"kEntityType_Village":                  206,
	"kEntityType_Carriage":                 207,
	"kEntityType_GenericMonster":           1000,
	"kEntityType_SummonMonster":            1001,
	"kEntityType_ExpeStronghold":           1002,
	"kEntityType_Barbarians":               1003,
	"kEntityType_BarbarianFort":            1004,
	"kEntityType_ExpeEnemyFort":            1005,
	"kEntityType_ExpeGroupMarch":           1006,
	"kEntityType_TrafficUnit":              1007,
	"kEntityType_PompeiiMonster":           1008,
	"kEntityType_PompeiiBoss":              1009,
	"kEntityType_PrivateRadarMonster":      1010,
	"kEntityType_PublicRadarMonster":       1011,
	"kEntityType_VirtualQueue":             10007,
	"kEntityType_TempleGuardMonster":       1101,
	"kEntityType_Catapult":                 1102,
	"kEntityType_NpcForceBarbarians":       1201,
	"kEntityType_NpcForceFort":             1202,
	"kEntityType_NpcForceAttackStronghold": 1203,
	"kEntityType_MonsterEnd":               1999,
	"kEntityType_TempleWall":               2000,
	"kEntityType_Drop":                     2001,
	"kEntityType_StrongHold":               2002,
	"kEntityType_TempleVirtualWall":        2003,
}

func (x EntityType) String() string {
	return proto.EnumName(EntityType_name, int32(x))
}
func (EntityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{2} }

// 掉落物类型
type DropItemType int32

const (
	DropItemType_kDropItemType_None DropItemType = 0
	DropItemType_kDropItemType_Rune DropItemType = 1
)

var DropItemType_name = map[int32]string{
	0: "kDropItemType_None",
	1: "kDropItemType_Rune",
}
var DropItemType_value = map[string]int32{
	"kDropItemType_None": 0,
	"kDropItemType_Rune": 1,
}

func (x DropItemType) String() string {
	return proto.EnumName(DropItemType_name, int32(x))
}
func (DropItemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{3} }

type EntityPropertyType int32

const (
	EntityPropertyType_kEntityPropertyType_None          EntityPropertyType = 0
	EntityPropertyType_kEntityPropertyType_Map           EntityPropertyType = 1
	EntityPropertyType_kEntityPropertyType_Owner         EntityPropertyType = 2
	EntityPropertyType_kEntityPropertyType_Move          EntityPropertyType = 4
	EntityPropertyType_kEntityPropertyType_GuildBuilding EntityPropertyType = 5
	EntityPropertyType_kEntityPropertyType_Army          EntityPropertyType = 6
	EntityPropertyType_kEntityPropertyType_Pass          EntityPropertyType = 7
	EntityPropertyType_kEntityPropertyType_Temple        EntityPropertyType = 8
	EntityPropertyType_kEntityPropertyType_Collect       EntityPropertyType = 9
	EntityPropertyType_kEntityPropertyType_Reenforce     EntityPropertyType = 10
	EntityPropertyType_kEntityPropertyType_BarbarianFort EntityPropertyType = 11
	EntityPropertyType_kEntityPropertyType_Barbarian     EntityPropertyType = 12
	// kEntityPropertyType_KillBarbarian = 13;
	EntityPropertyType_kEntityPropertyType_CityWall            EntityPropertyType = 14
	EntityPropertyType_kEntityPropertyType_EntityType          EntityPropertyType = 15
	EntityPropertyType_kEntityPropertyType_MarchCommand        EntityPropertyType = 16
	EntityPropertyType_kEntityPropertyType_March               EntityPropertyType = 17
	EntityPropertyType_kEntityPropertyType_Resource            EntityPropertyType = 18
	EntityPropertyType_kEntityPropertyType_GuildMarch          EntityPropertyType = 19
	EntityPropertyType_kEntityPropertyType_CastleExtendData    EntityPropertyType = 20
	EntityPropertyType_kEntityPropertyType_AttackTarget        EntityPropertyType = 21
	EntityPropertyType_kEntityPropertyType_MoveSpeed           EntityPropertyType = 22
	EntityPropertyType_kEntityPropertyType_Alarm               EntityPropertyType = 23
	EntityPropertyType_kEntityPropertyType_SkillStatus         EntityPropertyType = 24
	EntityPropertyType_kEntityPropertyType_MultiStrike         EntityPropertyType = 26
	EntityPropertyType_kEntityPropertyType_BattleStatus        EntityPropertyType = 27
	EntityPropertyType_kEntityPropertyType_ScoutCommand        EntityPropertyType = 28
	EntityPropertyType_kEntityPropertyType_Scout               EntityPropertyType = 29
	EntityPropertyType_kEntityPropertyType_Summon              EntityPropertyType = 30
	EntityPropertyType_kEntityPropertyType_Trap                EntityPropertyType = 31
	EntityPropertyType_kEntityPropertyType_GuildCollect        EntityPropertyType = 32
	EntityPropertyType_kEntityPropertyType_GenericMonster      EntityPropertyType = 33
	EntityPropertyType_kEntityPropertyType_SummonMonster       EntityPropertyType = 34
	EntityPropertyType_kEntityPropertyType_ExpeStronghold      EntityPropertyType = 35
	EntityPropertyType_kEntityPropertyType_ReenforceData       EntityPropertyType = 36
	EntityPropertyType_kEntityPropertyType_ExpeEnemyFort       EntityPropertyType = 37
	EntityPropertyType_kEntityPropertyType_MovePath            EntityPropertyType = 38
	EntityPropertyType_kEntityPropertyType_PompeiiBuild        EntityPropertyType = 39
	EntityPropertyType_kEntityPropertyType_Static_Enemy        EntityPropertyType = 40
	EntityPropertyType_kEntityPropertyType_ExpeGroupMarch      EntityPropertyType = 41
	EntityPropertyType_kEntityPropertyType_TrafficUnit         EntityPropertyType = 42
	EntityPropertyType_kEntityPropertyType_CarriageData        EntityPropertyType = 43
	EntityPropertyType_kEntityPropertyType_GarrisonHero        EntityPropertyType = 44
	EntityPropertyType_kEntityPropertyType_PompeiiMonster      EntityPropertyType = 45
	EntityPropertyType_kEntityPropertyType_PompeiiBoss         EntityPropertyType = 46
	EntityPropertyType_kEntityPropertyType_GuildMarchLimit     EntityPropertyType = 47
	EntityPropertyType_kEntityPropertyType_KingdomTitle        EntityPropertyType = 48
	EntityPropertyType_kEntityPropertyType_ScoutExtendData     EntityPropertyType = 49
	EntityPropertyType_kEntityPropertyType_BaseArmy            EntityPropertyType = 50
	EntityPropertyType_kEntityPropertyType_PompeiiLab          EntityPropertyType = 51
	EntityPropertyType_kEntityPropertyType_PompeiiCultureTank  EntityPropertyType = 52
	EntityPropertyType_kEntityPropertyType_PickUp              EntityPropertyType = 53
	EntityPropertyType_kEntityPropertyType_TrainStation        EntityPropertyType = 54
	EntityPropertyType_kEntityPropertyType_RailwayPlatform     EntityPropertyType = 55
	EntityPropertyType_kEntityPropertyType_Train               EntityPropertyType = 56
	EntityPropertyType_kEntityPropertyType_PrivateRadarMonster EntityPropertyType = 57
	EntityPropertyType_kEntityPropertyType_PublicRadarMonster  EntityPropertyType = 58
	EntityPropertyType_kEntityPropertyType_TempleWall          EntityPropertyType = 59
	EntityPropertyType_kEntityPropertyType_Drop                EntityPropertyType = 60
	EntityPropertyType_kEntityPropertyType_TempleMonsterGuard  EntityPropertyType = 61
	EntityPropertyType_kEntityPropertyType_StrongHold          EntityPropertyType = 62
	EntityPropertyType_kEntityPropertyType_TempleVirtualWall   EntityPropertyType = 63
	EntityPropertyType_kEntityPropertyType_Catapult            EntityPropertyType = 64
	EntityPropertyType_kEntityPropertyType_WallPillage         EntityPropertyType = 65
	EntityPropertyType_kEntityPropertyType_NpcFort             EntityPropertyType = 66
	EntityPropertyType_kEntityPropertyType_NpcBarbarian        EntityPropertyType = 67
)

var EntityPropertyType_name = map[int32]string{
	0:  "kEntityPropertyType_None",
	1:  "kEntityPropertyType_Map",
	2:  "kEntityPropertyType_Owner",
	4:  "kEntityPropertyType_Move",
	5:  "kEntityPropertyType_GuildBuilding",
	6:  "kEntityPropertyType_Army",
	7:  "kEntityPropertyType_Pass",
	8:  "kEntityPropertyType_Temple",
	9:  "kEntityPropertyType_Collect",
	10: "kEntityPropertyType_Reenforce",
	11: "kEntityPropertyType_BarbarianFort",
	12: "kEntityPropertyType_Barbarian",
	14: "kEntityPropertyType_CityWall",
	15: "kEntityPropertyType_EntityType",
	16: "kEntityPropertyType_MarchCommand",
	17: "kEntityPropertyType_March",
	18: "kEntityPropertyType_Resource",
	19: "kEntityPropertyType_GuildMarch",
	20: "kEntityPropertyType_CastleExtendData",
	21: "kEntityPropertyType_AttackTarget",
	22: "kEntityPropertyType_MoveSpeed",
	23: "kEntityPropertyType_Alarm",
	24: "kEntityPropertyType_SkillStatus",
	26: "kEntityPropertyType_MultiStrike",
	27: "kEntityPropertyType_BattleStatus",
	28: "kEntityPropertyType_ScoutCommand",
	29: "kEntityPropertyType_Scout",
	30: "kEntityPropertyType_Summon",
	31: "kEntityPropertyType_Trap",
	32: "kEntityPropertyType_GuildCollect",
	33: "kEntityPropertyType_GenericMonster",
	34: "kEntityPropertyType_SummonMonster",
	35: "kEntityPropertyType_ExpeStronghold",
	36: "kEntityPropertyType_ReenforceData",
	37: "kEntityPropertyType_ExpeEnemyFort",
	38: "kEntityPropertyType_MovePath",
	39: "kEntityPropertyType_PompeiiBuild",
	40: "kEntityPropertyType_Static_Enemy",
	41: "kEntityPropertyType_ExpeGroupMarch",
	42: "kEntityPropertyType_TrafficUnit",
	43: "kEntityPropertyType_CarriageData",
	44: "kEntityPropertyType_GarrisonHero",
	45: "kEntityPropertyType_PompeiiMonster",
	46: "kEntityPropertyType_PompeiiBoss",
	47: "kEntityPropertyType_GuildMarchLimit",
	48: "kEntityPropertyType_KingdomTitle",
	49: "kEntityPropertyType_ScoutExtendData",
	50: "kEntityPropertyType_BaseArmy",
	51: "kEntityPropertyType_PompeiiLab",
	52: "kEntityPropertyType_PompeiiCultureTank",
	53: "kEntityPropertyType_PickUp",
	54: "kEntityPropertyType_TrainStation",
	55: "kEntityPropertyType_RailwayPlatform",
	56: "kEntityPropertyType_Train",
	57: "kEntityPropertyType_PrivateRadarMonster",
	58: "kEntityPropertyType_PublicRadarMonster",
	59: "kEntityPropertyType_TempleWall",
	60: "kEntityPropertyType_Drop",
	61: "kEntityPropertyType_TempleMonsterGuard",
	62: "kEntityPropertyType_StrongHold",
	63: "kEntityPropertyType_TempleVirtualWall",
	64: "kEntityPropertyType_Catapult",
	65: "kEntityPropertyType_WallPillage",
	66: "kEntityPropertyType_NpcFort",
	67: "kEntityPropertyType_NpcBarbarian",
}
var EntityPropertyType_value = map[string]int32{
	"kEntityPropertyType_None":                0,
	"kEntityPropertyType_Map":                 1,
	"kEntityPropertyType_Owner":               2,
	"kEntityPropertyType_Move":                4,
	"kEntityPropertyType_GuildBuilding":       5,
	"kEntityPropertyType_Army":                6,
	"kEntityPropertyType_Pass":                7,
	"kEntityPropertyType_Temple":              8,
	"kEntityPropertyType_Collect":             9,
	"kEntityPropertyType_Reenforce":           10,
	"kEntityPropertyType_BarbarianFort":       11,
	"kEntityPropertyType_Barbarian":           12,
	"kEntityPropertyType_CityWall":            14,
	"kEntityPropertyType_EntityType":          15,
	"kEntityPropertyType_MarchCommand":        16,
	"kEntityPropertyType_March":               17,
	"kEntityPropertyType_Resource":            18,
	"kEntityPropertyType_GuildMarch":          19,
	"kEntityPropertyType_CastleExtendData":    20,
	"kEntityPropertyType_AttackTarget":        21,
	"kEntityPropertyType_MoveSpeed":           22,
	"kEntityPropertyType_Alarm":               23,
	"kEntityPropertyType_SkillStatus":         24,
	"kEntityPropertyType_MultiStrike":         26,
	"kEntityPropertyType_BattleStatus":        27,
	"kEntityPropertyType_ScoutCommand":        28,
	"kEntityPropertyType_Scout":               29,
	"kEntityPropertyType_Summon":              30,
	"kEntityPropertyType_Trap":                31,
	"kEntityPropertyType_GuildCollect":        32,
	"kEntityPropertyType_GenericMonster":      33,
	"kEntityPropertyType_SummonMonster":       34,
	"kEntityPropertyType_ExpeStronghold":      35,
	"kEntityPropertyType_ReenforceData":       36,
	"kEntityPropertyType_ExpeEnemyFort":       37,
	"kEntityPropertyType_MovePath":            38,
	"kEntityPropertyType_PompeiiBuild":        39,
	"kEntityPropertyType_Static_Enemy":        40,
	"kEntityPropertyType_ExpeGroupMarch":      41,
	"kEntityPropertyType_TrafficUnit":         42,
	"kEntityPropertyType_CarriageData":        43,
	"kEntityPropertyType_GarrisonHero":        44,
	"kEntityPropertyType_PompeiiMonster":      45,
	"kEntityPropertyType_PompeiiBoss":         46,
	"kEntityPropertyType_GuildMarchLimit":     47,
	"kEntityPropertyType_KingdomTitle":        48,
	"kEntityPropertyType_ScoutExtendData":     49,
	"kEntityPropertyType_BaseArmy":            50,
	"kEntityPropertyType_PompeiiLab":          51,
	"kEntityPropertyType_PompeiiCultureTank":  52,
	"kEntityPropertyType_PickUp":              53,
	"kEntityPropertyType_TrainStation":        54,
	"kEntityPropertyType_RailwayPlatform":     55,
	"kEntityPropertyType_Train":               56,
	"kEntityPropertyType_PrivateRadarMonster": 57,
	"kEntityPropertyType_PublicRadarMonster":  58,
	"kEntityPropertyType_TempleWall":          59,
	"kEntityPropertyType_Drop":                60,
	"kEntityPropertyType_TempleMonsterGuard":  61,
	"kEntityPropertyType_StrongHold":          62,
	"kEntityPropertyType_TempleVirtualWall":   63,
	"kEntityPropertyType_Catapult":            64,
	"kEntityPropertyType_WallPillage":         65,
	"kEntityPropertyType_NpcFort":             66,
	"kEntityPropertyType_NpcBarbarian":        67,
}

func (x EntityPropertyType) String() string {
	return proto.EnumName(EntityPropertyType_name, int32(x))
}
func (EntityPropertyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{4} }

// 领土归属建筑类型
type MapTerritoryType int32

const (
	MapTerritoryType_kMapTerritoryType_None       MapTerritoryType = 0
	MapTerritoryType_kMapTerritoryType_Temple     MapTerritoryType = 1
	MapTerritoryType_kMapTerritoryType_Pass       MapTerritoryType = 2
	MapTerritoryType_kMapTerritoryType_Stronghold MapTerritoryType = 3
)

var MapTerritoryType_name = map[int32]string{
	0: "kMapTerritoryType_None",
	1: "kMapTerritoryType_Temple",
	2: "kMapTerritoryType_Pass",
	3: "kMapTerritoryType_Stronghold",
}
var MapTerritoryType_value = map[string]int32{
	"kMapTerritoryType_None":       0,
	"kMapTerritoryType_Temple":     1,
	"kMapTerritoryType_Pass":       2,
	"kMapTerritoryType_Stronghold": 3,
}

func (x MapTerritoryType) String() string {
	return proto.EnumName(MapTerritoryType_name, int32(x))
}
func (MapTerritoryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{5} }

type TroopType int32

const (
	TroopType_kTroopType_None       TroopType = 0
	TroopType_kTroopType_Infantry   TroopType = 1
	TroopType_kTroopType_Cavalry    TroopType = 2
	TroopType_kTroopType_Archer     TroopType = 3
	TroopType_kTroopType_Siege      TroopType = 4
	TroopType_kTroopType_WatchTower TroopType = 5
)

var TroopType_name = map[int32]string{
	0: "kTroopType_None",
	1: "kTroopType_Infantry",
	2: "kTroopType_Cavalry",
	3: "kTroopType_Archer",
	4: "kTroopType_Siege",
	5: "kTroopType_WatchTower",
}
var TroopType_value = map[string]int32{
	"kTroopType_None":       0,
	"kTroopType_Infantry":   1,
	"kTroopType_Cavalry":    2,
	"kTroopType_Archer":     3,
	"kTroopType_Siege":      4,
	"kTroopType_WatchTower": 5,
}

func (x TroopType) String() string {
	return proto.EnumName(TroopType_name, int32(x))
}
func (TroopType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{6} }

// 城池行政等级
type TemplePoliticalLv int32

const (
	TemplePoliticalLv_KTPLNONE TemplePoliticalLv = 0
	TemplePoliticalLv_kTPLS    TemplePoliticalLv = 1
	TemplePoliticalLv_kTPLA    TemplePoliticalLv = 2
	TemplePoliticalLv_kTPLB    TemplePoliticalLv = 3
	TemplePoliticalLv_kTPLC    TemplePoliticalLv = 4
	TemplePoliticalLv_kTPLD    TemplePoliticalLv = 5
)

var TemplePoliticalLv_name = map[int32]string{
	0: "KTPLNONE",
	1: "kTPLS",
	2: "kTPLA",
	3: "kTPLB",
	4: "kTPLC",
	5: "kTPLD",
}
var TemplePoliticalLv_value = map[string]int32{
	"KTPLNONE": 0,
	"kTPLS":    1,
	"kTPLA":    2,
	"kTPLB":    3,
	"kTPLC":    4,
	"kTPLD":    5,
}

func (x TemplePoliticalLv) String() string {
	return proto.EnumName(TemplePoliticalLv_name, int32(x))
}
func (TemplePoliticalLv) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{7} }

type MarchCommandStatus int32

const (
	MarchCommandStatus_kMarchCommandStatus_None       MarchCommandStatus = 0
	MarchCommandStatus_kMarchCommandStatus_Moving     MarchCommandStatus = 2
	MarchCommandStatus_kMarchCommandStatus_Moveback   MarchCommandStatus = 4
	MarchCommandStatus_kMarchCommandStatus_Collect    MarchCommandStatus = 6
	MarchCommandStatus_kMarchCommandStatus_Reenforce  MarchCommandStatus = 7
	MarchCommandStatus_kMarchCommandStatus_Station    MarchCommandStatus = 3
	MarchCommandStatus_kMarchCommandStatus_EndCommand MarchCommandStatus = 5
	MarchCommandStatus_kMarchCommandStatus_PickUp     MarchCommandStatus = 8
	MarchCommandStatus_kMarchCommandStatus_Pick       MarchCommandStatus = 9
	MarchCommandStatus_kMarchCommandStatus_Pillage    MarchCommandStatus = 10
)

var MarchCommandStatus_name = map[int32]string{
	0:  "kMarchCommandStatus_None",
	2:  "kMarchCommandStatus_Moving",
	4:  "kMarchCommandStatus_Moveback",
	6:  "kMarchCommandStatus_Collect",
	7:  "kMarchCommandStatus_Reenforce",
	3:  "kMarchCommandStatus_Station",
	5:  "kMarchCommandStatus_EndCommand",
	8:  "kMarchCommandStatus_PickUp",
	9:  "kMarchCommandStatus_Pick",
	10: "kMarchCommandStatus_Pillage",
}
var MarchCommandStatus_value = map[string]int32{
	"kMarchCommandStatus_None":       0,
	"kMarchCommandStatus_Moving":     2,
	"kMarchCommandStatus_Moveback":   4,
	"kMarchCommandStatus_Collect":    6,
	"kMarchCommandStatus_Reenforce":  7,
	"kMarchCommandStatus_Station":    3,
	"kMarchCommandStatus_EndCommand": 5,
	"kMarchCommandStatus_PickUp":     8,
	"kMarchCommandStatus_Pick":       9,
	"kMarchCommandStatus_Pillage":    10,
}

func (x MarchCommandStatus) String() string {
	return proto.EnumName(MarchCommandStatus_name, int32(x))
}
func (MarchCommandStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{8} }

type MarchCommandTarget int32

const (
	MarchCommandTarget_kMarchCommandTarget_None                      MarchCommandTarget = 0
	MarchCommandTarget_kMarchCommandTarget_Position                  MarchCommandTarget = 1
	MarchCommandTarget_kMarchCommandTarget_Battle                    MarchCommandTarget = 2
	MarchCommandTarget_kMarchCommandTarget_MoveBack                  MarchCommandTarget = 3
	MarchCommandTarget_kMarchCommandTarget_ForceMoveBack             MarchCommandTarget = 4
	MarchCommandTarget_kMarchCommandTarget_Collect                   MarchCommandTarget = 5
	MarchCommandTarget_kMarchCommandTarget_JoinMarch                 MarchCommandTarget = 6
	MarchCommandTarget_kMarchCommandTarget_CreateGuildMarch          MarchCommandTarget = 7
	MarchCommandTarget_kMarchCommandTarget_JoinReenforce             MarchCommandTarget = 8
	MarchCommandTarget_kMarchCommandTarget_Station                   MarchCommandTarget = 9
	MarchCommandTarget_kMarchCommandTarget_Follow                    MarchCommandTarget = 10
	MarchCommandTarget_kMarchCommandTarget_CarriageSend              MarchCommandTarget = 11
	MarchCommandTarget_kMarchCommandTarget_PickUp                    MarchCommandTarget = 12
	MarchCommandTarget_kMarchCommandTarget_Pick                      MarchCommandTarget = 13
	MarchCommandTarget_kMarchCommandTarget_CastleSelfJoinReenforce   MarchCommandTarget = 14
	MarchCommandTarget_kMarchCommandTarget_CastleFriendJoinReenforce MarchCommandTarget = 15
)

var MarchCommandTarget_name = map[int32]string{
	0:  "kMarchCommandTarget_None",
	1:  "kMarchCommandTarget_Position",
	2:  "kMarchCommandTarget_Battle",
	3:  "kMarchCommandTarget_MoveBack",
	4:  "kMarchCommandTarget_ForceMoveBack",
	5:  "kMarchCommandTarget_Collect",
	6:  "kMarchCommandTarget_JoinMarch",
	7:  "kMarchCommandTarget_CreateGuildMarch",
	8:  "kMarchCommandTarget_JoinReenforce",
	9:  "kMarchCommandTarget_Station",
	10: "kMarchCommandTarget_Follow",
	11: "kMarchCommandTarget_CarriageSend",
	12: "kMarchCommandTarget_PickUp",
	13: "kMarchCommandTarget_Pick",
	14: "kMarchCommandTarget_CastleSelfJoinReenforce",
	15: "kMarchCommandTarget_CastleFriendJoinReenforce",
}
var MarchCommandTarget_value = map[string]int32{
	"kMarchCommandTarget_None":                      0,
	"kMarchCommandTarget_Position":                  1,
	"kMarchCommandTarget_Battle":                    2,
	"kMarchCommandTarget_MoveBack":                  3,
	"kMarchCommandTarget_ForceMoveBack":             4,
	"kMarchCommandTarget_Collect":                   5,
	"kMarchCommandTarget_JoinMarch":                 6,
	"kMarchCommandTarget_CreateGuildMarch":          7,
	"kMarchCommandTarget_JoinReenforce":             8,
	"kMarchCommandTarget_Station":                   9,
	"kMarchCommandTarget_Follow":                    10,
	"kMarchCommandTarget_CarriageSend":              11,
	"kMarchCommandTarget_PickUp":                    12,
	"kMarchCommandTarget_Pick":                      13,
	"kMarchCommandTarget_CastleSelfJoinReenforce":   14,
	"kMarchCommandTarget_CastleFriendJoinReenforce": 15,
}

func (x MarchCommandTarget) String() string {
	return proto.EnumName(MarchCommandTarget_name, int32(x))
}
func (MarchCommandTarget) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{9} }

type CollectType int32

const (
	CollectType_kCollectTypeNone     CollectType = 0
	CollectType_kCollectTypeFood     CollectType = 1
	CollectType_kCollectTypeWood     CollectType = 2
	CollectType_kCollectTypeSteel    CollectType = 3
	CollectType_kCollectTypeOil      CollectType = 4
	CollectType_kCollectTypeGemStone CollectType = 5
	CollectType_kCollectTypePompeii  CollectType = 6
)

var CollectType_name = map[int32]string{
	0: "kCollectTypeNone",
	1: "kCollectTypeFood",
	2: "kCollectTypeWood",
	3: "kCollectTypeSteel",
	4: "kCollectTypeOil",
	5: "kCollectTypeGemStone",
	6: "kCollectTypePompeii",
}
var CollectType_value = map[string]int32{
	"kCollectTypeNone":     0,
	"kCollectTypeFood":     1,
	"kCollectTypeWood":     2,
	"kCollectTypeSteel":    3,
	"kCollectTypeOil":      4,
	"kCollectTypeGemStone": 5,
	"kCollectTypePompeii":  6,
}

func (x CollectType) String() string {
	return proto.EnumName(CollectType_name, int32(x))
}
func (CollectType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{10} }

type StrongholdType int32

const (
	StrongholdType_kStrongholdType_None StrongholdType = 0
	StrongholdType_kStrongholdType_1    StrongholdType = 1
	StrongholdType_kStrongholdType_2    StrongholdType = 2
	StrongholdType_kStrongholdType_3    StrongholdType = 3
	StrongholdType_kStrongholdType_4    StrongholdType = 4
	StrongholdType_kStrongholdType_5    StrongholdType = 5
)

var StrongholdType_name = map[int32]string{
	0: "kStrongholdType_None",
	1: "kStrongholdType_1",
	2: "kStrongholdType_2",
	3: "kStrongholdType_3",
	4: "kStrongholdType_4",
	5: "kStrongholdType_5",
}
var StrongholdType_value = map[string]int32{
	"kStrongholdType_None": 0,
	"kStrongholdType_1":    1,
	"kStrongholdType_2":    2,
	"kStrongholdType_3":    3,
	"kStrongholdType_4":    4,
	"kStrongholdType_5":    5,
}

func (x StrongholdType) String() string {
	return proto.EnumName(StrongholdType_name, int32(x))
}
func (StrongholdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{11} }

type GuildResourceFieldType int32

const (
	GuildResourceFieldType_kResourceFieldTypeNone  GuildResourceFieldType = 0
	GuildResourceFieldType_kResourceFieldTypeFood  GuildResourceFieldType = 1
	GuildResourceFieldType_kResourceFieldTypeWood  GuildResourceFieldType = 2
	GuildResourceFieldType_kResourceFieldTypeSteel GuildResourceFieldType = 3
	GuildResourceFieldType_kResourceFieldTypeOil   GuildResourceFieldType = 4
)

var GuildResourceFieldType_name = map[int32]string{
	0: "kResourceFieldTypeNone",
	1: "kResourceFieldTypeFood",
	2: "kResourceFieldTypeWood",
	3: "kResourceFieldTypeSteel",
	4: "kResourceFieldTypeOil",
}
var GuildResourceFieldType_value = map[string]int32{
	"kResourceFieldTypeNone":  0,
	"kResourceFieldTypeFood":  1,
	"kResourceFieldTypeWood":  2,
	"kResourceFieldTypeSteel": 3,
	"kResourceFieldTypeOil":   4,
}

func (x GuildResourceFieldType) String() string {
	return proto.EnumName(GuildResourceFieldType_name, int32(x))
}
func (GuildResourceFieldType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{12} }

type GuildMarchMemberStatus int32

const (
	GuildMarchMemberStatus_kGuildMarchMemberStatus_None    GuildMarchMemberStatus = 0
	GuildMarchMemberStatus_kGuildMarchMemberStatus_Arrival GuildMarchMemberStatus = 1
)

var GuildMarchMemberStatus_name = map[int32]string{
	0: "kGuildMarchMemberStatus_None",
	1: "kGuildMarchMemberStatus_Arrival",
}
var GuildMarchMemberStatus_value = map[string]int32{
	"kGuildMarchMemberStatus_None":    0,
	"kGuildMarchMemberStatus_Arrival": 1,
}

func (x GuildMarchMemberStatus) String() string {
	return proto.EnumName(GuildMarchMemberStatus_name, int32(x))
}
func (GuildMarchMemberStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{13} }

type GuildMarchStatus int32

const (
	GuildMarchStatus_kGuildMarchStatus_None        GuildMarchStatus = 0
	GuildMarchStatus_kGuildMarchStatus_BuildUp     GuildMarchStatus = 1
	GuildMarchStatus_kGuildMarchStatus_WaitArrival GuildMarchStatus = 2
	// kGuildMarchStatus_Creating    = 3;
	GuildMarchStatus_kGuildMarchStatus_Moving  GuildMarchStatus = 4
	GuildMarchStatus_kGuildMarchStatus_Battle  GuildMarchStatus = 5
	GuildMarchStatus_kGuildMarchStatus_Disband GuildMarchStatus = 6
)

var GuildMarchStatus_name = map[int32]string{
	0: "kGuildMarchStatus_None",
	1: "kGuildMarchStatus_BuildUp",
	2: "kGuildMarchStatus_WaitArrival",
	4: "kGuildMarchStatus_Moving",
	5: "kGuildMarchStatus_Battle",
	6: "kGuildMarchStatus_Disband",
}
var GuildMarchStatus_value = map[string]int32{
	"kGuildMarchStatus_None":        0,
	"kGuildMarchStatus_BuildUp":     1,
	"kGuildMarchStatus_WaitArrival": 2,
	"kGuildMarchStatus_Moving":      4,
	"kGuildMarchStatus_Battle":      5,
	"kGuildMarchStatus_Disband":     6,
}

func (x GuildMarchStatus) String() string {
	return proto.EnumName(GuildMarchStatus_name, int32(x))
}
func (GuildMarchStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{14} }

// buff效果类型
type BuffAttrType int32

const (
	BuffAttrType_BuffAttrTypeNone    BuffAttrType = 0
	BuffAttrType_BuffAttrTypePower   BuffAttrType = 1
	BuffAttrType_BuffAttrTypeDefense BuffAttrType = 2
)

var BuffAttrType_name = map[int32]string{
	0: "BuffAttrTypeNone",
	1: "BuffAttrTypePower",
	2: "BuffAttrTypeDefense",
}
var BuffAttrType_value = map[string]int32{
	"BuffAttrTypeNone":    0,
	"BuffAttrTypePower":   1,
	"BuffAttrTypeDefense": 2,
}

func (x BuffAttrType) String() string {
	return proto.EnumName(BuffAttrType_name, int32(x))
}
func (BuffAttrType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{15} }

type MoveCastleType int32

const (
	MoveCastleType_kMoveCastleType_None        MoveCastleType = 0
	MoveCastleType_kMoveCastleType_Position    MoveCastleType = 1
	MoveCastleType_kMoveCastleType_Domain      MoveCastleType = 2
	MoveCastleType_kMoveCastleType_NewPlayer   MoveCastleType = 3
	MoveCastleType_kMoveCastleType_Random      MoveCastleType = 4
	MoveCastleType_kMoveCastleType_Pompeii     MoveCastleType = 5
	MoveCastleType_kMoveCastleType_Burn        MoveCastleType = 6
	MoveCastleType_kMoveCastleType_GuildMaster MoveCastleType = 7
	MoveCastleType_kMoveCastleType_PM          MoveCastleType = 99
)

var MoveCastleType_name = map[int32]string{
	0:  "kMoveCastleType_None",
	1:  "kMoveCastleType_Position",
	2:  "kMoveCastleType_Domain",
	3:  "kMoveCastleType_NewPlayer",
	4:  "kMoveCastleType_Random",
	5:  "kMoveCastleType_Pompeii",
	6:  "kMoveCastleType_Burn",
	7:  "kMoveCastleType_GuildMaster",
	99: "kMoveCastleType_PM",
}
var MoveCastleType_value = map[string]int32{
	"kMoveCastleType_None":        0,
	"kMoveCastleType_Position":    1,
	"kMoveCastleType_Domain":      2,
	"kMoveCastleType_NewPlayer":   3,
	"kMoveCastleType_Random":      4,
	"kMoveCastleType_Pompeii":     5,
	"kMoveCastleType_Burn":        6,
	"kMoveCastleType_GuildMaster": 7,
	"kMoveCastleType_PM":          99,
}

func (x MoveCastleType) String() string {
	return proto.EnumName(MoveCastleType_name, int32(x))
}
func (MoveCastleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{16} }

type TempleStatusType int32

const (
	TempleStatusType_kTempleStatusType_NotOpen TempleStatusType = 0
	TempleStatusType_kTempleStatusType_Open    TempleStatusType = 1
	TempleStatusType_kTempleStatusType_Capture TempleStatusType = 2
	TempleStatusType_kTempleStatusType_Protect TempleStatusType = 3
)

var TempleStatusType_name = map[int32]string{
	0: "kTempleStatusType_NotOpen",
	1: "kTempleStatusType_Open",
	2: "kTempleStatusType_Capture",
	3: "kTempleStatusType_Protect",
}
var TempleStatusType_value = map[string]int32{
	"kTempleStatusType_NotOpen": 0,
	"kTempleStatusType_Open":    1,
	"kTempleStatusType_Capture": 2,
	"kTempleStatusType_Protect": 3,
}

func (x TempleStatusType) String() string {
	return proto.EnumName(TempleStatusType_name, int32(x))
}
func (TempleStatusType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{17} }

// 奇观被占领状态
type TempleIsCapturedStatus int32

const (
	TempleIsCapturedStatus_kTempleIsCapturedStatus_Not TempleIsCapturedStatus = 0
	TempleIsCapturedStatus_kTempleIsCapturedStatus_Yes TempleIsCapturedStatus = 1
)

var TempleIsCapturedStatus_name = map[int32]string{
	0: "kTempleIsCapturedStatus_Not",
	1: "kTempleIsCapturedStatus_Yes",
}
var TempleIsCapturedStatus_value = map[string]int32{
	"kTempleIsCapturedStatus_Not": 0,
	"kTempleIsCapturedStatus_Yes": 1,
}

func (x TempleIsCapturedStatus) String() string {
	return proto.EnumName(TempleIsCapturedStatus_name, int32(x))
}
func (TempleIsCapturedStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{18} }

// 关卡转态
type PassStatusType int32

const (
	PassStatusType_kPassStatusType_NotOpen PassStatusType = 0
	PassStatusType_kPassStatusType_Open    PassStatusType = 1
	PassStatusType_kPassStatusType_Capture PassStatusType = 2
	PassStatusType_kPassStatusType_Protect PassStatusType = 3
)

var PassStatusType_name = map[int32]string{
	0: "kPassStatusType_NotOpen",
	1: "kPassStatusType_Open",
	2: "kPassStatusType_Capture",
	3: "kPassStatusType_Protect",
}
var PassStatusType_value = map[string]int32{
	"kPassStatusType_NotOpen": 0,
	"kPassStatusType_Open":    1,
	"kPassStatusType_Capture": 2,
	"kPassStatusType_Protect": 3,
}

func (x PassStatusType) String() string {
	return proto.EnumName(PassStatusType_name, int32(x))
}
func (PassStatusType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{19} }

// 关卡被占领状态
type PassIsCapturedStatus int32

const (
	PassIsCapturedStatus_kPassIsCapturedStatus_Not PassIsCapturedStatus = 0
	PassIsCapturedStatus_kPassIsCapturedStatus_Yes PassIsCapturedStatus = 1
)

var PassIsCapturedStatus_name = map[int32]string{
	0: "kPassIsCapturedStatus_Not",
	1: "kPassIsCapturedStatus_Yes",
}
var PassIsCapturedStatus_value = map[string]int32{
	"kPassIsCapturedStatus_Not": 0,
	"kPassIsCapturedStatus_Yes": 1,
}

func (x PassIsCapturedStatus) String() string {
	return proto.EnumName(PassIsCapturedStatus_name, int32(x))
}
func (PassIsCapturedStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{20} }

type GuildBuildingBagType int32

const (
	GuildBuildingBagType_kGuildBuildingBagNone    GuildBuildingBagType = 0
	GuildBuildingBagType_kGuildBuildingBagFort    GuildBuildingBagType = 1
	GuildBuildingBagType_kGuildBuildingBagCollect GuildBuildingBagType = 2
	GuildBuildingBagType_kGuildBuildingBagFlag    GuildBuildingBagType = 3
)

var GuildBuildingBagType_name = map[int32]string{
	0: "kGuildBuildingBagNone",
	1: "kGuildBuildingBagFort",
	2: "kGuildBuildingBagCollect",
	3: "kGuildBuildingBagFlag",
}
var GuildBuildingBagType_value = map[string]int32{
	"kGuildBuildingBagNone":    0,
	"kGuildBuildingBagFort":    1,
	"kGuildBuildingBagCollect": 2,
	"kGuildBuildingBagFlag":    3,
}

func (x GuildBuildingBagType) String() string {
	return proto.EnumName(GuildBuildingBagType_name, int32(x))
}
func (GuildBuildingBagType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{21} }

type MapSearchType int32

const (
	MapSearchType_kMapSearchType_Start                MapSearchType = 0
	MapSearchType_kMapSearchType_Barbarians           MapSearchType = 0
	MapSearchType_kMapSearchType_Food                 MapSearchType = 1
	MapSearchType_kMapSearchType_Wood                 MapSearchType = 2
	MapSearchType_kMapSearchType_Steel                MapSearchType = 3
	MapSearchType_kMapSearchType_Oil                  MapSearchType = 4
	MapSearchType_kMapSearchType_GemStone             MapSearchType = 5
	MapSearchType_kMapSearchType_AdvanceBarbarians    MapSearchType = 6
	MapSearchType_kMapSearchType_Stronghold_1         MapSearchType = 7
	MapSearchType_kMapSearchType_Stronghold_2         MapSearchType = 8
	MapSearchType_kMapSearchType_Stronghold_3         MapSearchType = 9
	MapSearchType_kMapSearchType_Stronghold_4         MapSearchType = 10
	MapSearchType_kMapSearchType_Stronghold_5         MapSearchType = 11
	MapSearchType_kMapSearchType_NpcForceBarbarian    MapSearchType = 12
	MapSearchType_kMapSearchType_End                  MapSearchType = 12
	MapSearchType_kMapSearchType_PerformanceTestStart MapSearchType = 20
	MapSearchType_kMapSearchType_Castle               MapSearchType = 21
	MapSearchType_kMapSearchType_March                MapSearchType = 22
	MapSearchType_kMapSearchType_BarbarianFort        MapSearchType = 23
	MapSearchType_kMapSearchType_Pompeii              MapSearchType = 24
	MapSearchType_kMapSearchType_PerformanceTestEnd   MapSearchType = 25
)

var MapSearchType_name = map[int32]string{
	0: "kMapSearchType_Start",
	// Duplicate value: 0: "kMapSearchType_Barbarians",
	1:  "kMapSearchType_Food",
	2:  "kMapSearchType_Wood",
	3:  "kMapSearchType_Steel",
	4:  "kMapSearchType_Oil",
	5:  "kMapSearchType_GemStone",
	6:  "kMapSearchType_AdvanceBarbarians",
	7:  "kMapSearchType_Stronghold_1",
	8:  "kMapSearchType_Stronghold_2",
	9:  "kMapSearchType_Stronghold_3",
	10: "kMapSearchType_Stronghold_4",
	11: "kMapSearchType_Stronghold_5",
	12: "kMapSearchType_NpcForceBarbarian",
	// Duplicate value: 12: "kMapSearchType_End",
	20: "kMapSearchType_PerformanceTestStart",
	21: "kMapSearchType_Castle",
	22: "kMapSearchType_March",
	23: "kMapSearchType_BarbarianFort",
	24: "kMapSearchType_Pompeii",
	25: "kMapSearchType_PerformanceTestEnd",
}
var MapSearchType_value = map[string]int32{
	"kMapSearchType_Start":                0,
	"kMapSearchType_Barbarians":           0,
	"kMapSearchType_Food":                 1,
	"kMapSearchType_Wood":                 2,
	"kMapSearchType_Steel":                3,
	"kMapSearchType_Oil":                  4,
	"kMapSearchType_GemStone":             5,
	"kMapSearchType_AdvanceBarbarians":    6,
	"kMapSearchType_Stronghold_1":         7,
	"kMapSearchType_Stronghold_2":         8,
	"kMapSearchType_Stronghold_3":         9,
	"kMapSearchType_Stronghold_4":         10,
	"kMapSearchType_Stronghold_5":         11,
	"kMapSearchType_NpcForceBarbarian":    12,
	"kMapSearchType_End":                  12,
	"kMapSearchType_PerformanceTestStart": 20,
	"kMapSearchType_Castle":               21,
	"kMapSearchType_March":                22,
	"kMapSearchType_BarbarianFort":        23,
	"kMapSearchType_Pompeii":              24,
	"kMapSearchType_PerformanceTestEnd":   25,
}

func (x MapSearchType) String() string {
	return proto.EnumName(MapSearchType_name, int32(x))
}
func (MapSearchType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{22} }

type MapSearchCreateEntityType int32

const (
	MapSearchCreateEntityType_kMapSearchCreateEntityType_None             MapSearchCreateEntityType = 0
	MapSearchCreateEntityType_kMapSearchCreateEntityType_NotSearch        MapSearchCreateEntityType = 1
	MapSearchCreateEntityType_kMapSearchCreateEntityType_SearchSameEntity MapSearchCreateEntityType = 2
	MapSearchCreateEntityType_kMapSearchCreateEntityType_CreateByPos      MapSearchCreateEntityType = 3
	MapSearchCreateEntityType_kMapSearchCreateEntityType_CreateByRange    MapSearchCreateEntityType = 4
)

var MapSearchCreateEntityType_name = map[int32]string{
	0: "kMapSearchCreateEntityType_None",
	1: "kMapSearchCreateEntityType_NotSearch",
	2: "kMapSearchCreateEntityType_SearchSameEntity",
	3: "kMapSearchCreateEntityType_CreateByPos",
	4: "kMapSearchCreateEntityType_CreateByRange",
}
var MapSearchCreateEntityType_value = map[string]int32{
	"kMapSearchCreateEntityType_None":             0,
	"kMapSearchCreateEntityType_NotSearch":        1,
	"kMapSearchCreateEntityType_SearchSameEntity": 2,
	"kMapSearchCreateEntityType_CreateByPos":      3,
	"kMapSearchCreateEntityType_CreateByRange":    4,
}

func (x MapSearchCreateEntityType) String() string {
	return proto.EnumName(MapSearchCreateEntityType_name, int32(x))
}
func (MapSearchCreateEntityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{23} }

type MapAlarmType int32

const (
	MapAlarmType_kMapAlarm_MarchAttack      MapAlarmType = 0
	MapAlarmType_kMapAlarm_Reenforce        MapAlarmType = 1
	MapAlarmType_kMapAlarm_Scout            MapAlarmType = 2
	MapAlarmType_kMapAlarm_GuildMarchAttack MapAlarmType = 3
	MapAlarmType_kMapAlarm_Carriage         MapAlarmType = 4
)

var MapAlarmType_name = map[int32]string{
	0: "kMapAlarm_MarchAttack",
	1: "kMapAlarm_Reenforce",
	2: "kMapAlarm_Scout",
	3: "kMapAlarm_GuildMarchAttack",
	4: "kMapAlarm_Carriage",
}
var MapAlarmType_value = map[string]int32{
	"kMapAlarm_MarchAttack":      0,
	"kMapAlarm_Reenforce":        1,
	"kMapAlarm_Scout":            2,
	"kMapAlarm_GuildMarchAttack": 3,
	"kMapAlarm_Carriage":         4,
}

func (x MapAlarmType) String() string {
	return proto.EnumName(MapAlarmType_name, int32(x))
}
func (MapAlarmType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{24} }

type ExploreStatus int32

const (
	ExploreStatus_kExploreStatus_Hiden   ExploreStatus = 0
	ExploreStatus_kExploreStatus_Found   ExploreStatus = 1
	ExploreStatus_kExploreStatus_Visited ExploreStatus = 2
	ExploreStatus_kExploreStatus_Awarded ExploreStatus = 3
)

var ExploreStatus_name = map[int32]string{
	0: "kExploreStatus_Hiden",
	1: "kExploreStatus_Found",
	2: "kExploreStatus_Visited",
	3: "kExploreStatus_Awarded",
}
var ExploreStatus_value = map[string]int32{
	"kExploreStatus_Hiden":   0,
	"kExploreStatus_Found":   1,
	"kExploreStatus_Visited": 2,
	"kExploreStatus_Awarded": 3,
}

func (x ExploreStatus) String() string {
	return proto.EnumName(ExploreStatus_name, int32(x))
}
func (ExploreStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{25} }

// 自动探索状态
type AutoExploreStateType int32

const (
	AutoExploreStateType_KExplpore_None   AutoExploreStateType = 0
	AutoExploreStateType_KExplpore_Doing  AutoExploreStateType = 1
	AutoExploreStateType_KExplpore_Finish AutoExploreStateType = 2
)

var AutoExploreStateType_name = map[int32]string{
	0: "KExplpore_None",
	1: "KExplpore_Doing",
	2: "KExplpore_Finish",
}
var AutoExploreStateType_value = map[string]int32{
	"KExplpore_None":   0,
	"KExplpore_Doing":  1,
	"KExplpore_Finish": 2,
}

func (x AutoExploreStateType) String() string {
	return proto.EnumName(AutoExploreStateType_name, int32(x))
}
func (AutoExploreStateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{26} }

type PompeiiBuildStatus int32

const (
	PompeiiBuildStatus_kPompeiiBuildStatus_NotOpen   PompeiiBuildStatus = 0
	PompeiiBuildStatus_kPompeiiBuildStatus_CanSnatch PompeiiBuildStatus = 1
	PompeiiBuildStatus_kPompeiiBuildStatus_Snatching PompeiiBuildStatus = 2
	PompeiiBuildStatus_kPompeiiBuildStatus_Occupied  PompeiiBuildStatus = 3
)

var PompeiiBuildStatus_name = map[int32]string{
	0: "kPompeiiBuildStatus_NotOpen",
	1: "kPompeiiBuildStatus_CanSnatch",
	2: "kPompeiiBuildStatus_Snatching",
	3: "kPompeiiBuildStatus_Occupied",
}
var PompeiiBuildStatus_value = map[string]int32{
	"kPompeiiBuildStatus_NotOpen":   0,
	"kPompeiiBuildStatus_CanSnatch": 1,
	"kPompeiiBuildStatus_Snatching": 2,
	"kPompeiiBuildStatus_Occupied":  3,
}

func (x PompeiiBuildStatus) String() string {
	return proto.EnumName(PompeiiBuildStatus_name, int32(x))
}
func (PompeiiBuildStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{27} }

// 建筑类型
type PompeiiBuildType int32

const (
	PompeiiBuildType_kPompeiiBuildType_None                 PompeiiBuildType = 0
	PompeiiBuildType_kPompeiiBuildType_Point                PompeiiBuildType = 1
	PompeiiBuildType_kPompeiiBuildType_Relocate             PompeiiBuildType = 2
	PompeiiBuildType_kPompeiiBuildType_TrainStation         PompeiiBuildType = 3
	PompeiiBuildType_kPompeiiBuildType_StartRailwayPlatform PompeiiBuildType = 4
	PompeiiBuildType_kPompeiiBuildType_EndRailwayPlatform   PompeiiBuildType = 5
	PompeiiBuildType_kPompeiiBuildType_Lab                  PompeiiBuildType = 7
)

var PompeiiBuildType_name = map[int32]string{
	0: "kPompeiiBuildType_None",
	1: "kPompeiiBuildType_Point",
	2: "kPompeiiBuildType_Relocate",
	3: "kPompeiiBuildType_TrainStation",
	4: "kPompeiiBuildType_StartRailwayPlatform",
	5: "kPompeiiBuildType_EndRailwayPlatform",
	7: "kPompeiiBuildType_Lab",
}
var PompeiiBuildType_value = map[string]int32{
	"kPompeiiBuildType_None":                 0,
	"kPompeiiBuildType_Point":                1,
	"kPompeiiBuildType_Relocate":             2,
	"kPompeiiBuildType_TrainStation":         3,
	"kPompeiiBuildType_StartRailwayPlatform": 4,
	"kPompeiiBuildType_EndRailwayPlatform":   5,
	"kPompeiiBuildType_Lab":                  7,
}

func (x PompeiiBuildType) String() string {
	return proto.EnumName(PompeiiBuildType_name, int32(x))
}
func (PompeiiBuildType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{28} }

type AddArmySourceType int32

const (
	AddArmySourceType_kAddArmySourceType_None          AddArmySourceType = 0
	AddArmySourceType_kAddArmySourceType_Train         AddArmySourceType = 1
	AddArmySourceType_kAddArmySourceType_Cure          AddArmySourceType = 2
	AddArmySourceType_kAddArmySourceType_Pm            AddArmySourceType = 3
	AddArmySourceType_kAddArmySourceType_Resource      AddArmySourceType = 4
	AddArmySourceType_kAddArmySourceType_MarchIntoHome AddArmySourceType = 5
)

var AddArmySourceType_name = map[int32]string{
	0: "kAddArmySourceType_None",
	1: "kAddArmySourceType_Train",
	2: "kAddArmySourceType_Cure",
	3: "kAddArmySourceType_Pm",
	4: "kAddArmySourceType_Resource",
	5: "kAddArmySourceType_MarchIntoHome",
}
var AddArmySourceType_value = map[string]int32{
	"kAddArmySourceType_None":          0,
	"kAddArmySourceType_Train":         1,
	"kAddArmySourceType_Cure":          2,
	"kAddArmySourceType_Pm":            3,
	"kAddArmySourceType_Resource":      4,
	"kAddArmySourceType_MarchIntoHome": 5,
}

func (x AddArmySourceType) String() string {
	return proto.EnumName(AddArmySourceType_name, int32(x))
}
func (AddArmySourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{29} }

type TrainStatus int32

const (
	TrainStatus_kTrainStatus_None    TrainStatus = 0
	TrainStatus_kTrainStatus_Waiting TrainStatus = 1
	TrainStatus_kTrainStatus_Running TrainStatus = 2
)

var TrainStatus_name = map[int32]string{
	0: "kTrainStatus_None",
	1: "kTrainStatus_Waiting",
	2: "kTrainStatus_Running",
}
var TrainStatus_value = map[string]int32{
	"kTrainStatus_None":    0,
	"kTrainStatus_Waiting": 1,
	"kTrainStatus_Running": 2,
}

func (x TrainStatus) String() string {
	return proto.EnumName(TrainStatus_name, int32(x))
}
func (TrainStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{30} }

// 据点状态
type StrongholdStatusType int32

const (
	StrongholdStatusType_kStrongholdStatusType_Open    StrongholdStatusType = 0
	StrongholdStatusType_kStrongholdStatusType_Protect StrongholdStatusType = 1
)

var StrongholdStatusType_name = map[int32]string{
	0: "kStrongholdStatusType_Open",
	1: "kStrongholdStatusType_Protect",
}
var StrongholdStatusType_value = map[string]int32{
	"kStrongholdStatusType_Open":    0,
	"kStrongholdStatusType_Protect": 1,
}

func (x StrongholdStatusType) String() string {
	return proto.EnumName(StrongholdStatusType_name, int32(x))
}
func (StrongholdStatusType) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{31} }

type GridData struct {
	Index  uint32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
}

func (m *GridData) Reset()                    { *m = GridData{} }
func (m *GridData) String() string            { return proto.CompactTextString(m) }
func (*GridData) ProtoMessage()               {}
func (*GridData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{0} }

func (m *GridData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *GridData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type EventData struct {
	EventType  uint32               `protobuf:"varint,1,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	IntParam_1 uint64               `protobuf:"varint,2,opt,name=int_param_1,json=intParam1" json:"int_param_1,omitempty"`
	IntParam_2 uint64               `protobuf:"varint,3,opt,name=int_param_2,json=intParam2" json:"int_param_2,omitempty"`
	IntParam_3 uint64               `protobuf:"varint,4,opt,name=int_param_3,json=intParam3" json:"int_param_3,omitempty"`
	IntParam_4 uint64               `protobuf:"varint,5,opt,name=int_param_4,json=intParam4" json:"int_param_4,omitempty"`
	StrParam_1 string               `protobuf:"bytes,6,opt,name=str_param_1,json=strParam1" json:"str_param_1,omitempty"`
	StrParam_2 string               `protobuf:"bytes,7,opt,name=str_param_2,json=strParam2" json:"str_param_2,omitempty"`
	StrParam_3 string               `protobuf:"bytes,8,opt,name=str_param_3,json=strParam3" json:"str_param_3,omitempty"`
	StrParam_4 string               `protobuf:"bytes,9,opt,name=str_param_4,json=strParam4" json:"str_param_4,omitempty"`
	IntParamN  []uint64             `protobuf:"varint,10,rep,packed,name=int_param_n,json=intParamN" json:"int_param_n,omitempty"`
	Data       *google_protobuf.Any `protobuf:"bytes,11,opt,name=data" json:"data,omitempty"`
}

func (m *EventData) Reset()                    { *m = EventData{} }
func (m *EventData) String() string            { return proto.CompactTextString(m) }
func (*EventData) ProtoMessage()               {}
func (*EventData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{1} }

func (m *EventData) GetEventType() uint32 {
	if m != nil {
		return m.EventType
	}
	return 0
}

func (m *EventData) GetIntParam_1() uint64 {
	if m != nil {
		return m.IntParam_1
	}
	return 0
}

func (m *EventData) GetIntParam_2() uint64 {
	if m != nil {
		return m.IntParam_2
	}
	return 0
}

func (m *EventData) GetIntParam_3() uint64 {
	if m != nil {
		return m.IntParam_3
	}
	return 0
}

func (m *EventData) GetIntParam_4() uint64 {
	if m != nil {
		return m.IntParam_4
	}
	return 0
}

func (m *EventData) GetStrParam_1() string {
	if m != nil {
		return m.StrParam_1
	}
	return ""
}

func (m *EventData) GetStrParam_2() string {
	if m != nil {
		return m.StrParam_2
	}
	return ""
}

func (m *EventData) GetStrParam_3() string {
	if m != nil {
		return m.StrParam_3
	}
	return ""
}

func (m *EventData) GetStrParam_4() string {
	if m != nil {
		return m.StrParam_4
	}
	return ""
}

func (m *EventData) GetIntParamN() []uint64 {
	if m != nil {
		return m.IntParamN
	}
	return nil
}

func (m *EventData) GetData() *google_protobuf.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type ShowBuffStrongHold struct {
	Name                     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PlayerId                 uint64 `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	EntityPlayerId           uint64 `protobuf:"varint,3,opt,name=entity_player_id,json=entityPlayerId" json:"entity_player_id,omitempty"`
	EntityId                 uint64 `protobuf:"varint,4,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	EntityType               string `protobuf:"bytes,5,opt,name=entity_type,json=entityType" json:"entity_type,omitempty"`
	AllBuffType              string `protobuf:"bytes,6,opt,name=all_buff_type,json=allBuffType" json:"all_buff_type,omitempty"`
	BuffTypeSource           string `protobuf:"bytes,7,opt,name=buff_type_source,json=buffTypeSource" json:"buff_type_source,omitempty"`
	TechnologyBuffTypeSource string `protobuf:"bytes,8,opt,name=technology_buff_type_source,json=technologyBuffTypeSource" json:"technology_buff_type_source,omitempty"`
}

func (m *ShowBuffStrongHold) Reset()                    { *m = ShowBuffStrongHold{} }
func (m *ShowBuffStrongHold) String() string            { return proto.CompactTextString(m) }
func (*ShowBuffStrongHold) ProtoMessage()               {}
func (*ShowBuffStrongHold) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{2} }

func (m *ShowBuffStrongHold) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShowBuffStrongHold) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ShowBuffStrongHold) GetEntityPlayerId() uint64 {
	if m != nil {
		return m.EntityPlayerId
	}
	return 0
}

func (m *ShowBuffStrongHold) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *ShowBuffStrongHold) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *ShowBuffStrongHold) GetAllBuffType() string {
	if m != nil {
		return m.AllBuffType
	}
	return ""
}

func (m *ShowBuffStrongHold) GetBuffTypeSource() string {
	if m != nil {
		return m.BuffTypeSource
	}
	return ""
}

func (m *ShowBuffStrongHold) GetTechnologyBuffTypeSource() string {
	if m != nil {
		return m.TechnologyBuffTypeSource
	}
	return ""
}

type ShowBuffMarch struct {
	Name           string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PlayerId       uint64 `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	EntityPlayerId uint64 `protobuf:"varint,3,opt,name=entity_player_id,json=entityPlayerId" json:"entity_player_id,omitempty"`
	EntityId       uint64 `protobuf:"varint,4,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	EntityType     string `protobuf:"bytes,5,opt,name=entity_type,json=entityType" json:"entity_type,omitempty"`
	AllBuffType    string `protobuf:"bytes,6,opt,name=all_buff_type,json=allBuffType" json:"all_buff_type,omitempty"`
	BuffTypeSource string `protobuf:"bytes,7,opt,name=buff_type_source,json=buffTypeSource" json:"buff_type_source,omitempty"`
	Attack         int64  `protobuf:"varint,8,opt,name=attack" json:"attack,omitempty"`
	Defence        int64  `protobuf:"varint,9,opt,name=defence" json:"defence,omitempty"`
	Hp             int64  `protobuf:"varint,10,opt,name=hp" json:"hp,omitempty"`
	Troop          uint32 `protobuf:"varint,11,opt,name=troop" json:"troop,omitempty"`
	Speed          int64  `protobuf:"varint,12,opt,name=speed" json:"speed,omitempty"`
	MainHeroId     uint32 `protobuf:"varint,13,opt,name=main_hero_id,json=mainHeroId" json:"main_hero_id,omitempty"`
	SecondHeroId   uint32 `protobuf:"varint,14,opt,name=second_hero_id,json=secondHeroId" json:"second_hero_id,omitempty"`
	ThirdHeroId    uint32 `protobuf:"varint,15,opt,name=third_hero_id,json=thirdHeroId" json:"third_hero_id,omitempty"`
	FourthHeroId   uint32 `protobuf:"varint,16,opt,name=fourth_hero_id,json=fourthHeroId" json:"fourth_hero_id,omitempty"`
	FifthHeroId    uint32 `protobuf:"varint,17,opt,name=fifth_hero_id,json=fifthHeroId" json:"fifth_hero_id,omitempty"`
	Level          uint32 `protobuf:"varint,18,opt,name=level" json:"level,omitempty"`
}

func (m *ShowBuffMarch) Reset()                    { *m = ShowBuffMarch{} }
func (m *ShowBuffMarch) String() string            { return proto.CompactTextString(m) }
func (*ShowBuffMarch) ProtoMessage()               {}
func (*ShowBuffMarch) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{3} }

func (m *ShowBuffMarch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShowBuffMarch) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ShowBuffMarch) GetEntityPlayerId() uint64 {
	if m != nil {
		return m.EntityPlayerId
	}
	return 0
}

func (m *ShowBuffMarch) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *ShowBuffMarch) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *ShowBuffMarch) GetAllBuffType() string {
	if m != nil {
		return m.AllBuffType
	}
	return ""
}

func (m *ShowBuffMarch) GetBuffTypeSource() string {
	if m != nil {
		return m.BuffTypeSource
	}
	return ""
}

func (m *ShowBuffMarch) GetAttack() int64 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *ShowBuffMarch) GetDefence() int64 {
	if m != nil {
		return m.Defence
	}
	return 0
}

func (m *ShowBuffMarch) GetHp() int64 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *ShowBuffMarch) GetTroop() uint32 {
	if m != nil {
		return m.Troop
	}
	return 0
}

func (m *ShowBuffMarch) GetSpeed() int64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *ShowBuffMarch) GetMainHeroId() uint32 {
	if m != nil {
		return m.MainHeroId
	}
	return 0
}

func (m *ShowBuffMarch) GetSecondHeroId() uint32 {
	if m != nil {
		return m.SecondHeroId
	}
	return 0
}

func (m *ShowBuffMarch) GetThirdHeroId() uint32 {
	if m != nil {
		return m.ThirdHeroId
	}
	return 0
}

func (m *ShowBuffMarch) GetFourthHeroId() uint32 {
	if m != nil {
		return m.FourthHeroId
	}
	return 0
}

func (m *ShowBuffMarch) GetFifthHeroId() uint32 {
	if m != nil {
		return m.FifthHeroId
	}
	return 0
}

func (m *ShowBuffMarch) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type ShowBuffCastle struct {
	Name           string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PlayerId       uint64 `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	EntityPlayerId uint64 `protobuf:"varint,3,opt,name=entity_player_id,json=entityPlayerId" json:"entity_player_id,omitempty"`
	EntityId       uint64 `protobuf:"varint,4,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	EntityType     string `protobuf:"bytes,5,opt,name=entity_type,json=entityType" json:"entity_type,omitempty"`
	JoinEntityId   uint64 `protobuf:"varint,6,opt,name=join_entity_id,json=joinEntityId" json:"join_entity_id,omitempty"`
	Level          uint32 `protobuf:"varint,7,opt,name=level" json:"level,omitempty"`
	MainHeroId     uint32 `protobuf:"varint,8,opt,name=main_hero_id,json=mainHeroId" json:"main_hero_id,omitempty"`
	SecondHeroId   uint32 `protobuf:"varint,9,opt,name=second_hero_id,json=secondHeroId" json:"second_hero_id,omitempty"`
	ThirdHeroId    uint32 `protobuf:"varint,10,opt,name=third_hero_id,json=thirdHeroId" json:"third_hero_id,omitempty"`
	FourthHeroId   uint32 `protobuf:"varint,11,opt,name=fourth_hero_id,json=fourthHeroId" json:"fourth_hero_id,omitempty"`
	FifthHeroId    uint32 `protobuf:"varint,12,opt,name=fifth_hero_id,json=fifthHeroId" json:"fifth_hero_id,omitempty"`
	AllBuffType    string `protobuf:"bytes,13,opt,name=all_buff_type,json=allBuffType" json:"all_buff_type,omitempty"`
	BuffTypeSource string `protobuf:"bytes,14,opt,name=buff_type_source,json=buffTypeSource" json:"buff_type_source,omitempty"`
}

func (m *ShowBuffCastle) Reset()                    { *m = ShowBuffCastle{} }
func (m *ShowBuffCastle) String() string            { return proto.CompactTextString(m) }
func (*ShowBuffCastle) ProtoMessage()               {}
func (*ShowBuffCastle) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{4} }

func (m *ShowBuffCastle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShowBuffCastle) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ShowBuffCastle) GetEntityPlayerId() uint64 {
	if m != nil {
		return m.EntityPlayerId
	}
	return 0
}

func (m *ShowBuffCastle) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *ShowBuffCastle) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *ShowBuffCastle) GetJoinEntityId() uint64 {
	if m != nil {
		return m.JoinEntityId
	}
	return 0
}

func (m *ShowBuffCastle) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *ShowBuffCastle) GetMainHeroId() uint32 {
	if m != nil {
		return m.MainHeroId
	}
	return 0
}

func (m *ShowBuffCastle) GetSecondHeroId() uint32 {
	if m != nil {
		return m.SecondHeroId
	}
	return 0
}

func (m *ShowBuffCastle) GetThirdHeroId() uint32 {
	if m != nil {
		return m.ThirdHeroId
	}
	return 0
}

func (m *ShowBuffCastle) GetFourthHeroId() uint32 {
	if m != nil {
		return m.FourthHeroId
	}
	return 0
}

func (m *ShowBuffCastle) GetFifthHeroId() uint32 {
	if m != nil {
		return m.FifthHeroId
	}
	return 0
}

func (m *ShowBuffCastle) GetAllBuffType() string {
	if m != nil {
		return m.AllBuffType
	}
	return ""
}

func (m *ShowBuffCastle) GetBuffTypeSource() string {
	if m != nil {
		return m.BuffTypeSource
	}
	return ""
}

type ShowBuffMap struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PlayerId    uint64 `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	AllBuffType string `protobuf:"bytes,3,opt,name=all_buff_type,json=allBuffType" json:"all_buff_type,omitempty"`
}

func (m *ShowBuffMap) Reset()                    { *m = ShowBuffMap{} }
func (m *ShowBuffMap) String() string            { return proto.CompactTextString(m) }
func (*ShowBuffMap) ProtoMessage()               {}
func (*ShowBuffMap) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{5} }

func (m *ShowBuffMap) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShowBuffMap) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ShowBuffMap) GetAllBuffType() string {
	if m != nil {
		return m.AllBuffType
	}
	return ""
}

type ShowBuffGuild struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PlayerId    uint64 `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	GuildId     uint64 `protobuf:"varint,3,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	AllBuffType string `protobuf:"bytes,4,opt,name=all_buff_type,json=allBuffType" json:"all_buff_type,omitempty"`
}

func (m *ShowBuffGuild) Reset()                    { *m = ShowBuffGuild{} }
func (m *ShowBuffGuild) String() string            { return proto.CompactTextString(m) }
func (*ShowBuffGuild) ProtoMessage()               {}
func (*ShowBuffGuild) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{6} }

func (m *ShowBuffGuild) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShowBuffGuild) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ShowBuffGuild) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *ShowBuffGuild) GetAllBuffType() string {
	if m != nil {
		return m.AllBuffType
	}
	return ""
}

type ShowBuffData struct {
	Stronghold *ShowBuffStrongHold `protobuf:"bytes,1,opt,name=stronghold" json:"stronghold,omitempty"`
	Marchs     []*ShowBuffMarch    `protobuf:"bytes,2,rep,name=marchs" json:"marchs,omitempty"`
	Castle     *ShowBuffCastle     `protobuf:"bytes,3,opt,name=castle" json:"castle,omitempty"`
	Map        *ShowBuffMap        `protobuf:"bytes,4,opt,name=map" json:"map,omitempty"`
	Guild      *ShowBuffGuild      `protobuf:"bytes,5,opt,name=guild" json:"guild,omitempty"`
}

func (m *ShowBuffData) Reset()                    { *m = ShowBuffData{} }
func (m *ShowBuffData) String() string            { return proto.CompactTextString(m) }
func (*ShowBuffData) ProtoMessage()               {}
func (*ShowBuffData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{7} }

func (m *ShowBuffData) GetStronghold() *ShowBuffStrongHold {
	if m != nil {
		return m.Stronghold
	}
	return nil
}

func (m *ShowBuffData) GetMarchs() []*ShowBuffMarch {
	if m != nil {
		return m.Marchs
	}
	return nil
}

func (m *ShowBuffData) GetCastle() *ShowBuffCastle {
	if m != nil {
		return m.Castle
	}
	return nil
}

func (m *ShowBuffData) GetMap() *ShowBuffMap {
	if m != nil {
		return m.Map
	}
	return nil
}

func (m *ShowBuffData) GetGuild() *ShowBuffGuild {
	if m != nil {
		return m.Guild
	}
	return nil
}

type EntityTypeData struct {
	ConfigId uint32 `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Level    uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (m *EntityTypeData) Reset()                    { *m = EntityTypeData{} }
func (m *EntityTypeData) String() string            { return proto.CompactTextString(m) }
func (*EntityTypeData) ProtoMessage()               {}
func (*EntityTypeData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{8} }

func (m *EntityTypeData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *EntityTypeData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type EntityOwnerData struct {
	PlayerId          uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName        string `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	PlayerHead        string `protobuf:"bytes,3,opt,name=player_head,json=playerHead" json:"player_head,omitempty"`
	GuildId           uint64 `protobuf:"varint,4,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName         string `protobuf:"bytes,5,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	GuildShortName    string `protobuf:"bytes,6,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	GuildIcon         uint32 `protobuf:"varint,7,opt,name=guild_icon,json=guildIcon" json:"guild_icon,omitempty"`
	KingdomId         uint32 `protobuf:"varint,10,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
	ForceId           uint32 `protobuf:"varint,11,opt,name=force_id,json=forceId" json:"force_id,omitempty"`
	NpcForceId        uint64 `protobuf:"varint,12,opt,name=npc_force_id,json=npcForceId" json:"npc_force_id,omitempty"`
	NpcForceName      string `protobuf:"bytes,13,opt,name=npc_force_name,json=npcForceName" json:"npc_force_name,omitempty"`
	NpcForceShortName string `protobuf:"bytes,14,opt,name=npc_force_short_name,json=npcForceShortName" json:"npc_force_short_name,omitempty"`
	NpcForceFlag      uint32 `protobuf:"varint,15,opt,name=npc_force_flag,json=npcForceFlag" json:"npc_force_flag,omitempty"`
	DrawLine          bool   `protobuf:"varint,16,opt,name=draw_line,json=drawLine" json:"draw_line,omitempty"`
}

func (m *EntityOwnerData) Reset()                    { *m = EntityOwnerData{} }
func (m *EntityOwnerData) String() string            { return proto.CompactTextString(m) }
func (*EntityOwnerData) ProtoMessage()               {}
func (*EntityOwnerData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{9} }

func (m *EntityOwnerData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *EntityOwnerData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *EntityOwnerData) GetPlayerHead() string {
	if m != nil {
		return m.PlayerHead
	}
	return ""
}

func (m *EntityOwnerData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *EntityOwnerData) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *EntityOwnerData) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *EntityOwnerData) GetGuildIcon() uint32 {
	if m != nil {
		return m.GuildIcon
	}
	return 0
}

func (m *EntityOwnerData) GetKingdomId() uint32 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

func (m *EntityOwnerData) GetForceId() uint32 {
	if m != nil {
		return m.ForceId
	}
	return 0
}

func (m *EntityOwnerData) GetNpcForceId() uint64 {
	if m != nil {
		return m.NpcForceId
	}
	return 0
}

func (m *EntityOwnerData) GetNpcForceName() string {
	if m != nil {
		return m.NpcForceName
	}
	return ""
}

func (m *EntityOwnerData) GetNpcForceShortName() string {
	if m != nil {
		return m.NpcForceShortName
	}
	return ""
}

func (m *EntityOwnerData) GetNpcForceFlag() uint32 {
	if m != nil {
		return m.NpcForceFlag
	}
	return 0
}

func (m *EntityOwnerData) GetDrawLine() bool {
	if m != nil {
		return m.DrawLine
	}
	return false
}

type EntityMarchData struct {
	MarchIndex          uint32 `protobuf:"varint,1,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
	ReturnAp            uint32 `protobuf:"varint,2,opt,name=return_ap,json=returnAp" json:"return_ap,omitempty"`
	KillBarbariansCount uint32 `protobuf:"varint,3,opt,name=kill_barbarians_count,json=killBarbariansCount" json:"kill_barbarians_count,omitempty"`
	MarchSpeed          int64  `protobuf:"varint,4,opt,name=march_speed,json=marchSpeed" json:"march_speed,omitempty"`
	PickEndTime         int64  `protobuf:"varint,5,opt,name=pick_end_time,json=pickEndTime" json:"pick_end_time,omitempty"`
}

func (m *EntityMarchData) Reset()                    { *m = EntityMarchData{} }
func (m *EntityMarchData) String() string            { return proto.CompactTextString(m) }
func (*EntityMarchData) ProtoMessage()               {}
func (*EntityMarchData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{10} }

func (m *EntityMarchData) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

func (m *EntityMarchData) GetReturnAp() uint32 {
	if m != nil {
		return m.ReturnAp
	}
	return 0
}

func (m *EntityMarchData) GetKillBarbariansCount() uint32 {
	if m != nil {
		return m.KillBarbariansCount
	}
	return 0
}

func (m *EntityMarchData) GetMarchSpeed() int64 {
	if m != nil {
		return m.MarchSpeed
	}
	return 0
}

func (m *EntityMarchData) GetPickEndTime() int64 {
	if m != nil {
		return m.PickEndTime
	}
	return 0
}

type EntitySimpleData struct {
	EntityType EntityType `protobuf:"varint,1,opt,name=entity_type,json=entityType,enum=protomsg.EntityType" json:"entity_type,omitempty"`
	EntityId   uint64     `protobuf:"varint,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ConfigId   uint32     `protobuf:"varint,3,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Level      uint32     `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	PlayerId   uint64     `protobuf:"varint,5,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	GuildId    uint64     `protobuf:"varint,6,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
}

func (m *EntitySimpleData) Reset()                    { *m = EntitySimpleData{} }
func (m *EntitySimpleData) String() string            { return proto.CompactTextString(m) }
func (*EntitySimpleData) ProtoMessage()               {}
func (*EntitySimpleData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{11} }

func (m *EntitySimpleData) GetEntityType() EntityType {
	if m != nil {
		return m.EntityType
	}
	return EntityType_kEntityType_None
}

func (m *EntitySimpleData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *EntitySimpleData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *EntitySimpleData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *EntitySimpleData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *EntitySimpleData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

type StatePathData struct {
	PassId uint64      `protobuf:"varint,1,opt,name=pass_id,json=passId" json:"pass_id,omitempty"`
	Paths  []*Vector2D `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
}

func (m *StatePathData) Reset()                    { *m = StatePathData{} }
func (m *StatePathData) String() string            { return proto.CompactTextString(m) }
func (*StatePathData) ProtoMessage()               {}
func (*StatePathData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{12} }

func (m *StatePathData) GetPassId() uint64 {
	if m != nil {
		return m.PassId
	}
	return 0
}

func (m *StatePathData) GetPaths() []*Vector2D {
	if m != nil {
		return m.Paths
	}
	return nil
}

type StatePathDatas struct {
	Datas []*StatePathData `protobuf:"bytes,1,rep,name=datas" json:"datas,omitempty"`
}

func (m *StatePathDatas) Reset()                    { *m = StatePathDatas{} }
func (m *StatePathDatas) String() string            { return proto.CompactTextString(m) }
func (*StatePathDatas) ProtoMessage()               {}
func (*StatePathDatas) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{13} }

func (m *StatePathDatas) GetDatas() []*StatePathData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type PathData struct {
	CurKingdomPath []*Vector2D `protobuf:"bytes,2,rep,name=cur_kingdom_path,json=curKingdomPath" json:"cur_kingdom_path,omitempty"`
}

func (m *PathData) Reset()                    { *m = PathData{} }
func (m *PathData) String() string            { return proto.CompactTextString(m) }
func (*PathData) ProtoMessage()               {}
func (*PathData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{14} }

func (m *PathData) GetCurKingdomPath() []*Vector2D {
	if m != nil {
		return m.CurKingdomPath
	}
	return nil
}

type TroopData struct {
	TroopId    uint32 `protobuf:"varint,1,opt,name=troop_id,json=troopId" json:"troop_id,omitempty"`
	TroopUints uint32 `protobuf:"varint,2,opt,name=troop_uints,json=troopUints" json:"troop_uints,omitempty"`
}

func (m *TroopData) Reset()                    { *m = TroopData{} }
func (m *TroopData) String() string            { return proto.CompactTextString(m) }
func (*TroopData) ProtoMessage()               {}
func (*TroopData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{15} }

func (m *TroopData) GetTroopId() uint32 {
	if m != nil {
		return m.TroopId
	}
	return 0
}

func (m *TroopData) GetTroopUints() uint32 {
	if m != nil {
		return m.TroopUints
	}
	return 0
}

type GuildMarchData struct {
	StartMarchTime int64            `protobuf:"varint,1,opt,name=start_march_time,json=startMarchTime" json:"start_march_time,omitempty"`
	EndMarchTime   int64            `protobuf:"varint,2,opt,name=end_march_time,json=endMarchTime" json:"end_march_time,omitempty"`
	Status         GuildMarchStatus `protobuf:"varint,3,opt,name=status,enum=protomsg.GuildMarchStatus" json:"status,omitempty"`
	StartPos       *Vector2D        `protobuf:"bytes,4,opt,name=start_pos,json=startPos" json:"start_pos,omitempty"`
	TargetType     uint32           `protobuf:"varint,5,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
}

func (m *GuildMarchData) Reset()                    { *m = GuildMarchData{} }
func (m *GuildMarchData) String() string            { return proto.CompactTextString(m) }
func (*GuildMarchData) ProtoMessage()               {}
func (*GuildMarchData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{16} }

func (m *GuildMarchData) GetStartMarchTime() int64 {
	if m != nil {
		return m.StartMarchTime
	}
	return 0
}

func (m *GuildMarchData) GetEndMarchTime() int64 {
	if m != nil {
		return m.EndMarchTime
	}
	return 0
}

func (m *GuildMarchData) GetStatus() GuildMarchStatus {
	if m != nil {
		return m.Status
	}
	return GuildMarchStatus_kGuildMarchStatus_None
}

func (m *GuildMarchData) GetStartPos() *Vector2D {
	if m != nil {
		return m.StartPos
	}
	return nil
}

func (m *GuildMarchData) GetTargetType() uint32 {
	if m != nil {
		return m.TargetType
	}
	return 0
}

type GuildMarchLimit struct {
	TroopTypeLimit uint32 `protobuf:"varint,1,opt,name=troop_type_limit,json=troopTypeLimit" json:"troop_type_limit,omitempty"`
	TroopRankLimit uint32 `protobuf:"varint,2,opt,name=troop_rank_limit,json=troopRankLimit" json:"troop_rank_limit,omitempty"`
}

func (m *GuildMarchLimit) Reset()                    { *m = GuildMarchLimit{} }
func (m *GuildMarchLimit) String() string            { return proto.CompactTextString(m) }
func (*GuildMarchLimit) ProtoMessage()               {}
func (*GuildMarchLimit) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{17} }

func (m *GuildMarchLimit) GetTroopTypeLimit() uint32 {
	if m != nil {
		return m.TroopTypeLimit
	}
	return 0
}

func (m *GuildMarchLimit) GetTroopRankLimit() uint32 {
	if m != nil {
		return m.TroopRankLimit
	}
	return 0
}

type GuildMarchInfo struct {
	EntityId      uint64          `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	BaseData      *GuildMarchData `protobuf:"bytes,2,opt,name=base_data,json=baseData" json:"base_data,omitempty"`
	ReenforceInfo *ReenforceInfo  `protobuf:"bytes,3,opt,name=reenforce_info,json=reenforceInfo" json:"reenforce_info,omitempty"`
	Command       *MarchCommand   `protobuf:"bytes,4,opt,name=command" json:"command,omitempty"`
	TargetData    *EntityBaseData `protobuf:"bytes,5,opt,name=target_data,json=targetData" json:"target_data,omitempty"`
	CurPos        *Vector2D       `protobuf:"bytes,6,opt,name=cur_pos,json=curPos" json:"cur_pos,omitempty"`
	MoveSpeed     int64           `protobuf:"varint,7,opt,name=move_speed,json=moveSpeed" json:"move_speed,omitempty"`
	MoveData      *MoveData       `protobuf:"bytes,8,opt,name=move_data,json=moveData" json:"move_data,omitempty"`
}

func (m *GuildMarchInfo) Reset()                    { *m = GuildMarchInfo{} }
func (m *GuildMarchInfo) String() string            { return proto.CompactTextString(m) }
func (*GuildMarchInfo) ProtoMessage()               {}
func (*GuildMarchInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{18} }

func (m *GuildMarchInfo) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *GuildMarchInfo) GetBaseData() *GuildMarchData {
	if m != nil {
		return m.BaseData
	}
	return nil
}

func (m *GuildMarchInfo) GetReenforceInfo() *ReenforceInfo {
	if m != nil {
		return m.ReenforceInfo
	}
	return nil
}

func (m *GuildMarchInfo) GetCommand() *MarchCommand {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *GuildMarchInfo) GetTargetData() *EntityBaseData {
	if m != nil {
		return m.TargetData
	}
	return nil
}

func (m *GuildMarchInfo) GetCurPos() *Vector2D {
	if m != nil {
		return m.CurPos
	}
	return nil
}

func (m *GuildMarchInfo) GetMoveSpeed() int64 {
	if m != nil {
		return m.MoveSpeed
	}
	return 0
}

func (m *GuildMarchInfo) GetMoveData() *MoveData {
	if m != nil {
		return m.MoveData
	}
	return nil
}

type GuildMarchAttackInfo struct {
	EntityId  uint64                 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	AlarmData []*GuildMarchAlarmData `protobuf:"bytes,2,rep,name=alarm_data,json=alarmData" json:"alarm_data,omitempty"`
}

func (m *GuildMarchAttackInfo) Reset()                    { *m = GuildMarchAttackInfo{} }
func (m *GuildMarchAttackInfo) String() string            { return proto.CompactTextString(m) }
func (*GuildMarchAttackInfo) ProtoMessage()               {}
func (*GuildMarchAttackInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{19} }

func (m *GuildMarchAttackInfo) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *GuildMarchAttackInfo) GetAlarmData() []*GuildMarchAlarmData {
	if m != nil {
		return m.AlarmData
	}
	return nil
}

type PlayerCastle struct {
	Id             uint64          `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ArmyData       *MarchArmyData  `protobuf:"bytes,30,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
	EffectData     *EffectData     `protobuf:"bytes,40,opt,name=effect_data,json=effectData" json:"effect_data,omitempty"`
	MainCastleData *MainCastleData `protobuf:"bytes,50,opt,name=main_castle_data,json=mainCastleData" json:"main_castle_data,omitempty"`
	WatchTowerData *MarchArmyData  `protobuf:"bytes,51,opt,name=watch_tower_data,json=watchTowerData" json:"watch_tower_data,omitempty"`
}

func (m *PlayerCastle) Reset()                    { *m = PlayerCastle{} }
func (m *PlayerCastle) String() string            { return proto.CompactTextString(m) }
func (*PlayerCastle) ProtoMessage()               {}
func (*PlayerCastle) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{20} }

func (m *PlayerCastle) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerCastle) GetArmyData() *MarchArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

func (m *PlayerCastle) GetEffectData() *EffectData {
	if m != nil {
		return m.EffectData
	}
	return nil
}

func (m *PlayerCastle) GetMainCastleData() *MainCastleData {
	if m != nil {
		return m.MainCastleData
	}
	return nil
}

func (m *PlayerCastle) GetWatchTowerData() *MarchArmyData {
	if m != nil {
		return m.WatchTowerData
	}
	return nil
}

type BarbariansMeta struct {
	Id             uint64          `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	MapData        *MapData        `protobuf:"bytes,20,opt,name=map_data,json=mapData" json:"map_data,omitempty"`
	BarbariansData *BarbariansData `protobuf:"bytes,21,opt,name=barbarians_data,json=barbariansData" json:"barbarians_data,omitempty"`
	EffectData     *EffectData     `protobuf:"bytes,22,opt,name=effect_data,json=effectData" json:"effect_data,omitempty"`
	ArmyData       *MarchArmyData  `protobuf:"bytes,23,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
}

func (m *BarbariansMeta) Reset()                    { *m = BarbariansMeta{} }
func (m *BarbariansMeta) String() string            { return proto.CompactTextString(m) }
func (*BarbariansMeta) ProtoMessage()               {}
func (*BarbariansMeta) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{21} }

func (m *BarbariansMeta) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BarbariansMeta) GetMapData() *MapData {
	if m != nil {
		return m.MapData
	}
	return nil
}

func (m *BarbariansMeta) GetBarbariansData() *BarbariansData {
	if m != nil {
		return m.BarbariansData
	}
	return nil
}

func (m *BarbariansMeta) GetEffectData() *EffectData {
	if m != nil {
		return m.EffectData
	}
	return nil
}

func (m *BarbariansMeta) GetArmyData() *MarchArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

type CollectResource struct {
	CollectId   uint32     `protobuf:"varint,1,opt,name=collect_id,json=collectId" json:"collect_id,omitempty"`
	Pos         *Vector2D  `protobuf:"bytes,2,opt,name=pos" json:"pos,omitempty"`
	Res         *Resource  `protobuf:"bytes,3,opt,name=res" json:"res,omitempty"`
	CollectTime int64      `protobuf:"varint,4,opt,name=collect_time,json=collectTime" json:"collect_time,omitempty"`
	EntityType  EntityType `protobuf:"varint,5,opt,name=entity_type,json=entityType,enum=protomsg.EntityType" json:"entity_type,omitempty"`
}

func (m *CollectResource) Reset()                    { *m = CollectResource{} }
func (m *CollectResource) String() string            { return proto.CompactTextString(m) }
func (*CollectResource) ProtoMessage()               {}
func (*CollectResource) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{22} }

func (m *CollectResource) GetCollectId() uint32 {
	if m != nil {
		return m.CollectId
	}
	return 0
}

func (m *CollectResource) GetPos() *Vector2D {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CollectResource) GetRes() *Resource {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *CollectResource) GetCollectTime() int64 {
	if m != nil {
		return m.CollectTime
	}
	return 0
}

func (m *CollectResource) GetEntityType() EntityType {
	if m != nil {
		return m.EntityType
	}
	return EntityType_kEntityType_None
}

type ResourceData struct {
	CollectRes   []*CollectResource `protobuf:"bytes,2,rep,name=collect_res,json=collectRes" json:"collect_res,omitempty"`
	BattleRes    []*Resource        `protobuf:"bytes,3,rep,name=battle_res,json=battleRes" json:"battle_res,omitempty"`
	ConstructRes []*Resource        `protobuf:"bytes,4,rep,name=construct_res,json=constructRes" json:"construct_res,omitempty"`
}

func (m *ResourceData) Reset()                    { *m = ResourceData{} }
func (m *ResourceData) String() string            { return proto.CompactTextString(m) }
func (*ResourceData) ProtoMessage()               {}
func (*ResourceData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{23} }

func (m *ResourceData) GetCollectRes() []*CollectResource {
	if m != nil {
		return m.CollectRes
	}
	return nil
}

func (m *ResourceData) GetBattleRes() []*Resource {
	if m != nil {
		return m.BattleRes
	}
	return nil
}

func (m *ResourceData) GetConstructRes() []*Resource {
	if m != nil {
		return m.ConstructRes
	}
	return nil
}

type CollectData struct {
	RemainResourceCount uint32 `protobuf:"varint,4,opt,name=remain_resource_count,json=remainResourceCount" json:"remain_resource_count,omitempty"`
	MarchEntityId       uint64 `protobuf:"varint,5,opt,name=march_entity_id,json=marchEntityId" json:"march_entity_id,omitempty"`
	StartTime           int64  `protobuf:"varint,6,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime             int64  `protobuf:"varint,7,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	AlreadyCollect      uint32 `protobuf:"varint,8,opt,name=already_collect,json=alreadyCollect" json:"already_collect,omitempty"`
	Speed               uint32 `protobuf:"varint,9,opt,name=speed" json:"speed,omitempty"`
	MaxCollectCount     uint32 `protobuf:"varint,10,opt,name=max_collect_count,json=maxCollectCount" json:"max_collect_count,omitempty"`
}

func (m *CollectData) Reset()                    { *m = CollectData{} }
func (m *CollectData) String() string            { return proto.CompactTextString(m) }
func (*CollectData) ProtoMessage()               {}
func (*CollectData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{24} }

func (m *CollectData) GetRemainResourceCount() uint32 {
	if m != nil {
		return m.RemainResourceCount
	}
	return 0
}

func (m *CollectData) GetMarchEntityId() uint64 {
	if m != nil {
		return m.MarchEntityId
	}
	return 0
}

func (m *CollectData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CollectData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *CollectData) GetAlreadyCollect() uint32 {
	if m != nil {
		return m.AlreadyCollect
	}
	return 0
}

func (m *CollectData) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *CollectData) GetMaxCollectCount() uint32 {
	if m != nil {
		return m.MaxCollectCount
	}
	return 0
}

// 公会城战数据
type GuildTempleWarData struct {
	GuildId        uint64 `protobuf:"varint,1,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	Point          uint32 `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
	GuildName      string `protobuf:"bytes,3,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	GuildShortName string `protobuf:"bytes,4,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	GuildIcon      uint32 `protobuf:"varint,5,opt,name=guild_icon,json=guildIcon" json:"guild_icon,omitempty"`
}

func (m *GuildTempleWarData) Reset()                    { *m = GuildTempleWarData{} }
func (m *GuildTempleWarData) String() string            { return proto.CompactTextString(m) }
func (*GuildTempleWarData) ProtoMessage()               {}
func (*GuildTempleWarData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{25} }

func (m *GuildTempleWarData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *GuildTempleWarData) GetPoint() uint32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *GuildTempleWarData) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *GuildTempleWarData) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *GuildTempleWarData) GetGuildIcon() uint32 {
	if m != nil {
		return m.GuildIcon
	}
	return 0
}

type PlayerTempleWarDBData struct {
	PlayerId uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Point    uint32 `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
}

func (m *PlayerTempleWarDBData) Reset()                    { *m = PlayerTempleWarDBData{} }
func (m *PlayerTempleWarDBData) String() string            { return proto.CompactTextString(m) }
func (*PlayerTempleWarDBData) ProtoMessage()               {}
func (*PlayerTempleWarDBData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{26} }

func (m *PlayerTempleWarDBData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerTempleWarDBData) GetPoint() uint32 {
	if m != nil {
		return m.Point
	}
	return 0
}

type GuildTempleWarDBData struct {
	GuildId    uint64                   `protobuf:"varint,1,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	Point      uint32                   `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
	PlayerData []*PlayerTempleWarDBData `protobuf:"bytes,3,rep,name=player_data,json=playerData" json:"player_data,omitempty"`
}

func (m *GuildTempleWarDBData) Reset()                    { *m = GuildTempleWarDBData{} }
func (m *GuildTempleWarDBData) String() string            { return proto.CompactTextString(m) }
func (*GuildTempleWarDBData) ProtoMessage()               {}
func (*GuildTempleWarDBData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{27} }

func (m *GuildTempleWarDBData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *GuildTempleWarDBData) GetPoint() uint32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *GuildTempleWarDBData) GetPlayerData() []*PlayerTempleWarDBData {
	if m != nil {
		return m.PlayerData
	}
	return nil
}

// 奇观同步数据
type TempleData struct {
	Status         uint32                `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	StartTime      int64                 `protobuf:"varint,6,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64                 `protobuf:"varint,7,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	IsActive       bool                  `protobuf:"varint,8,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	IsCaptured     bool                  `protobuf:"varint,9,opt,name=is_captured,json=isCaptured" json:"is_captured,omitempty"`
	IsBattle       bool                  `protobuf:"varint,10,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	WarGuilds      []*GuildTempleWarData `protobuf:"bytes,11,rep,name=war_guilds,json=warGuilds" json:"war_guilds,omitempty"`
	WarEndTime     int64                 `protobuf:"varint,12,opt,name=war_end_time,json=warEndTime" json:"war_end_time,omitempty"`
	ArmyCurrentNum uint32                `protobuf:"varint,13,opt,name=army_current_num,json=armyCurrentNum" json:"army_current_num,omitempty"`
	ArmyTotalNum   uint32                `protobuf:"varint,14,opt,name=army_total_num,json=armyTotalNum" json:"army_total_num,omitempty"`
}

func (m *TempleData) Reset()                    { *m = TempleData{} }
func (m *TempleData) String() string            { return proto.CompactTextString(m) }
func (*TempleData) ProtoMessage()               {}
func (*TempleData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{28} }

func (m *TempleData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TempleData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TempleData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *TempleData) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *TempleData) GetIsCaptured() bool {
	if m != nil {
		return m.IsCaptured
	}
	return false
}

func (m *TempleData) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *TempleData) GetWarGuilds() []*GuildTempleWarData {
	if m != nil {
		return m.WarGuilds
	}
	return nil
}

func (m *TempleData) GetWarEndTime() int64 {
	if m != nil {
		return m.WarEndTime
	}
	return 0
}

func (m *TempleData) GetArmyCurrentNum() uint32 {
	if m != nil {
		return m.ArmyCurrentNum
	}
	return 0
}

func (m *TempleData) GetArmyTotalNum() uint32 {
	if m != nil {
		return m.ArmyTotalNum
	}
	return 0
}

// 奇观入库数据
type TempleDbData struct {
	Status         uint32                  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	StartTime      int64                   `protobuf:"varint,6,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64                   `protobuf:"varint,7,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	IsActive       bool                    `protobuf:"varint,8,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	IsCaptured     bool                    `protobuf:"varint,9,opt,name=is_captured,json=isCaptured" json:"is_captured,omitempty"`
	IsBattle       bool                    `protobuf:"varint,10,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	FirstCaptureId uint64                  `protobuf:"varint,14,opt,name=first_capture_id,json=firstCaptureId" json:"first_capture_id,omitempty"`
	WarGuilds      []*GuildTempleWarDBData `protobuf:"bytes,15,rep,name=war_guilds,json=warGuilds" json:"war_guilds,omitempty"`
	WarEndTime     int64                   `protobuf:"varint,16,opt,name=war_end_time,json=warEndTime" json:"war_end_time,omitempty"`
}

func (m *TempleDbData) Reset()                    { *m = TempleDbData{} }
func (m *TempleDbData) String() string            { return proto.CompactTextString(m) }
func (*TempleDbData) ProtoMessage()               {}
func (*TempleDbData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{29} }

func (m *TempleDbData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TempleDbData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TempleDbData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *TempleDbData) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *TempleDbData) GetIsCaptured() bool {
	if m != nil {
		return m.IsCaptured
	}
	return false
}

func (m *TempleDbData) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *TempleDbData) GetFirstCaptureId() uint64 {
	if m != nil {
		return m.FirstCaptureId
	}
	return 0
}

func (m *TempleDbData) GetWarGuilds() []*GuildTempleWarDBData {
	if m != nil {
		return m.WarGuilds
	}
	return nil
}

func (m *TempleDbData) GetWarEndTime() int64 {
	if m != nil {
		return m.WarEndTime
	}
	return 0
}

// 奇观数据
type PassData struct {
	Status         uint32 `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	IsCaptured     bool   `protobuf:"varint,6,opt,name=is_captured,json=isCaptured" json:"is_captured,omitempty"`
	IsActive       bool   `protobuf:"varint,8,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	IsBattle       bool   `protobuf:"varint,9,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	FirstCaptureId uint64 `protobuf:"varint,10,opt,name=first_capture_id,json=firstCaptureId" json:"first_capture_id,omitempty"`
	StartTime      int64  `protobuf:"varint,11,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64  `protobuf:"varint,12,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *PassData) Reset()                    { *m = PassData{} }
func (m *PassData) String() string            { return proto.CompactTextString(m) }
func (*PassData) ProtoMessage()               {}
func (*PassData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{30} }

func (m *PassData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PassData) GetIsCaptured() bool {
	if m != nil {
		return m.IsCaptured
	}
	return false
}

func (m *PassData) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PassData) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *PassData) GetFirstCaptureId() uint64 {
	if m != nil {
		return m.FirstCaptureId
	}
	return 0
}

func (m *PassData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PassData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type MarchCommand struct {
	Position      *Vector2D          `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	TargetType    MarchCommandTarget `protobuf:"varint,3,opt,name=target_type,json=targetType,enum=protomsg.MarchCommandTarget" json:"target_type,omitempty"`
	TargetId      uint64             `protobuf:"varint,4,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	IsQuarter     int32              `protobuf:"varint,5,opt,name=is_quarter,json=isQuarter" json:"is_quarter,omitempty"`
	CommandStatus MarchCommandStatus `protobuf:"varint,99,opt,name=command_status,json=commandStatus,enum=protomsg.MarchCommandStatus" json:"command_status,omitempty"`
}

func (m *MarchCommand) Reset()                    { *m = MarchCommand{} }
func (m *MarchCommand) String() string            { return proto.CompactTextString(m) }
func (*MarchCommand) ProtoMessage()               {}
func (*MarchCommand) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{31} }

func (m *MarchCommand) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MarchCommand) GetTargetType() MarchCommandTarget {
	if m != nil {
		return m.TargetType
	}
	return MarchCommandTarget_kMarchCommandTarget_None
}

func (m *MarchCommand) GetTargetId() uint64 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *MarchCommand) GetIsQuarter() int32 {
	if m != nil {
		return m.IsQuarter
	}
	return 0
}

func (m *MarchCommand) GetCommandStatus() MarchCommandStatus {
	if m != nil {
		return m.CommandStatus
	}
	return MarchCommandStatus_kMarchCommandStatus_None
}

type CastleCreateData struct {
	ArmyData       *MarchArmyData `protobuf:"bytes,1,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
	WatchTowerData *MarchArmyData `protobuf:"bytes,2,opt,name=watch_tower_data,json=watchTowerData" json:"watch_tower_data,omitempty"`
	AreaId         uint32         `protobuf:"varint,3,opt,name=area_id,json=areaId" json:"area_id,omitempty"`
	InitPos        *Vector2D      `protobuf:"bytes,4,opt,name=init_pos,json=initPos" json:"init_pos,omitempty"`
	Prosperity     uint32         `protobuf:"varint,5,opt,name=prosperity" json:"prosperity,omitempty"`
}

func (m *CastleCreateData) Reset()                    { *m = CastleCreateData{} }
func (m *CastleCreateData) String() string            { return proto.CompactTextString(m) }
func (*CastleCreateData) ProtoMessage()               {}
func (*CastleCreateData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{32} }

func (m *CastleCreateData) GetArmyData() *MarchArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

func (m *CastleCreateData) GetWatchTowerData() *MarchArmyData {
	if m != nil {
		return m.WatchTowerData
	}
	return nil
}

func (m *CastleCreateData) GetAreaId() uint32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *CastleCreateData) GetInitPos() *Vector2D {
	if m != nil {
		return m.InitPos
	}
	return nil
}

func (m *CastleCreateData) GetProsperity() uint32 {
	if m != nil {
		return m.Prosperity
	}
	return 0
}

type CastleCreateResultData struct {
	EntityId uint64    `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Position *Vector2D `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	ArmyData *ArmyData `protobuf:"bytes,3,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
}

func (m *CastleCreateResultData) Reset()                    { *m = CastleCreateResultData{} }
func (m *CastleCreateResultData) String() string            { return proto.CompactTextString(m) }
func (*CastleCreateResultData) ProtoMessage()               {}
func (*CastleCreateResultData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{33} }

func (m *CastleCreateResultData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *CastleCreateResultData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CastleCreateResultData) GetArmyData() *ArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

type MarchCreateData struct {
	ArmyData   *MarchArmyData `protobuf:"bytes,1,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
	Command    *MarchCommand  `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	FromCastle bool           `protobuf:"varint,3,opt,name=from_castle,json=fromCastle" json:"from_castle,omitempty"`
	InitPos    *Vector2D      `protobuf:"bytes,4,opt,name=init_pos,json=initPos" json:"init_pos,omitempty"`
	InitDir    *Vector2D      `protobuf:"bytes,5,opt,name=init_dir,json=initDir" json:"init_dir,omitempty"`
}

func (m *MarchCreateData) Reset()                    { *m = MarchCreateData{} }
func (m *MarchCreateData) String() string            { return proto.CompactTextString(m) }
func (*MarchCreateData) ProtoMessage()               {}
func (*MarchCreateData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{34} }

func (m *MarchCreateData) GetArmyData() *MarchArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

func (m *MarchCreateData) GetCommand() *MarchCommand {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *MarchCreateData) GetFromCastle() bool {
	if m != nil {
		return m.FromCastle
	}
	return false
}

func (m *MarchCreateData) GetInitPos() *Vector2D {
	if m != nil {
		return m.InitPos
	}
	return nil
}

func (m *MarchCreateData) GetInitDir() *Vector2D {
	if m != nil {
		return m.InitDir
	}
	return nil
}

type MarchCreateResultData struct {
	EntityId   uint64    `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ArmyData   *ArmyData `protobuf:"bytes,2,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
	MarchIndex uint32    `protobuf:"varint,3,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
}

func (m *MarchCreateResultData) Reset()                    { *m = MarchCreateResultData{} }
func (m *MarchCreateResultData) String() string            { return proto.CompactTextString(m) }
func (*MarchCreateResultData) ProtoMessage()               {}
func (*MarchCreateResultData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{35} }

func (m *MarchCreateResultData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MarchCreateResultData) GetArmyData() *ArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

func (m *MarchCreateResultData) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

type MapPlayerExtandData struct {
	Misc    *MapMiscData       `protobuf:"bytes,1,opt,name=misc" json:"misc,omitempty"`
	Explore *PlayerExploreInfo `protobuf:"bytes,2,opt,name=explore" json:"explore,omitempty"`
}

func (m *MapPlayerExtandData) Reset()                    { *m = MapPlayerExtandData{} }
func (m *MapPlayerExtandData) String() string            { return proto.CompactTextString(m) }
func (*MapPlayerExtandData) ProtoMessage()               {}
func (*MapPlayerExtandData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{36} }

func (m *MapPlayerExtandData) GetMisc() *MapMiscData {
	if m != nil {
		return m.Misc
	}
	return nil
}

func (m *MapPlayerExtandData) GetExplore() *PlayerExploreInfo {
	if m != nil {
		return m.Explore
	}
	return nil
}

type MapPlayerPresbyterData struct {
	Presbyters []*Presbyter `protobuf:"bytes,1,rep,name=presbyters" json:"presbyters,omitempty"`
}

func (m *MapPlayerPresbyterData) Reset()                    { *m = MapPlayerPresbyterData{} }
func (m *MapPlayerPresbyterData) String() string            { return proto.CompactTextString(m) }
func (*MapPlayerPresbyterData) ProtoMessage()               {}
func (*MapPlayerPresbyterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{37} }

func (m *MapPlayerPresbyterData) GetPresbyters() []*Presbyter {
	if m != nil {
		return m.Presbyters
	}
	return nil
}

type MapPlayerRegisterData struct {
	PlayerId      uint64                  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerData    *MapPlayerData          `protobuf:"bytes,2,opt,name=player_data,json=playerData" json:"player_data,omitempty"`
	InitCastle    bool                    `protobuf:"varint,3,opt,name=init_castle,json=initCastle" json:"init_castle,omitempty"`
	CastleData    *CastleCreateData       `protobuf:"bytes,4,opt,name=castle_data,json=castleData" json:"castle_data,omitempty"`
	MarchDatas    []*MarchCreateData      `protobuf:"bytes,5,rep,name=march_datas,json=marchDatas" json:"march_datas,omitempty"`
	ExtandData    *MapPlayerExtandData    `protobuf:"bytes,6,opt,name=extand_data,json=extandData" json:"extand_data,omitempty"`
	PresbyterData *MapPlayerPresbyterData `protobuf:"bytes,7,opt,name=presbyter_data,json=presbyterData" json:"presbyter_data,omitempty"`
	IsNewPlayer   bool                    `protobuf:"varint,8,opt,name=is_new_player,json=isNewPlayer" json:"is_new_player,omitempty"`
}

func (m *MapPlayerRegisterData) Reset()                    { *m = MapPlayerRegisterData{} }
func (m *MapPlayerRegisterData) String() string            { return proto.CompactTextString(m) }
func (*MapPlayerRegisterData) ProtoMessage()               {}
func (*MapPlayerRegisterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{38} }

func (m *MapPlayerRegisterData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MapPlayerRegisterData) GetPlayerData() *MapPlayerData {
	if m != nil {
		return m.PlayerData
	}
	return nil
}

func (m *MapPlayerRegisterData) GetInitCastle() bool {
	if m != nil {
		return m.InitCastle
	}
	return false
}

func (m *MapPlayerRegisterData) GetCastleData() *CastleCreateData {
	if m != nil {
		return m.CastleData
	}
	return nil
}

func (m *MapPlayerRegisterData) GetMarchDatas() []*MarchCreateData {
	if m != nil {
		return m.MarchDatas
	}
	return nil
}

func (m *MapPlayerRegisterData) GetExtandData() *MapPlayerExtandData {
	if m != nil {
		return m.ExtandData
	}
	return nil
}

func (m *MapPlayerRegisterData) GetPresbyterData() *MapPlayerPresbyterData {
	if m != nil {
		return m.PresbyterData
	}
	return nil
}

func (m *MapPlayerRegisterData) GetIsNewPlayer() bool {
	if m != nil {
		return m.IsNewPlayer
	}
	return false
}

type MapPlayerRegisterResultData struct {
	PlayerId         uint64                   `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	CastleResultData *CastleCreateResultData  `protobuf:"bytes,3,opt,name=castle_result_data,json=castleResultData" json:"castle_result_data,omitempty"`
	MarchResultDatas []*MarchCreateResultData `protobuf:"bytes,4,rep,name=march_result_datas,json=marchResultDatas" json:"march_result_datas,omitempty"`
	IsNew            bool                     `protobuf:"varint,5,opt,name=is_new,json=isNew" json:"is_new,omitempty"`
}

func (m *MapPlayerRegisterResultData) Reset()                    { *m = MapPlayerRegisterResultData{} }
func (m *MapPlayerRegisterResultData) String() string            { return proto.CompactTextString(m) }
func (*MapPlayerRegisterResultData) ProtoMessage()               {}
func (*MapPlayerRegisterResultData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{39} }

func (m *MapPlayerRegisterResultData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MapPlayerRegisterResultData) GetCastleResultData() *CastleCreateResultData {
	if m != nil {
		return m.CastleResultData
	}
	return nil
}

func (m *MapPlayerRegisterResultData) GetMarchResultDatas() []*MarchCreateResultData {
	if m != nil {
		return m.MarchResultDatas
	}
	return nil
}

func (m *MapPlayerRegisterResultData) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

type MapPlayerUnRegisterResultData struct {
	PlayerId      uint64                  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	StateId       uint32                  `protobuf:"varint,2,opt,name=state_id,json=stateId" json:"state_id,omitempty"`
	Ap            uint32                  `protobuf:"varint,3,opt,name=ap" json:"ap,omitempty"`
	LastApAddTime int64                   `protobuf:"varint,4,opt,name=last_ap_add_time,json=lastApAddTime" json:"last_ap_add_time,omitempty"`
	PresbyterData *MapPlayerPresbyterData `protobuf:"bytes,5,opt,name=presbyter_data,json=presbyterData" json:"presbyter_data,omitempty"`
}

func (m *MapPlayerUnRegisterResultData) Reset()                    { *m = MapPlayerUnRegisterResultData{} }
func (m *MapPlayerUnRegisterResultData) String() string            { return proto.CompactTextString(m) }
func (*MapPlayerUnRegisterResultData) ProtoMessage()               {}
func (*MapPlayerUnRegisterResultData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{40} }

func (m *MapPlayerUnRegisterResultData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MapPlayerUnRegisterResultData) GetStateId() uint32 {
	if m != nil {
		return m.StateId
	}
	return 0
}

func (m *MapPlayerUnRegisterResultData) GetAp() uint32 {
	if m != nil {
		return m.Ap
	}
	return 0
}

func (m *MapPlayerUnRegisterResultData) GetLastApAddTime() int64 {
	if m != nil {
		return m.LastApAddTime
	}
	return 0
}

func (m *MapPlayerUnRegisterResultData) GetPresbyterData() *MapPlayerPresbyterData {
	if m != nil {
		return m.PresbyterData
	}
	return nil
}

type MapPlayerUpdateData struct {
	IsResetData  bool             `protobuf:"varint,1,opt,name=is_reset_data,json=isResetData" json:"is_reset_data,omitempty"`
	PlayerData   *MapPlayerData   `protobuf:"bytes,2,opt,name=player_data,json=playerData" json:"player_data,omitempty"`
	GarrisonData *ArmyHeroData    `protobuf:"bytes,3,opt,name=garrison_data,json=garrisonData" json:"garrison_data,omitempty"`
	MarchHeros   []*MarchHeroData `protobuf:"bytes,4,rep,name=march_heros,json=marchHeros" json:"march_heros,omitempty"`
}

func (m *MapPlayerUpdateData) Reset()                    { *m = MapPlayerUpdateData{} }
func (m *MapPlayerUpdateData) String() string            { return proto.CompactTextString(m) }
func (*MapPlayerUpdateData) ProtoMessage()               {}
func (*MapPlayerUpdateData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{41} }

func (m *MapPlayerUpdateData) GetIsResetData() bool {
	if m != nil {
		return m.IsResetData
	}
	return false
}

func (m *MapPlayerUpdateData) GetPlayerData() *MapPlayerData {
	if m != nil {
		return m.PlayerData
	}
	return nil
}

func (m *MapPlayerUpdateData) GetGarrisonData() *ArmyHeroData {
	if m != nil {
		return m.GarrisonData
	}
	return nil
}

func (m *MapPlayerUpdateData) GetMarchHeros() []*MarchHeroData {
	if m != nil {
		return m.MarchHeros
	}
	return nil
}

type BarbariansData struct {
	Time         uint32 `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	BarbariansId uint32 `protobuf:"varint,3,opt,name=barbarians_id,json=barbariansId" json:"barbarians_id,omitempty"`
}

func (m *BarbariansData) Reset()                    { *m = BarbariansData{} }
func (m *BarbariansData) String() string            { return proto.CompactTextString(m) }
func (*BarbariansData) ProtoMessage()               {}
func (*BarbariansData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{42} }

func (m *BarbariansData) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *BarbariansData) GetBarbariansId() uint32 {
	if m != nil {
		return m.BarbariansId
	}
	return 0
}

type SummonData struct {
	SummonId uint32 `protobuf:"varint,1,opt,name=summon_id,json=summonId" json:"summon_id,omitempty"`
}

func (m *SummonData) Reset()                    { *m = SummonData{} }
func (m *SummonData) String() string            { return proto.CompactTextString(m) }
func (*SummonData) ProtoMessage()               {}
func (*SummonData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{43} }

func (m *SummonData) GetSummonId() uint32 {
	if m != nil {
		return m.SummonId
	}
	return 0
}

type TrapData struct {
	TrapId uint32 `protobuf:"varint,1,opt,name=trap_id,json=trapId" json:"trap_id,omitempty"`
}

func (m *TrapData) Reset()                    { *m = TrapData{} }
func (m *TrapData) String() string            { return proto.CompactTextString(m) }
func (*TrapData) ProtoMessage()               {}
func (*TrapData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{44} }

func (m *TrapData) GetTrapId() uint32 {
	if m != nil {
		return m.TrapId
	}
	return 0
}

type ArmyData struct {
	Hero1            uint32       `protobuf:"varint,1,opt,name=hero1" json:"hero1,omitempty"`
	Hero2            uint32       `protobuf:"varint,2,opt,name=hero2" json:"hero2,omitempty"`
	InitTroops       []*TroopData `protobuf:"bytes,3,rep,name=init_troops,json=initTroops" json:"init_troops,omitempty"`
	Hero1Level       uint32       `protobuf:"varint,4,opt,name=hero1_level,json=hero1Level" json:"hero1_level,omitempty"`
	Hero2Level       uint32       `protobuf:"varint,6,opt,name=hero2_level,json=hero2Level" json:"hero2_level,omitempty"`
	CurrentTroops    []*TroopData `protobuf:"bytes,8,rep,name=current_troops,json=currentTroops" json:"current_troops,omitempty"`
	SlightWoodTroops []*TroopData `protobuf:"bytes,9,rep,name=slight_wood_troops,json=slightWoodTroops" json:"slight_wood_troops,omitempty"`
	Hero3            uint32       `protobuf:"varint,10,opt,name=hero3" json:"hero3,omitempty"`
	Hero3Level       uint32       `protobuf:"varint,11,opt,name=hero3_level,json=hero3Level" json:"hero3_level,omitempty"`
	Hero4            uint32       `protobuf:"varint,12,opt,name=hero4" json:"hero4,omitempty"`
	Hero4Level       uint32       `protobuf:"varint,13,opt,name=hero4_level,json=hero4Level" json:"hero4_level,omitempty"`
	Hero5            uint32       `protobuf:"varint,14,opt,name=hero5" json:"hero5,omitempty"`
	Hero5Level       uint32       `protobuf:"varint,15,opt,name=hero5_level,json=hero5Level" json:"hero5_level,omitempty"`
	Radius           uint32       `protobuf:"varint,22,opt,name=radius" json:"radius,omitempty"`
	DeployId         uint32       `protobuf:"varint,23,opt,name=deploy_id,json=deployId" json:"deploy_id,omitempty"`
	SiegeId          uint32       `protobuf:"varint,24,opt,name=siege_id,json=siegeId" json:"siege_id,omitempty"`
	SiegeLevel       uint32       `protobuf:"varint,25,opt,name=siege_level,json=siegeLevel" json:"siege_level,omitempty"`
	IsAutoFill       bool         `protobuf:"varint,26,opt,name=is_auto_fill,json=isAutoFill" json:"is_auto_fill,omitempty"`
}

func (m *ArmyData) Reset()                    { *m = ArmyData{} }
func (m *ArmyData) String() string            { return proto.CompactTextString(m) }
func (*ArmyData) ProtoMessage()               {}
func (*ArmyData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{45} }

func (m *ArmyData) GetHero1() uint32 {
	if m != nil {
		return m.Hero1
	}
	return 0
}

func (m *ArmyData) GetHero2() uint32 {
	if m != nil {
		return m.Hero2
	}
	return 0
}

func (m *ArmyData) GetInitTroops() []*TroopData {
	if m != nil {
		return m.InitTroops
	}
	return nil
}

func (m *ArmyData) GetHero1Level() uint32 {
	if m != nil {
		return m.Hero1Level
	}
	return 0
}

func (m *ArmyData) GetHero2Level() uint32 {
	if m != nil {
		return m.Hero2Level
	}
	return 0
}

func (m *ArmyData) GetCurrentTroops() []*TroopData {
	if m != nil {
		return m.CurrentTroops
	}
	return nil
}

func (m *ArmyData) GetSlightWoodTroops() []*TroopData {
	if m != nil {
		return m.SlightWoodTroops
	}
	return nil
}

func (m *ArmyData) GetHero3() uint32 {
	if m != nil {
		return m.Hero3
	}
	return 0
}

func (m *ArmyData) GetHero3Level() uint32 {
	if m != nil {
		return m.Hero3Level
	}
	return 0
}

func (m *ArmyData) GetHero4() uint32 {
	if m != nil {
		return m.Hero4
	}
	return 0
}

func (m *ArmyData) GetHero4Level() uint32 {
	if m != nil {
		return m.Hero4Level
	}
	return 0
}

func (m *ArmyData) GetHero5() uint32 {
	if m != nil {
		return m.Hero5
	}
	return 0
}

func (m *ArmyData) GetHero5Level() uint32 {
	if m != nil {
		return m.Hero5Level
	}
	return 0
}

func (m *ArmyData) GetRadius() uint32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *ArmyData) GetDeployId() uint32 {
	if m != nil {
		return m.DeployId
	}
	return 0
}

func (m *ArmyData) GetSiegeId() uint32 {
	if m != nil {
		return m.SiegeId
	}
	return 0
}

func (m *ArmyData) GetSiegeLevel() uint32 {
	if m != nil {
		return m.SiegeLevel
	}
	return 0
}

func (m *ArmyData) GetIsAutoFill() bool {
	if m != nil {
		return m.IsAutoFill
	}
	return false
}

type MarchArmyData struct {
	Hero1            *HeroInfo    `protobuf:"bytes,1,opt,name=hero1" json:"hero1,omitempty"`
	Hero2            *HeroInfo    `protobuf:"bytes,2,opt,name=hero2" json:"hero2,omitempty"`
	InitTroops       []*TroopData `protobuf:"bytes,3,rep,name=init_troops,json=initTroops" json:"init_troops,omitempty"`
	CurrentTroops    []*TroopData `protobuf:"bytes,4,rep,name=current_troops,json=currentTroops" json:"current_troops,omitempty"`
	SlightWoodTroops []*TroopData `protobuf:"bytes,5,rep,name=slight_wood_troops,json=slightWoodTroops" json:"slight_wood_troops,omitempty"`
	DeadTroops       []*TroopData `protobuf:"bytes,6,rep,name=dead_troops,json=deadTroops" json:"dead_troops,omitempty"`
	Hero3            *HeroInfo    `protobuf:"bytes,7,opt,name=hero3" json:"hero3,omitempty"`
	Hero4            *HeroInfo    `protobuf:"bytes,8,opt,name=hero4" json:"hero4,omitempty"`
	Hero5            *HeroInfo    `protobuf:"bytes,9,opt,name=hero5" json:"hero5,omitempty"`
	DeployId         uint32       `protobuf:"varint,10,opt,name=deploy_id,json=deployId" json:"deploy_id,omitempty"`
	SiegeId          uint32       `protobuf:"varint,11,opt,name=siege_id,json=siegeId" json:"siege_id,omitempty"`
	SiegeLevel       uint32       `protobuf:"varint,12,opt,name=siege_level,json=siegeLevel" json:"siege_level,omitempty"`
	IsAutoFill       bool         `protobuf:"varint,26,opt,name=is_auto_fill,json=isAutoFill" json:"is_auto_fill,omitempty"`
}

func (m *MarchArmyData) Reset()                    { *m = MarchArmyData{} }
func (m *MarchArmyData) String() string            { return proto.CompactTextString(m) }
func (*MarchArmyData) ProtoMessage()               {}
func (*MarchArmyData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{46} }

func (m *MarchArmyData) GetHero1() *HeroInfo {
	if m != nil {
		return m.Hero1
	}
	return nil
}

func (m *MarchArmyData) GetHero2() *HeroInfo {
	if m != nil {
		return m.Hero2
	}
	return nil
}

func (m *MarchArmyData) GetInitTroops() []*TroopData {
	if m != nil {
		return m.InitTroops
	}
	return nil
}

func (m *MarchArmyData) GetCurrentTroops() []*TroopData {
	if m != nil {
		return m.CurrentTroops
	}
	return nil
}

func (m *MarchArmyData) GetSlightWoodTroops() []*TroopData {
	if m != nil {
		return m.SlightWoodTroops
	}
	return nil
}

func (m *MarchArmyData) GetDeadTroops() []*TroopData {
	if m != nil {
		return m.DeadTroops
	}
	return nil
}

func (m *MarchArmyData) GetHero3() *HeroInfo {
	if m != nil {
		return m.Hero3
	}
	return nil
}

func (m *MarchArmyData) GetHero4() *HeroInfo {
	if m != nil {
		return m.Hero4
	}
	return nil
}

func (m *MarchArmyData) GetHero5() *HeroInfo {
	if m != nil {
		return m.Hero5
	}
	return nil
}

func (m *MarchArmyData) GetDeployId() uint32 {
	if m != nil {
		return m.DeployId
	}
	return 0
}

func (m *MarchArmyData) GetSiegeId() uint32 {
	if m != nil {
		return m.SiegeId
	}
	return 0
}

func (m *MarchArmyData) GetSiegeLevel() uint32 {
	if m != nil {
		return m.SiegeLevel
	}
	return 0
}

func (m *MarchArmyData) GetIsAutoFill() bool {
	if m != nil {
		return m.IsAutoFill
	}
	return false
}

type ArmyComponentData struct {
	ArmyData       *MarchArmyData `protobuf:"bytes,1,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
	WatchTowerData *MarchArmyData `protobuf:"bytes,2,opt,name=watch_tower_data,json=watchTowerData" json:"watch_tower_data,omitempty"`
	InitTroops     []*TroopData   `protobuf:"bytes,3,rep,name=init_troops,json=initTroops" json:"init_troops,omitempty"`
}

func (m *ArmyComponentData) Reset()                    { *m = ArmyComponentData{} }
func (m *ArmyComponentData) String() string            { return proto.CompactTextString(m) }
func (*ArmyComponentData) ProtoMessage()               {}
func (*ArmyComponentData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{47} }

func (m *ArmyComponentData) GetArmyData() *MarchArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

func (m *ArmyComponentData) GetWatchTowerData() *MarchArmyData {
	if m != nil {
		return m.WatchTowerData
	}
	return nil
}

func (m *ArmyComponentData) GetInitTroops() []*TroopData {
	if m != nil {
		return m.InitTroops
	}
	return nil
}

// 增援队伍时间数据
type ReenforceArmyData struct {
	ArrivedTime    int64     `protobuf:"varint,1,opt,name=arrived_time,json=arrivedTime" json:"arrived_time,omitempty"`
	Army           *ArmyData `protobuf:"bytes,2,opt,name=army" json:"army,omitempty"`
	PlayerId       uint64    `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName     string    `protobuf:"bytes,4,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	Head           string    `protobuf:"bytes,5,opt,name=head" json:"head,omitempty"`
	Pos            *Vector2D `protobuf:"bytes,6,opt,name=pos" json:"pos,omitempty"`
	EntityId       uint64    `protobuf:"varint,7,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Speed          int64     `protobuf:"varint,8,opt,name=speed" json:"speed,omitempty"`
	MoveData       *MoveData `protobuf:"bytes,9,opt,name=move_data,json=moveData" json:"move_data,omitempty"`
	CastleEntityId uint64    `protobuf:"varint,10,opt,name=castle_entity_id,json=castleEntityId" json:"castle_entity_id,omitempty"`
}

func (m *ReenforceArmyData) Reset()                    { *m = ReenforceArmyData{} }
func (m *ReenforceArmyData) String() string            { return proto.CompactTextString(m) }
func (*ReenforceArmyData) ProtoMessage()               {}
func (*ReenforceArmyData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{48} }

func (m *ReenforceArmyData) GetArrivedTime() int64 {
	if m != nil {
		return m.ArrivedTime
	}
	return 0
}

func (m *ReenforceArmyData) GetArmy() *ArmyData {
	if m != nil {
		return m.Army
	}
	return nil
}

func (m *ReenforceArmyData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ReenforceArmyData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *ReenforceArmyData) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *ReenforceArmyData) GetPos() *Vector2D {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *ReenforceArmyData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *ReenforceArmyData) GetSpeed() int64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *ReenforceArmyData) GetMoveData() *MoveData {
	if m != nil {
		return m.MoveData
	}
	return nil
}

func (m *ReenforceArmyData) GetCastleEntityId() uint64 {
	if m != nil {
		return m.CastleEntityId
	}
	return 0
}

// 增援信息
type ReenforceInfo struct {
	EntityId       uint64               `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	EntityType     EntityType           `protobuf:"varint,2,opt,name=entity_type,json=entityType,enum=protomsg.EntityType" json:"entity_type,omitempty"`
	LeaderEntityId uint64               `protobuf:"varint,3,opt,name=leader_entity_id,json=leaderEntityId" json:"leader_entity_id,omitempty"`
	Reenforces     []*ReenforceArmyData `protobuf:"bytes,4,rep,name=reenforces" json:"reenforces,omitempty"`
	Capacity       uint32               `protobuf:"varint,5,opt,name=capacity" json:"capacity,omitempty"`
}

func (m *ReenforceInfo) Reset()                    { *m = ReenforceInfo{} }
func (m *ReenforceInfo) String() string            { return proto.CompactTextString(m) }
func (*ReenforceInfo) ProtoMessage()               {}
func (*ReenforceInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{49} }

func (m *ReenforceInfo) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *ReenforceInfo) GetEntityType() EntityType {
	if m != nil {
		return m.EntityType
	}
	return EntityType_kEntityType_None
}

func (m *ReenforceInfo) GetLeaderEntityId() uint64 {
	if m != nil {
		return m.LeaderEntityId
	}
	return 0
}

func (m *ReenforceInfo) GetReenforces() []*ReenforceArmyData {
	if m != nil {
		return m.Reenforces
	}
	return nil
}

func (m *ReenforceInfo) GetCapacity() uint32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

// 增援入驻时间信息
type ReenforceJoinTimeInfo struct {
	EntityId uint64 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Time     int64  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
}

func (m *ReenforceJoinTimeInfo) Reset()                    { *m = ReenforceJoinTimeInfo{} }
func (m *ReenforceJoinTimeInfo) String() string            { return proto.CompactTextString(m) }
func (*ReenforceJoinTimeInfo) ProtoMessage()               {}
func (*ReenforceJoinTimeInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{50} }

func (m *ReenforceJoinTimeInfo) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *ReenforceJoinTimeInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// 数据库存储的增援数据
type DBReenforceData struct {
	Infos []*ReenforceJoinTimeInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
}

func (m *DBReenforceData) Reset()                    { *m = DBReenforceData{} }
func (m *DBReenforceData) String() string            { return proto.CompactTextString(m) }
func (*DBReenforceData) ProtoMessage()               {}
func (*DBReenforceData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{51} }

func (m *DBReenforceData) GetInfos() []*ReenforceJoinTimeInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type ArmyHeroData struct {
	Hero1 *HeroInfo `protobuf:"bytes,1,opt,name=hero1" json:"hero1,omitempty"`
	Hero2 *HeroInfo `protobuf:"bytes,2,opt,name=hero2" json:"hero2,omitempty"`
	Hero3 *HeroInfo `protobuf:"bytes,3,opt,name=hero3" json:"hero3,omitempty"`
	Hero4 *HeroInfo `protobuf:"bytes,4,opt,name=hero4" json:"hero4,omitempty"`
	Hero5 *HeroInfo `protobuf:"bytes,5,opt,name=hero5" json:"hero5,omitempty"`
}

func (m *ArmyHeroData) Reset()                    { *m = ArmyHeroData{} }
func (m *ArmyHeroData) String() string            { return proto.CompactTextString(m) }
func (*ArmyHeroData) ProtoMessage()               {}
func (*ArmyHeroData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{52} }

func (m *ArmyHeroData) GetHero1() *HeroInfo {
	if m != nil {
		return m.Hero1
	}
	return nil
}

func (m *ArmyHeroData) GetHero2() *HeroInfo {
	if m != nil {
		return m.Hero2
	}
	return nil
}

func (m *ArmyHeroData) GetHero3() *HeroInfo {
	if m != nil {
		return m.Hero3
	}
	return nil
}

func (m *ArmyHeroData) GetHero4() *HeroInfo {
	if m != nil {
		return m.Hero4
	}
	return nil
}

func (m *ArmyHeroData) GetHero5() *HeroInfo {
	if m != nil {
		return m.Hero5
	}
	return nil
}

// 驻扎英雄数据
type GarrisonData struct {
	Hero1 *HeroInfo `protobuf:"bytes,1,opt,name=hero1" json:"hero1,omitempty"`
	Hero2 *HeroInfo `protobuf:"bytes,2,opt,name=hero2" json:"hero2,omitempty"`
}

func (m *GarrisonData) Reset()                    { *m = GarrisonData{} }
func (m *GarrisonData) String() string            { return proto.CompactTextString(m) }
func (*GarrisonData) ProtoMessage()               {}
func (*GarrisonData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{53} }

func (m *GarrisonData) GetHero1() *HeroInfo {
	if m != nil {
		return m.Hero1
	}
	return nil
}

func (m *GarrisonData) GetHero2() *HeroInfo {
	if m != nil {
		return m.Hero2
	}
	return nil
}

// 行军英雄数据
type MarchHeroData struct {
	MarchIndex uint32        `protobuf:"varint,1,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
	HeroData   *ArmyHeroData `protobuf:"bytes,2,opt,name=hero_data,json=heroData" json:"hero_data,omitempty"`
}

func (m *MarchHeroData) Reset()                    { *m = MarchHeroData{} }
func (m *MarchHeroData) String() string            { return proto.CompactTextString(m) }
func (*MarchHeroData) ProtoMessage()               {}
func (*MarchHeroData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{54} }

func (m *MarchHeroData) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

func (m *MarchHeroData) GetHeroData() *ArmyHeroData {
	if m != nil {
		return m.HeroData
	}
	return nil
}

// 打野信息
type KillBarbariansData struct {
	BarbariansLv int32 `protobuf:"varint,4,opt,name=barbarians_lv,json=barbariansLv" json:"barbarians_lv,omitempty"`
}

func (m *KillBarbariansData) Reset()                    { *m = KillBarbariansData{} }
func (m *KillBarbariansData) String() string            { return proto.CompactTextString(m) }
func (*KillBarbariansData) ProtoMessage()               {}
func (*KillBarbariansData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{55} }

func (m *KillBarbariansData) GetBarbariansLv() int32 {
	if m != nil {
		return m.BarbariansLv
	}
	return 0
}

type EffectData struct {
	Effect   []*EffectInfo `protobuf:"bytes,1,rep,name=effect" json:"effect,omitempty"`
	Statuses *StatusData   `protobuf:"bytes,2,opt,name=statuses" json:"statuses,omitempty"`
}

func (m *EffectData) Reset()                    { *m = EffectData{} }
func (m *EffectData) String() string            { return proto.CompactTextString(m) }
func (*EffectData) ProtoMessage()               {}
func (*EffectData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{56} }

func (m *EffectData) GetEffect() []*EffectInfo {
	if m != nil {
		return m.Effect
	}
	return nil
}

func (m *EffectData) GetStatuses() *StatusData {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type CastleExtendData struct {
	KillCount     uint64 `protobuf:"varint,1,opt,name=kill_count,json=killCount" json:"kill_count,omitempty"`
	BattlePower   uint64 `protobuf:"varint,2,opt,name=battle_power,json=battlePower" json:"battle_power,omitempty"`
	InPeaceShield bool   `protobuf:"varint,3,opt,name=in_peace_shield,json=inPeaceShield" json:"in_peace_shield,omitempty"`
	CampId        uint32 `protobuf:"varint,4,opt,name=camp_id,json=campId" json:"camp_id,omitempty"`
	Prosperity    uint32 `protobuf:"varint,5,opt,name=prosperity" json:"prosperity,omitempty"`
}

func (m *CastleExtendData) Reset()                    { *m = CastleExtendData{} }
func (m *CastleExtendData) String() string            { return proto.CompactTextString(m) }
func (*CastleExtendData) ProtoMessage()               {}
func (*CastleExtendData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{57} }

func (m *CastleExtendData) GetKillCount() uint64 {
	if m != nil {
		return m.KillCount
	}
	return 0
}

func (m *CastleExtendData) GetBattlePower() uint64 {
	if m != nil {
		return m.BattlePower
	}
	return 0
}

func (m *CastleExtendData) GetInPeaceShield() bool {
	if m != nil {
		return m.InPeaceShield
	}
	return false
}

func (m *CastleExtendData) GetCampId() uint32 {
	if m != nil {
		return m.CampId
	}
	return 0
}

func (m *CastleExtendData) GetProsperity() uint32 {
	if m != nil {
		return m.Prosperity
	}
	return 0
}

type AttackTargetData struct {
	TarEntityId uint64 `protobuf:"varint,1,opt,name=tar_entity_id,json=tarEntityId" json:"tar_entity_id,omitempty"`
}

func (m *AttackTargetData) Reset()                    { *m = AttackTargetData{} }
func (m *AttackTargetData) String() string            { return proto.CompactTextString(m) }
func (*AttackTargetData) ProtoMessage()               {}
func (*AttackTargetData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{58} }

func (m *AttackTargetData) GetTarEntityId() uint64 {
	if m != nil {
		return m.TarEntityId
	}
	return 0
}

type AttackStickEnemyData struct {
	TarEntityId uint64 `protobuf:"varint,1,opt,name=tar_entity_id,json=tarEntityId" json:"tar_entity_id,omitempty"`
	IsStick     bool   `protobuf:"varint,2,opt,name=is_stick,json=isStick" json:"is_stick,omitempty"`
}

func (m *AttackStickEnemyData) Reset()                    { *m = AttackStickEnemyData{} }
func (m *AttackStickEnemyData) String() string            { return proto.CompactTextString(m) }
func (*AttackStickEnemyData) ProtoMessage()               {}
func (*AttackStickEnemyData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{59} }

func (m *AttackStickEnemyData) GetTarEntityId() uint64 {
	if m != nil {
		return m.TarEntityId
	}
	return 0
}

func (m *AttackStickEnemyData) GetIsStick() bool {
	if m != nil {
		return m.IsStick
	}
	return false
}

type MoveSpeedData struct {
	MoveSpeed int64 `protobuf:"varint,1,opt,name=move_speed,json=moveSpeed" json:"move_speed,omitempty"`
}

func (m *MoveSpeedData) Reset()                    { *m = MoveSpeedData{} }
func (m *MoveSpeedData) String() string            { return proto.CompactTextString(m) }
func (*MoveSpeedData) ProtoMessage()               {}
func (*MoveSpeedData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{60} }

func (m *MoveSpeedData) GetMoveSpeed() int64 {
	if m != nil {
		return m.MoveSpeed
	}
	return 0
}

type SkillStatus struct {
	CasterEntityId   uint64 `protobuf:"varint,1,opt,name=caster_entity_id,json=casterEntityId" json:"caster_entity_id,omitempty"`
	StatusId         int32  `protobuf:"varint,2,opt,name=status_id,json=statusId" json:"status_id,omitempty"`
	StatusExpireTime uint64 `protobuf:"varint,3,opt,name=status_expire_time,json=statusExpireTime" json:"status_expire_time,omitempty"`
	Overlap          uint32 `protobuf:"varint,4,opt,name=overlap" json:"overlap,omitempty"`
	CasterHeroId     uint32 `protobuf:"varint,5,opt,name=caster_hero_id,json=casterHeroId" json:"caster_hero_id,omitempty"`
}

func (m *SkillStatus) Reset()                    { *m = SkillStatus{} }
func (m *SkillStatus) String() string            { return proto.CompactTextString(m) }
func (*SkillStatus) ProtoMessage()               {}
func (*SkillStatus) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{61} }

func (m *SkillStatus) GetCasterEntityId() uint64 {
	if m != nil {
		return m.CasterEntityId
	}
	return 0
}

func (m *SkillStatus) GetStatusId() int32 {
	if m != nil {
		return m.StatusId
	}
	return 0
}

func (m *SkillStatus) GetStatusExpireTime() uint64 {
	if m != nil {
		return m.StatusExpireTime
	}
	return 0
}

func (m *SkillStatus) GetOverlap() uint32 {
	if m != nil {
		return m.Overlap
	}
	return 0
}

func (m *SkillStatus) GetCasterHeroId() uint32 {
	if m != nil {
		return m.CasterHeroId
	}
	return 0
}

type SkillStatusData struct {
	StatusSet []*SkillStatus `protobuf:"bytes,1,rep,name=status_set,json=statusSet" json:"status_set,omitempty"`
}

func (m *SkillStatusData) Reset()                    { *m = SkillStatusData{} }
func (m *SkillStatusData) String() string            { return proto.CompactTextString(m) }
func (*SkillStatusData) ProtoMessage()               {}
func (*SkillStatusData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{62} }

func (m *SkillStatusData) GetStatusSet() []*SkillStatus {
	if m != nil {
		return m.StatusSet
	}
	return nil
}

type MultiStrikeData struct {
	MultiStrike int32 `protobuf:"varint,1,opt,name=multi_strike,json=multiStrike" json:"multi_strike,omitempty"`
}

func (m *MultiStrikeData) Reset()                    { *m = MultiStrikeData{} }
func (m *MultiStrikeData) String() string            { return proto.CompactTextString(m) }
func (*MultiStrikeData) ProtoMessage()               {}
func (*MultiStrikeData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{63} }

func (m *MultiStrikeData) GetMultiStrike() int32 {
	if m != nil {
		return m.MultiStrike
	}
	return 0
}

type BattleStatusData struct {
	IsBattle uint32 `protobuf:"varint,1,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
}

func (m *BattleStatusData) Reset()                    { *m = BattleStatusData{} }
func (m *BattleStatusData) String() string            { return proto.CompactTextString(m) }
func (*BattleStatusData) ProtoMessage()               {}
func (*BattleStatusData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{64} }

func (m *BattleStatusData) GetIsBattle() uint32 {
	if m != nil {
		return m.IsBattle
	}
	return 0
}

// MapServer持有的玩家建筑信息
type MapBuildingInfo struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type  uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Level uint32 `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
}

func (m *MapBuildingInfo) Reset()                    { *m = MapBuildingInfo{} }
func (m *MapBuildingInfo) String() string            { return proto.CompactTextString(m) }
func (*MapBuildingInfo) ProtoMessage()               {}
func (*MapBuildingInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{65} }

func (m *MapBuildingInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MapBuildingInfo) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MapBuildingInfo) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type MapBuildingData struct {
	Buildings []*MapBuildingInfo `protobuf:"bytes,1,rep,name=buildings" json:"buildings,omitempty"`
}

func (m *MapBuildingData) Reset()                    { *m = MapBuildingData{} }
func (m *MapBuildingData) String() string            { return proto.CompactTextString(m) }
func (*MapBuildingData) ProtoMessage()               {}
func (*MapBuildingData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{66} }

func (m *MapBuildingData) GetBuildings() []*MapBuildingInfo {
	if m != nil {
		return m.Buildings
	}
	return nil
}

type MapData struct {
	IsInMap   bool      `protobuf:"varint,1,opt,name=is_in_map,json=isInMap" json:"is_in_map,omitempty"`
	Position  *Vector2D `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Direction *Vector2D `protobuf:"bytes,3,opt,name=direction" json:"direction,omitempty"`
}

func (m *MapData) Reset()                    { *m = MapData{} }
func (m *MapData) String() string            { return proto.CompactTextString(m) }
func (*MapData) ProtoMessage()               {}
func (*MapData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{67} }

func (m *MapData) GetIsInMap() bool {
	if m != nil {
		return m.IsInMap
	}
	return false
}

func (m *MapData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MapData) GetDirection() *Vector2D {
	if m != nil {
		return m.Direction
	}
	return nil
}

type MoveData struct {
	MoveStatus uint32    `protobuf:"varint,1,opt,name=move_status,json=moveStatus" json:"move_status,omitempty"`
	Position   *Vector2D `protobuf:"bytes,3,opt,name=position" json:"position,omitempty"`
	PathFind   *PathData `protobuf:"bytes,4,opt,name=path_find,json=pathFind" json:"path_find,omitempty"`
}

func (m *MoveData) Reset()                    { *m = MoveData{} }
func (m *MoveData) String() string            { return proto.CompactTextString(m) }
func (*MoveData) ProtoMessage()               {}
func (*MoveData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{68} }

func (m *MoveData) GetMoveStatus() uint32 {
	if m != nil {
		return m.MoveStatus
	}
	return 0
}

func (m *MoveData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MoveData) GetPathFind() *PathData {
	if m != nil {
		return m.PathFind
	}
	return nil
}

type MovePathData struct {
	Paths []*Vector2D `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
}

func (m *MovePathData) Reset()                    { *m = MovePathData{} }
func (m *MovePathData) String() string            { return proto.CompactTextString(m) }
func (*MovePathData) ProtoMessage()               {}
func (*MovePathData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{69} }

func (m *MovePathData) GetPaths() []*Vector2D {
	if m != nil {
		return m.Paths
	}
	return nil
}

type MapPlayerBaseData struct {
	PlayerId         uint64        `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Level            uint32        `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Name             string        `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Head             string        `protobuf:"bytes,4,opt,name=head" json:"head,omitempty"`
	KillCount        uint64        `protobuf:"varint,5,opt,name=kill_count,json=killCount" json:"kill_count,omitempty"`
	BattlePower      uint64        `protobuf:"varint,6,opt,name=battle_power,json=battlePower" json:"battle_power,omitempty"`
	CampId           uint32        `protobuf:"varint,7,opt,name=camp_id,json=campId" json:"camp_id,omitempty"`
	KillBarbariansLv uint32        `protobuf:"varint,8,opt,name=kill_barbarians_lv,json=killBarbariansLv" json:"kill_barbarians_lv,omitempty"`
	GuildId          uint64        `protobuf:"varint,10,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildPosition    GuildPosition `protobuf:"varint,11,opt,name=guild_position,json=guildPosition,enum=protomsg.GuildPosition" json:"guild_position,omitempty"`
	Ap               uint32        `protobuf:"varint,15,opt,name=ap" json:"ap,omitempty"`
	LastApAddTime    int64         `protobuf:"varint,16,opt,name=last_ap_add_time,json=lastApAddTime" json:"last_ap_add_time,omitempty"`
	KingdomId        uint32        `protobuf:"varint,20,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
	ForceId          uint32        `protobuf:"varint,21,opt,name=force_id,json=forceId" json:"force_id,omitempty"`
	LastLoginTime    uint64        `protobuf:"varint,30,opt,name=last_login_time,json=lastLoginTime" json:"last_login_time,omitempty"`
	LastLogoutTime   uint64        `protobuf:"varint,31,opt,name=last_logout_time,json=lastLogoutTime" json:"last_logout_time,omitempty"`
	OtherPower       uint64        `protobuf:"varint,32,opt,name=other_power,json=otherPower" json:"other_power,omitempty"`
	StrongholdIds    []uint64      `protobuf:"varint,33,rep,packed,name=stronghold_ids,json=strongholdIds" json:"stronghold_ids,omitempty"`
}

func (m *MapPlayerBaseData) Reset()                    { *m = MapPlayerBaseData{} }
func (m *MapPlayerBaseData) String() string            { return proto.CompactTextString(m) }
func (*MapPlayerBaseData) ProtoMessage()               {}
func (*MapPlayerBaseData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{70} }

func (m *MapPlayerBaseData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MapPlayerBaseData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *MapPlayerBaseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MapPlayerBaseData) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *MapPlayerBaseData) GetKillCount() uint64 {
	if m != nil {
		return m.KillCount
	}
	return 0
}

func (m *MapPlayerBaseData) GetBattlePower() uint64 {
	if m != nil {
		return m.BattlePower
	}
	return 0
}

func (m *MapPlayerBaseData) GetCampId() uint32 {
	if m != nil {
		return m.CampId
	}
	return 0
}

func (m *MapPlayerBaseData) GetKillBarbariansLv() uint32 {
	if m != nil {
		return m.KillBarbariansLv
	}
	return 0
}

func (m *MapPlayerBaseData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *MapPlayerBaseData) GetGuildPosition() GuildPosition {
	if m != nil {
		return m.GuildPosition
	}
	return GuildPosition_kGuildPositionNone
}

func (m *MapPlayerBaseData) GetAp() uint32 {
	if m != nil {
		return m.Ap
	}
	return 0
}

func (m *MapPlayerBaseData) GetLastApAddTime() int64 {
	if m != nil {
		return m.LastApAddTime
	}
	return 0
}

func (m *MapPlayerBaseData) GetKingdomId() uint32 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

func (m *MapPlayerBaseData) GetForceId() uint32 {
	if m != nil {
		return m.ForceId
	}
	return 0
}

func (m *MapPlayerBaseData) GetLastLoginTime() uint64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func (m *MapPlayerBaseData) GetLastLogoutTime() uint64 {
	if m != nil {
		return m.LastLogoutTime
	}
	return 0
}

func (m *MapPlayerBaseData) GetOtherPower() uint64 {
	if m != nil {
		return m.OtherPower
	}
	return 0
}

func (m *MapPlayerBaseData) GetStrongholdIds() []uint64 {
	if m != nil {
		return m.StrongholdIds
	}
	return nil
}

type MainCastleData struct {
	CityWall *CityWallData `protobuf:"bytes,1,opt,name=city_wall,json=cityWall" json:"city_wall,omitempty"`
}

func (m *MainCastleData) Reset()                    { *m = MainCastleData{} }
func (m *MainCastleData) String() string            { return proto.CompactTextString(m) }
func (*MainCastleData) ProtoMessage()               {}
func (*MainCastleData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{71} }

func (m *MainCastleData) GetCityWall() *CityWallData {
	if m != nil {
		return m.CityWall
	}
	return nil
}

type CityWallData struct {
	StartBurnTime    int64  `protobuf:"varint,1,opt,name=start_burn_time,json=startBurnTime" json:"start_burn_time,omitempty"`
	EndBurnTime      int64  `protobuf:"varint,2,opt,name=end_burn_time,json=endBurnTime" json:"end_burn_time,omitempty"`
	Speed            uint32 `protobuf:"varint,3,opt,name=speed" json:"speed,omitempty"`
	LostDurableCount uint32 `protobuf:"varint,4,opt,name=lost_durable_count,json=lostDurableCount" json:"lost_durable_count,omitempty"`
}

func (m *CityWallData) Reset()                    { *m = CityWallData{} }
func (m *CityWallData) String() string            { return proto.CompactTextString(m) }
func (*CityWallData) ProtoMessage()               {}
func (*CityWallData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{72} }

func (m *CityWallData) GetStartBurnTime() int64 {
	if m != nil {
		return m.StartBurnTime
	}
	return 0
}

func (m *CityWallData) GetEndBurnTime() int64 {
	if m != nil {
		return m.EndBurnTime
	}
	return 0
}

func (m *CityWallData) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *CityWallData) GetLostDurableCount() uint32 {
	if m != nil {
		return m.LostDurableCount
	}
	return 0
}

type CityWallAllData struct {
	StartBurnTime      int64  `protobuf:"varint,1,opt,name=start_burn_time,json=startBurnTime" json:"start_burn_time,omitempty"`
	EndBurnTime        int64  `protobuf:"varint,2,opt,name=end_burn_time,json=endBurnTime" json:"end_burn_time,omitempty"`
	LostDurableCount   uint32 `protobuf:"varint,5,opt,name=lost_durable_count,json=lostDurableCount" json:"lost_durable_count,omitempty"`
	RepairIntervalTime int64  `protobuf:"varint,6,opt,name=repair_interval_time,json=repairIntervalTime" json:"repair_interval_time,omitempty"`
	NoticeMove         uint32 `protobuf:"varint,7,opt,name=notice_move,json=noticeMove" json:"notice_move,omitempty"`
	Speed              uint32 `protobuf:"varint,8,opt,name=speed" json:"speed,omitempty"`
	Prosperity         uint32 `protobuf:"varint,9,opt,name=prosperity" json:"prosperity,omitempty"`
	WallAddHp          uint32 `protobuf:"varint,10,opt,name=wall_add_hp,json=wallAddHp" json:"wall_add_hp,omitempty"`
	WallAddHealRate    uint32 `protobuf:"varint,11,opt,name=wall_add_heal_rate,json=wallAddHealRate" json:"wall_add_heal_rate,omitempty"`
}

func (m *CityWallAllData) Reset()                    { *m = CityWallAllData{} }
func (m *CityWallAllData) String() string            { return proto.CompactTextString(m) }
func (*CityWallAllData) ProtoMessage()               {}
func (*CityWallAllData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{73} }

func (m *CityWallAllData) GetStartBurnTime() int64 {
	if m != nil {
		return m.StartBurnTime
	}
	return 0
}

func (m *CityWallAllData) GetEndBurnTime() int64 {
	if m != nil {
		return m.EndBurnTime
	}
	return 0
}

func (m *CityWallAllData) GetLostDurableCount() uint32 {
	if m != nil {
		return m.LostDurableCount
	}
	return 0
}

func (m *CityWallAllData) GetRepairIntervalTime() int64 {
	if m != nil {
		return m.RepairIntervalTime
	}
	return 0
}

func (m *CityWallAllData) GetNoticeMove() uint32 {
	if m != nil {
		return m.NoticeMove
	}
	return 0
}

func (m *CityWallAllData) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *CityWallAllData) GetProsperity() uint32 {
	if m != nil {
		return m.Prosperity
	}
	return 0
}

func (m *CityWallAllData) GetWallAddHp() uint32 {
	if m != nil {
		return m.WallAddHp
	}
	return 0
}

func (m *CityWallAllData) GetWallAddHealRate() uint32 {
	if m != nil {
		return m.WallAddHealRate
	}
	return 0
}

type GarrisonHeroData struct {
	SelectMainHeroId   uint32 `protobuf:"varint,1,opt,name=select_main_hero_id,json=selectMainHeroId" json:"select_main_hero_id,omitempty"`
	SelectSecondHeroId uint32 `protobuf:"varint,2,opt,name=select_second_hero_id,json=selectSecondHeroId" json:"select_second_hero_id,omitempty"`
	CurMainHeroId      uint32 `protobuf:"varint,3,opt,name=cur_main_hero_id,json=curMainHeroId" json:"cur_main_hero_id,omitempty"`
	CurSecondHeroId    uint32 `protobuf:"varint,4,opt,name=cur_second_hero_id,json=curSecondHeroId" json:"cur_second_hero_id,omitempty"`
}

func (m *GarrisonHeroData) Reset()                    { *m = GarrisonHeroData{} }
func (m *GarrisonHeroData) String() string            { return proto.CompactTextString(m) }
func (*GarrisonHeroData) ProtoMessage()               {}
func (*GarrisonHeroData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{74} }

func (m *GarrisonHeroData) GetSelectMainHeroId() uint32 {
	if m != nil {
		return m.SelectMainHeroId
	}
	return 0
}

func (m *GarrisonHeroData) GetSelectSecondHeroId() uint32 {
	if m != nil {
		return m.SelectSecondHeroId
	}
	return 0
}

func (m *GarrisonHeroData) GetCurMainHeroId() uint32 {
	if m != nil {
		return m.CurMainHeroId
	}
	return 0
}

func (m *GarrisonHeroData) GetCurSecondHeroId() uint32 {
	if m != nil {
		return m.CurSecondHeroId
	}
	return 0
}

type PlayerMarch struct {
	Id                 uint64              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	MarchIndex         uint32              `protobuf:"varint,2,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
	PlayerId           uint64              `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	GuildId            uint64              `protobuf:"varint,4,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	MapData            *MapData            `protobuf:"bytes,20,opt,name=map_data,json=mapData" json:"map_data,omitempty"`
	CommandData        *MarchCommand       `protobuf:"bytes,30,opt,name=command_data,json=commandData" json:"command_data,omitempty"`
	ArmyData           *MarchArmyData      `protobuf:"bytes,40,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
	EffectData         *EffectData         `protobuf:"bytes,50,opt,name=effect_data,json=effectData" json:"effect_data,omitempty"`
	MoveData           *MoveData           `protobuf:"bytes,60,opt,name=move_data,json=moveData" json:"move_data,omitempty"`
	KillBarbariansData *KillBarbariansData `protobuf:"bytes,70,opt,name=kill_barbarians_data,json=killBarbariansData" json:"kill_barbarians_data,omitempty"`
	ResourceData       *ResourceData       `protobuf:"bytes,80,opt,name=resource_data,json=resourceData" json:"resource_data,omitempty"`
}

func (m *PlayerMarch) Reset()                    { *m = PlayerMarch{} }
func (m *PlayerMarch) String() string            { return proto.CompactTextString(m) }
func (*PlayerMarch) ProtoMessage()               {}
func (*PlayerMarch) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{75} }

func (m *PlayerMarch) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerMarch) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

func (m *PlayerMarch) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerMarch) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *PlayerMarch) GetMapData() *MapData {
	if m != nil {
		return m.MapData
	}
	return nil
}

func (m *PlayerMarch) GetCommandData() *MarchCommand {
	if m != nil {
		return m.CommandData
	}
	return nil
}

func (m *PlayerMarch) GetArmyData() *MarchArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

func (m *PlayerMarch) GetEffectData() *EffectData {
	if m != nil {
		return m.EffectData
	}
	return nil
}

func (m *PlayerMarch) GetMoveData() *MoveData {
	if m != nil {
		return m.MoveData
	}
	return nil
}

func (m *PlayerMarch) GetKillBarbariansData() *KillBarbariansData {
	if m != nil {
		return m.KillBarbariansData
	}
	return nil
}

func (m *PlayerMarch) GetResourceData() *ResourceData {
	if m != nil {
		return m.ResourceData
	}
	return nil
}

type MapViewerData struct {
	PlayerId     uint64             `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Address      *ServerAddressInfo `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	ViewPosition *Vector2D          `protobuf:"bytes,4,opt,name=view_position,json=viewPosition" json:"view_position,omitempty"`
	ViewLod      uint32             `protobuf:"varint,5,opt,name=view_lod,json=viewLod" json:"view_lod,omitempty"`
}

func (m *MapViewerData) Reset()                    { *m = MapViewerData{} }
func (m *MapViewerData) String() string            { return proto.CompactTextString(m) }
func (*MapViewerData) ProtoMessage()               {}
func (*MapViewerData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{76} }

func (m *MapViewerData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MapViewerData) GetAddress() *ServerAddressInfo {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *MapViewerData) GetViewPosition() *Vector2D {
	if m != nil {
		return m.ViewPosition
	}
	return nil
}

func (m *MapViewerData) GetViewLod() uint32 {
	if m != nil {
		return m.ViewLod
	}
	return 0
}

type SyncData struct {
	Type    uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *SyncData) Reset()                    { *m = SyncData{} }
func (m *SyncData) String() string            { return proto.CompactTextString(m) }
func (*SyncData) ProtoMessage()               {}
func (*SyncData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{77} }

func (m *SyncData) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *SyncData) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type SyncEntityData struct {
	EntityType EntityType  `protobuf:"varint,1,opt,name=entity_type,json=entityType,enum=protomsg.EntityType" json:"entity_type,omitempty"`
	EntityId   uint64      `protobuf:"varint,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Data       []*SyncData `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *SyncEntityData) Reset()                    { *m = SyncEntityData{} }
func (m *SyncEntityData) String() string            { return proto.CompactTextString(m) }
func (*SyncEntityData) ProtoMessage()               {}
func (*SyncEntityData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{78} }

func (m *SyncEntityData) GetEntityType() EntityType {
	if m != nil {
		return m.EntityType
	}
	return EntityType_kEntityType_None
}

func (m *SyncEntityData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *SyncEntityData) GetData() []*SyncData {
	if m != nil {
		return m.Data
	}
	return nil
}

type MarchData struct {
	MarchIndex uint32        `protobuf:"varint,1,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
	EntityId   uint64        `protobuf:"varint,3,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Position   *Vector2D     `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`
	Status     uint32        `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	Command    *MarchCommand `protobuf:"bytes,10,opt,name=command" json:"command,omitempty"`
	Army       *ArmyData     `protobuf:"bytes,20,opt,name=army" json:"army,omitempty"`
}

func (m *MarchData) Reset()                    { *m = MarchData{} }
func (m *MarchData) String() string            { return proto.CompactTextString(m) }
func (*MarchData) ProtoMessage()               {}
func (*MarchData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{79} }

func (m *MarchData) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

func (m *MarchData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MarchData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MarchData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MarchData) GetCommand() *MarchCommand {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *MarchData) GetArmy() *ArmyData {
	if m != nil {
		return m.Army
	}
	return nil
}

type CastleData struct {
	EntityId            uint64         `protobuf:"varint,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Position            *Vector2D      `protobuf:"bytes,3,opt,name=position" json:"position,omitempty"`
	Army                *ArmyData      `protobuf:"bytes,4,opt,name=army" json:"army,omitempty"`
	ReenforceInfo       *ReenforceInfo `protobuf:"bytes,5,opt,name=reenforce_info,json=reenforceInfo" json:"reenforce_info,omitempty"`
	FriendReenforceInfo *ReenforceInfo `protobuf:"bytes,6,opt,name=friend_reenforce_info,json=friendReenforceInfo" json:"friend_reenforce_info,omitempty"`
	EffectData          *EffectData    `protobuf:"bytes,7,opt,name=effect_data,json=effectData" json:"effect_data,omitempty"`
}

func (m *CastleData) Reset()                    { *m = CastleData{} }
func (m *CastleData) String() string            { return proto.CompactTextString(m) }
func (*CastleData) ProtoMessage()               {}
func (*CastleData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{80} }

func (m *CastleData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *CastleData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CastleData) GetArmy() *ArmyData {
	if m != nil {
		return m.Army
	}
	return nil
}

func (m *CastleData) GetReenforceInfo() *ReenforceInfo {
	if m != nil {
		return m.ReenforceInfo
	}
	return nil
}

func (m *CastleData) GetFriendReenforceInfo() *ReenforceInfo {
	if m != nil {
		return m.FriendReenforceInfo
	}
	return nil
}

func (m *CastleData) GetEffectData() *EffectData {
	if m != nil {
		return m.EffectData
	}
	return nil
}

type GuildBaseData struct {
	GuildId   uint64 `protobuf:"varint,1,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName string `protobuf:"bytes,2,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
}

func (m *GuildBaseData) Reset()                    { *m = GuildBaseData{} }
func (m *GuildBaseData) String() string            { return proto.CompactTextString(m) }
func (*GuildBaseData) ProtoMessage()               {}
func (*GuildBaseData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{81} }

func (m *GuildBaseData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *GuildBaseData) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

type EntityBaseData struct {
	Type           EntityType `protobuf:"varint,1,opt,name=type,enum=protomsg.EntityType" json:"type,omitempty"`
	EntityId       uint64     `protobuf:"varint,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ConfigId       uint32     `protobuf:"varint,3,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Id             uint64     `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	Name           string     `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Head           string     `protobuf:"bytes,6,opt,name=head" json:"head,omitempty"`
	GuildId        uint64     `protobuf:"varint,7,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName      string     `protobuf:"bytes,8,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	GuildShortName string     `protobuf:"bytes,9,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	Position       *Vector2D  `protobuf:"bytes,10,opt,name=position" json:"position,omitempty"`
}

func (m *EntityBaseData) Reset()                    { *m = EntityBaseData{} }
func (m *EntityBaseData) String() string            { return proto.CompactTextString(m) }
func (*EntityBaseData) ProtoMessage()               {}
func (*EntityBaseData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{82} }

func (m *EntityBaseData) GetType() EntityType {
	if m != nil {
		return m.Type
	}
	return EntityType_kEntityType_None
}

func (m *EntityBaseData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *EntityBaseData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *EntityBaseData) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EntityBaseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EntityBaseData) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *EntityBaseData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *EntityBaseData) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *EntityBaseData) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *EntityBaseData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

type MarchTargetData struct {
	Type        EntityType       `protobuf:"varint,1,opt,name=type,enum=protomsg.EntityType" json:"type,omitempty"`
	EntityId    uint64           `protobuf:"varint,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ConfigId    uint32           `protobuf:"varint,3,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	OwnerData   *EntityOwnerData `protobuf:"bytes,4,opt,name=owner_data,json=ownerData" json:"owner_data,omitempty"`
	MainHeroId  uint32           `protobuf:"varint,5,opt,name=main_hero_id,json=mainHeroId" json:"main_hero_id,omitempty"`
	CollectData *CollectData     `protobuf:"bytes,6,opt,name=collect_data,json=collectData" json:"collect_data,omitempty"`
	Position    *Vector2D        `protobuf:"bytes,10,opt,name=position" json:"position,omitempty"`
}

func (m *MarchTargetData) Reset()                    { *m = MarchTargetData{} }
func (m *MarchTargetData) String() string            { return proto.CompactTextString(m) }
func (*MarchTargetData) ProtoMessage()               {}
func (*MarchTargetData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{83} }

func (m *MarchTargetData) GetType() EntityType {
	if m != nil {
		return m.Type
	}
	return EntityType_kEntityType_None
}

func (m *MarchTargetData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MarchTargetData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *MarchTargetData) GetOwnerData() *EntityOwnerData {
	if m != nil {
		return m.OwnerData
	}
	return nil
}

func (m *MarchTargetData) GetMainHeroId() uint32 {
	if m != nil {
		return m.MainHeroId
	}
	return 0
}

func (m *MarchTargetData) GetCollectData() *CollectData {
	if m != nil {
		return m.CollectData
	}
	return nil
}

func (m *MarchTargetData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

type ScoutPlayerBase struct {
	PlayerId   uint64        `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Head       string        `protobuf:"bytes,2,opt,name=head" json:"head,omitempty"`
	PlayerName string        `protobuf:"bytes,3,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	Guild      *MapGuildData `protobuf:"bytes,4,opt,name=guild" json:"guild,omitempty"`
}

func (m *ScoutPlayerBase) Reset()                    { *m = ScoutPlayerBase{} }
func (m *ScoutPlayerBase) String() string            { return proto.CompactTextString(m) }
func (*ScoutPlayerBase) ProtoMessage()               {}
func (*ScoutPlayerBase) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{84} }

func (m *ScoutPlayerBase) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ScoutPlayerBase) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *ScoutPlayerBase) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *ScoutPlayerBase) GetGuild() *MapGuildData {
	if m != nil {
		return m.Guild
	}
	return nil
}

type PlayerGuildMarch struct {
	EntityId     uint64        `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	PlayerId     uint64        `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	GuildId      uint64        `protobuf:"varint,3,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	Status       uint32        `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	EndTime      int64         `protobuf:"varint,5,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	MaxArmyCount uint32        `protobuf:"varint,6,opt,name=max_army_count,json=maxArmyCount" json:"max_army_count,omitempty"`
	StartTime    int64         `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	MapData      *MapData      `protobuf:"bytes,8,opt,name=map_data,json=mapData" json:"map_data,omitempty"`
	Command      *MarchCommand `protobuf:"bytes,9,opt,name=command" json:"command,omitempty"`
}

func (m *PlayerGuildMarch) Reset()                    { *m = PlayerGuildMarch{} }
func (m *PlayerGuildMarch) String() string            { return proto.CompactTextString(m) }
func (*PlayerGuildMarch) ProtoMessage()               {}
func (*PlayerGuildMarch) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{85} }

func (m *PlayerGuildMarch) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *PlayerGuildMarch) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerGuildMarch) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *PlayerGuildMarch) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PlayerGuildMarch) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PlayerGuildMarch) GetMaxArmyCount() uint32 {
	if m != nil {
		return m.MaxArmyCount
	}
	return 0
}

func (m *PlayerGuildMarch) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PlayerGuildMarch) GetMapData() *MapData {
	if m != nil {
		return m.MapData
	}
	return nil
}

func (m *PlayerGuildMarch) GetCommand() *MarchCommand {
	if m != nil {
		return m.Command
	}
	return nil
}

type MapPlayerData struct {
	PlayerId     uint64             `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	BaseData     *MapPlayerBaseData `protobuf:"bytes,2,opt,name=base_data,json=baseData" json:"base_data,omitempty"`
	EffectData   *EffectData        `protobuf:"bytes,3,opt,name=effect_data,json=effectData" json:"effect_data,omitempty"`
	BuildingData *MapBuildingData   `protobuf:"bytes,4,opt,name=building_data,json=buildingData" json:"building_data,omitempty"`
}

func (m *MapPlayerData) Reset()                    { *m = MapPlayerData{} }
func (m *MapPlayerData) String() string            { return proto.CompactTextString(m) }
func (*MapPlayerData) ProtoMessage()               {}
func (*MapPlayerData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{86} }

func (m *MapPlayerData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MapPlayerData) GetBaseData() *MapPlayerBaseData {
	if m != nil {
		return m.BaseData
	}
	return nil
}

func (m *MapPlayerData) GetEffectData() *EffectData {
	if m != nil {
		return m.EffectData
	}
	return nil
}

func (m *MapPlayerData) GetBuildingData() *MapBuildingData {
	if m != nil {
		return m.BuildingData
	}
	return nil
}

type PlayerMapData struct {
	PlayerId  uint64             `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	BaseData  *MapPlayerBaseData `protobuf:"bytes,2,opt,name=base_data,json=baseData" json:"base_data,omitempty"`
	Castle    *CastleData        `protobuf:"bytes,3,opt,name=castle" json:"castle,omitempty"`
	Marchs    []*MarchData       `protobuf:"bytes,4,rep,name=marchs" json:"marchs,omitempty"`
	Carriages []*CarriageData    `protobuf:"bytes,5,rep,name=carriages" json:"carriages,omitempty"`
}

func (m *PlayerMapData) Reset()                    { *m = PlayerMapData{} }
func (m *PlayerMapData) String() string            { return proto.CompactTextString(m) }
func (*PlayerMapData) ProtoMessage()               {}
func (*PlayerMapData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{87} }

func (m *PlayerMapData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerMapData) GetBaseData() *MapPlayerBaseData {
	if m != nil {
		return m.BaseData
	}
	return nil
}

func (m *PlayerMapData) GetCastle() *CastleData {
	if m != nil {
		return m.Castle
	}
	return nil
}

func (m *PlayerMapData) GetMarchs() []*MarchData {
	if m != nil {
		return m.Marchs
	}
	return nil
}

func (m *PlayerMapData) GetCarriages() []*CarriageData {
	if m != nil {
		return m.Carriages
	}
	return nil
}

type PlayerPresbyter struct {
	Presbyters []*Presbyter `protobuf:"bytes,1,rep,name=presbyters" json:"presbyters,omitempty"`
}

func (m *PlayerPresbyter) Reset()                    { *m = PlayerPresbyter{} }
func (m *PlayerPresbyter) String() string            { return proto.CompactTextString(m) }
func (*PlayerPresbyter) ProtoMessage()               {}
func (*PlayerPresbyter) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{88} }

func (m *PlayerPresbyter) GetPresbyters() []*Presbyter {
	if m != nil {
		return m.Presbyters
	}
	return nil
}

// ////////////////////////////////////////////////////////////////////////
// /  战斗模块 开始
// ////////////////////////////////////////////////////////////////////////
type BattleSkill struct {
	SkillId int32 `protobuf:"varint,1,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	CdTime  int64 `protobuf:"varint,2,opt,name=cd_time,json=cdTime" json:"cd_time,omitempty"`
	SkillLv int32 `protobuf:"varint,3,opt,name=skill_lv,json=skillLv" json:"skill_lv,omitempty"`
}

func (m *BattleSkill) Reset()                    { *m = BattleSkill{} }
func (m *BattleSkill) String() string            { return proto.CompactTextString(m) }
func (*BattleSkill) ProtoMessage()               {}
func (*BattleSkill) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{89} }

func (m *BattleSkill) GetSkillId() int32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *BattleSkill) GetCdTime() int64 {
	if m != nil {
		return m.CdTime
	}
	return 0
}

func (m *BattleSkill) GetSkillLv() int32 {
	if m != nil {
		return m.SkillLv
	}
	return 0
}

type TroopDelta struct {
	TroopId    int32 `protobuf:"varint,1,opt,name=troop_id,json=troopId" json:"troop_id,omitempty"`
	TroopUints int32 `protobuf:"varint,2,opt,name=troop_uints,json=troopUints" json:"troop_uints,omitempty"`
}

func (m *TroopDelta) Reset()                    { *m = TroopDelta{} }
func (m *TroopDelta) String() string            { return proto.CompactTextString(m) }
func (*TroopDelta) ProtoMessage()               {}
func (*TroopDelta) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{90} }

func (m *TroopDelta) GetTroopId() int32 {
	if m != nil {
		return m.TroopId
	}
	return 0
}

func (m *TroopDelta) GetTroopUints() int32 {
	if m != nil {
		return m.TroopUints
	}
	return 0
}

type SkillImpact struct {
	TarEntityId    uint64       `protobuf:"varint,1,opt,name=tar_entity_id,json=tarEntityId" json:"tar_entity_id,omitempty"`
	TarTroopMod    int32        `protobuf:"varint,2,opt,name=tar_troop_mod,json=tarTroopMod" json:"tar_troop_mod,omitempty"`
	TarRemainTroop []*TroopData `protobuf:"bytes,3,rep,name=tar_remain_troop,json=tarRemainTroop" json:"tar_remain_troop,omitempty"`
	TarDead        bool         `protobuf:"varint,4,opt,name=tar_dead,json=tarDead" json:"tar_dead,omitempty"`
	Durable        int32        `protobuf:"varint,5,opt,name=durable" json:"durable,omitempty"`
	Miss           bool         `protobuf:"varint,6,opt,name=miss" json:"miss,omitempty"`
}

func (m *SkillImpact) Reset()                    { *m = SkillImpact{} }
func (m *SkillImpact) String() string            { return proto.CompactTextString(m) }
func (*SkillImpact) ProtoMessage()               {}
func (*SkillImpact) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{91} }

func (m *SkillImpact) GetTarEntityId() uint64 {
	if m != nil {
		return m.TarEntityId
	}
	return 0
}

func (m *SkillImpact) GetTarTroopMod() int32 {
	if m != nil {
		return m.TarTroopMod
	}
	return 0
}

func (m *SkillImpact) GetTarRemainTroop() []*TroopData {
	if m != nil {
		return m.TarRemainTroop
	}
	return nil
}

func (m *SkillImpact) GetTarDead() bool {
	if m != nil {
		return m.TarDead
	}
	return false
}

func (m *SkillImpact) GetDurable() int32 {
	if m != nil {
		return m.Durable
	}
	return 0
}

func (m *SkillImpact) GetMiss() bool {
	if m != nil {
		return m.Miss
	}
	return false
}

// 技能效果
type SkillResult struct {
	SrcEntityId           uint64         `protobuf:"varint,1,opt,name=src_entity_id,json=srcEntityId" json:"src_entity_id,omitempty"`
	SkillId               uint32         `protobuf:"varint,2,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	CounterattackTroopMod int32          `protobuf:"varint,3,opt,name=counterattack_troop_mod,json=counterattackTroopMod" json:"counterattack_troop_mod,omitempty"`
	SrcRemainTroop        []*TroopData   `protobuf:"bytes,4,rep,name=src_remain_troop,json=srcRemainTroop" json:"src_remain_troop,omitempty"`
	SrcDead               bool           `protobuf:"varint,5,opt,name=src_dead,json=srcDead" json:"src_dead,omitempty"`
	RemainRage            int32          `protobuf:"varint,6,opt,name=remain_rage,json=remainRage" json:"remain_rage,omitempty"`
	Herocfgid             int32          `protobuf:"varint,7,opt,name=herocfgid" json:"herocfgid,omitempty"`
	SkillImpacts          []*SkillImpact `protobuf:"bytes,9,rep,name=skill_impacts,json=skillImpacts" json:"skill_impacts,omitempty"`
	SkillLv               uint32         `protobuf:"varint,21,opt,name=skill_lv,json=skillLv" json:"skill_lv,omitempty"`
	StatusId              uint32         `protobuf:"varint,22,opt,name=status_id,json=statusId" json:"status_id,omitempty"`
	StatusOverlap         uint32         `protobuf:"varint,23,opt,name=status_overlap,json=statusOverlap" json:"status_overlap,omitempty"`
}

func (m *SkillResult) Reset()                    { *m = SkillResult{} }
func (m *SkillResult) String() string            { return proto.CompactTextString(m) }
func (*SkillResult) ProtoMessage()               {}
func (*SkillResult) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{92} }

func (m *SkillResult) GetSrcEntityId() uint64 {
	if m != nil {
		return m.SrcEntityId
	}
	return 0
}

func (m *SkillResult) GetSkillId() uint32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *SkillResult) GetCounterattackTroopMod() int32 {
	if m != nil {
		return m.CounterattackTroopMod
	}
	return 0
}

func (m *SkillResult) GetSrcRemainTroop() []*TroopData {
	if m != nil {
		return m.SrcRemainTroop
	}
	return nil
}

func (m *SkillResult) GetSrcDead() bool {
	if m != nil {
		return m.SrcDead
	}
	return false
}

func (m *SkillResult) GetRemainRage() int32 {
	if m != nil {
		return m.RemainRage
	}
	return 0
}

func (m *SkillResult) GetHerocfgid() int32 {
	if m != nil {
		return m.Herocfgid
	}
	return 0
}

func (m *SkillResult) GetSkillImpacts() []*SkillImpact {
	if m != nil {
		return m.SkillImpacts
	}
	return nil
}

func (m *SkillResult) GetSkillLv() uint32 {
	if m != nil {
		return m.SkillLv
	}
	return 0
}

func (m *SkillResult) GetStatusId() uint32 {
	if m != nil {
		return m.StatusId
	}
	return 0
}

func (m *SkillResult) GetStatusOverlap() uint32 {
	if m != nil {
		return m.StatusOverlap
	}
	return 0
}

type GuildCollectBuildingData struct {
	RemainResourceCount         uint64 `protobuf:"varint,1,opt,name=remain_resource_count,json=remainResourceCount" json:"remain_resource_count,omitempty"`
	TotalSpeed                  uint64 `protobuf:"varint,2,opt,name=total_speed,json=totalSpeed" json:"total_speed,omitempty"`
	ArrivedCount                uint64 `protobuf:"varint,3,opt,name=arrived_count,json=arrivedCount" json:"arrived_count,omitempty"`
	NotLeaveRemainResourceCount uint64 `protobuf:"varint,4,opt,name=not_leave_remain_resource_count,json=notLeaveRemainResourceCount" json:"not_leave_remain_resource_count,omitempty"`
}

func (m *GuildCollectBuildingData) Reset()                    { *m = GuildCollectBuildingData{} }
func (m *GuildCollectBuildingData) String() string            { return proto.CompactTextString(m) }
func (*GuildCollectBuildingData) ProtoMessage()               {}
func (*GuildCollectBuildingData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{93} }

func (m *GuildCollectBuildingData) GetRemainResourceCount() uint64 {
	if m != nil {
		return m.RemainResourceCount
	}
	return 0
}

func (m *GuildCollectBuildingData) GetTotalSpeed() uint64 {
	if m != nil {
		return m.TotalSpeed
	}
	return 0
}

func (m *GuildCollectBuildingData) GetArrivedCount() uint64 {
	if m != nil {
		return m.ArrivedCount
	}
	return 0
}

func (m *GuildCollectBuildingData) GetNotLeaveRemainResourceCount() uint64 {
	if m != nil {
		return m.NotLeaveRemainResourceCount
	}
	return 0
}

type GenericMonsterData struct {
	MonsterId uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	Index     uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	TempleId  uint64 `protobuf:"varint,4,opt,name=temple_id,json=templeId" json:"temple_id,omitempty"`
}

func (m *GenericMonsterData) Reset()                    { *m = GenericMonsterData{} }
func (m *GenericMonsterData) String() string            { return proto.CompactTextString(m) }
func (*GenericMonsterData) ProtoMessage()               {}
func (*GenericMonsterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{94} }

func (m *GenericMonsterData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *GenericMonsterData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *GenericMonsterData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *GenericMonsterData) GetTempleId() uint64 {
	if m != nil {
		return m.TempleId
	}
	return 0
}

type SummonMonsterData struct {
	MonsterId uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	Index     uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *SummonMonsterData) Reset()                    { *m = SummonMonsterData{} }
func (m *SummonMonsterData) String() string            { return proto.CompactTextString(m) }
func (*SummonMonsterData) ProtoMessage()               {}
func (*SummonMonsterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{95} }

func (m *SummonMonsterData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *SummonMonsterData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *SummonMonsterData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ExpeStrongholdData struct {
	MonsterId uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	Index     uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *ExpeStrongholdData) Reset()                    { *m = ExpeStrongholdData{} }
func (m *ExpeStrongholdData) String() string            { return proto.CompactTextString(m) }
func (*ExpeStrongholdData) ProtoMessage()               {}
func (*ExpeStrongholdData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{96} }

func (m *ExpeStrongholdData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *ExpeStrongholdData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *ExpeStrongholdData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ExpeEnemyFortData struct {
	MonsterId uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	Index     uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *ExpeEnemyFortData) Reset()                    { *m = ExpeEnemyFortData{} }
func (m *ExpeEnemyFortData) String() string            { return proto.CompactTextString(m) }
func (*ExpeEnemyFortData) ProtoMessage()               {}
func (*ExpeEnemyFortData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{97} }

func (m *ExpeEnemyFortData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *ExpeEnemyFortData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *ExpeEnemyFortData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ExpeGroupMarchData struct {
	MonsterId  uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime  uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	IsHomeSide bool   `protobuf:"varint,3,opt,name=is_home_side,json=isHomeSide" json:"is_home_side,omitempty"`
	Index      uint32 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
}

func (m *ExpeGroupMarchData) Reset()                    { *m = ExpeGroupMarchData{} }
func (m *ExpeGroupMarchData) String() string            { return proto.CompactTextString(m) }
func (*ExpeGroupMarchData) ProtoMessage()               {}
func (*ExpeGroupMarchData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{98} }

func (m *ExpeGroupMarchData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *ExpeGroupMarchData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *ExpeGroupMarchData) GetIsHomeSide() bool {
	if m != nil {
		return m.IsHomeSide
	}
	return false
}

func (m *ExpeGroupMarchData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type TrafficUnitData struct {
	MonsterId uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	Index     uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *TrafficUnitData) Reset()                    { *m = TrafficUnitData{} }
func (m *TrafficUnitData) String() string            { return proto.CompactTextString(m) }
func (*TrafficUnitData) ProtoMessage()               {}
func (*TrafficUnitData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{99} }

func (m *TrafficUnitData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *TrafficUnitData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *TrafficUnitData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type MapGuildBuildingRequestData struct {
	GuildId     uint64       `protobuf:"varint,1,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	ConfigId    uint32       `protobuf:"varint,2,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Position    *Vector2D    `protobuf:"bytes,3,opt,name=position" json:"position,omitempty"`
	PlayerId    uint64       `protobuf:"varint,4,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	RecordCount uint32       `protobuf:"varint,5,opt,name=record_count,json=recordCount" json:"record_count,omitempty"`
	Resources   *ResourceSet `protobuf:"bytes,6,opt,name=resources" json:"resources,omitempty"`
}

func (m *MapGuildBuildingRequestData) Reset()                    { *m = MapGuildBuildingRequestData{} }
func (m *MapGuildBuildingRequestData) String() string            { return proto.CompactTextString(m) }
func (*MapGuildBuildingRequestData) ProtoMessage()               {}
func (*MapGuildBuildingRequestData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{100} }

func (m *MapGuildBuildingRequestData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *MapGuildBuildingRequestData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *MapGuildBuildingRequestData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MapGuildBuildingRequestData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MapGuildBuildingRequestData) GetRecordCount() uint32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *MapGuildBuildingRequestData) GetResources() *ResourceSet {
	if m != nil {
		return m.Resources
	}
	return nil
}

// 创建据点请求
type MapCreateStrongHoldRequestData struct {
	GuildId      uint64       `protobuf:"varint,1,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	ConfigId     uint32       `protobuf:"varint,2,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	StrongHoldId uint32       `protobuf:"varint,3,opt,name=strong_hold_id,json=strongHoldId" json:"strong_hold_id,omitempty"`
	PlayerId     uint64       `protobuf:"varint,4,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	RecordCount  uint32       `protobuf:"varint,5,opt,name=record_count,json=recordCount" json:"record_count,omitempty"`
	Resources    *ResourceSet `protobuf:"bytes,6,opt,name=resources" json:"resources,omitempty"`
}

func (m *MapCreateStrongHoldRequestData) Reset()         { *m = MapCreateStrongHoldRequestData{} }
func (m *MapCreateStrongHoldRequestData) String() string { return proto.CompactTextString(m) }
func (*MapCreateStrongHoldRequestData) ProtoMessage()    {}
func (*MapCreateStrongHoldRequestData) Descriptor() ([]byte, []int) {
	return fileDescriptor49, []int{101}
}

func (m *MapCreateStrongHoldRequestData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *MapCreateStrongHoldRequestData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *MapCreateStrongHoldRequestData) GetStrongHoldId() uint32 {
	if m != nil {
		return m.StrongHoldId
	}
	return 0
}

func (m *MapCreateStrongHoldRequestData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MapCreateStrongHoldRequestData) GetRecordCount() uint32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *MapCreateStrongHoldRequestData) GetResources() *ResourceSet {
	if m != nil {
		return m.Resources
	}
	return nil
}

type GuildCollectMarchData struct {
	MarchEntityId   uint64 `protobuf:"varint,1,opt,name=march_entity_id,json=marchEntityId" json:"march_entity_id,omitempty"`
	StartTime       uint64 `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime         uint64 `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	AlreadyCollect  uint64 `protobuf:"varint,4,opt,name=already_collect,json=alreadyCollect" json:"already_collect,omitempty"`
	Speed           uint64 `protobuf:"varint,5,opt,name=speed" json:"speed,omitempty"`
	MaxCollectCount uint64 `protobuf:"varint,6,opt,name=max_collect_count,json=maxCollectCount" json:"max_collect_count,omitempty"`
	CollectTime     uint64 `protobuf:"varint,7,opt,name=collect_time,json=collectTime" json:"collect_time,omitempty"`
}

func (m *GuildCollectMarchData) Reset()                    { *m = GuildCollectMarchData{} }
func (m *GuildCollectMarchData) String() string            { return proto.CompactTextString(m) }
func (*GuildCollectMarchData) ProtoMessage()               {}
func (*GuildCollectMarchData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{102} }

func (m *GuildCollectMarchData) GetMarchEntityId() uint64 {
	if m != nil {
		return m.MarchEntityId
	}
	return 0
}

func (m *GuildCollectMarchData) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GuildCollectMarchData) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *GuildCollectMarchData) GetAlreadyCollect() uint64 {
	if m != nil {
		return m.AlreadyCollect
	}
	return 0
}

func (m *GuildCollectMarchData) GetSpeed() uint64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *GuildCollectMarchData) GetMaxCollectCount() uint64 {
	if m != nil {
		return m.MaxCollectCount
	}
	return 0
}

func (m *GuildCollectMarchData) GetCollectTime() uint64 {
	if m != nil {
		return m.CollectTime
	}
	return 0
}

type MapGuildBuildingDB struct {
	Building          *GuildBuildingData `protobuf:"bytes,1,opt,name=building" json:"building,omitempty"`
	LastCalculatTime  uint64             `protobuf:"varint,4,opt,name=last_calculat_time,json=lastCalculatTime" json:"last_calculat_time,omitempty"`
	ConstructPlayerId uint64             `protobuf:"varint,5,opt,name=construct_player_id,json=constructPlayerId" json:"construct_player_id,omitempty"`
	ConstructSpeed    uint64             `protobuf:"varint,6,opt,name=construct_speed,json=constructSpeed" json:"construct_speed,omitempty"`
	RecordCount       uint32             `protobuf:"varint,7,opt,name=record_count,json=recordCount" json:"record_count,omitempty"`
	RecordResources   *ResourceSet       `protobuf:"bytes,8,opt,name=record_resources,json=recordResources" json:"record_resources,omitempty"`
	LastAttackGuildId uint64             `protobuf:"varint,9,opt,name=last_attack_guild_id,json=lastAttackGuildId" json:"last_attack_guild_id,omitempty"`
}

func (m *MapGuildBuildingDB) Reset()                    { *m = MapGuildBuildingDB{} }
func (m *MapGuildBuildingDB) String() string            { return proto.CompactTextString(m) }
func (*MapGuildBuildingDB) ProtoMessage()               {}
func (*MapGuildBuildingDB) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{103} }

func (m *MapGuildBuildingDB) GetBuilding() *GuildBuildingData {
	if m != nil {
		return m.Building
	}
	return nil
}

func (m *MapGuildBuildingDB) GetLastCalculatTime() uint64 {
	if m != nil {
		return m.LastCalculatTime
	}
	return 0
}

func (m *MapGuildBuildingDB) GetConstructPlayerId() uint64 {
	if m != nil {
		return m.ConstructPlayerId
	}
	return 0
}

func (m *MapGuildBuildingDB) GetConstructSpeed() uint64 {
	if m != nil {
		return m.ConstructSpeed
	}
	return 0
}

func (m *MapGuildBuildingDB) GetRecordCount() uint32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *MapGuildBuildingDB) GetRecordResources() *ResourceSet {
	if m != nil {
		return m.RecordResources
	}
	return nil
}

func (m *MapGuildBuildingDB) GetLastAttackGuildId() uint64 {
	if m != nil {
		return m.LastAttackGuildId
	}
	return 0
}

type MapGuildCollectDB struct {
	BuildingData     *GuildCollectBuildingData `protobuf:"bytes,1,opt,name=building_data,json=buildingData" json:"building_data,omitempty"`
	CollectMarchData []*GuildCollectMarchData  `protobuf:"bytes,2,rep,name=collect_march_data,json=collectMarchData" json:"collect_march_data,omitempty"`
}

func (m *MapGuildCollectDB) Reset()                    { *m = MapGuildCollectDB{} }
func (m *MapGuildCollectDB) String() string            { return proto.CompactTextString(m) }
func (*MapGuildCollectDB) ProtoMessage()               {}
func (*MapGuildCollectDB) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{104} }

func (m *MapGuildCollectDB) GetBuildingData() *GuildCollectBuildingData {
	if m != nil {
		return m.BuildingData
	}
	return nil
}

func (m *MapGuildCollectDB) GetCollectMarchData() []*GuildCollectMarchData {
	if m != nil {
		return m.CollectMarchData
	}
	return nil
}

// ////////////////////////////////////////////////////////////////////////
// /  野蛮人城寨
// ////////////////////////////////////////////////////////////////////////
type BarbarianFortData struct {
	GenerateTime int64 `protobuf:"varint,1,opt,name=generate_time,json=generateTime" json:"generate_time,omitempty"`
	MonsterId    int64 `protobuf:"varint,2,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
}

func (m *BarbarianFortData) Reset()                    { *m = BarbarianFortData{} }
func (m *BarbarianFortData) String() string            { return proto.CompactTextString(m) }
func (*BarbarianFortData) ProtoMessage()               {}
func (*BarbarianFortData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{105} }

func (m *BarbarianFortData) GetGenerateTime() int64 {
	if m != nil {
		return m.GenerateTime
	}
	return 0
}

func (m *BarbarianFortData) GetMonsterId() int64 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////
// /  NPC城寨
// ////////////////////////////////////////////////////////////////////////
type NpcFortData struct {
	GenerateTime int64        `protobuf:"varint,1,opt,name=generate_time,json=generateTime" json:"generate_time,omitempty"`
	MonsterId    int64        `protobuf:"varint,2,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime    uint64       `protobuf:"varint,3,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	TotalTroops  []*TroopData `protobuf:"bytes,4,rep,name=total_troops,json=totalTroops" json:"total_troops,omitempty"`
	Troops       []*TroopData `protobuf:"bytes,5,rep,name=troops" json:"troops,omitempty"`
}

func (m *NpcFortData) Reset()                    { *m = NpcFortData{} }
func (m *NpcFortData) String() string            { return proto.CompactTextString(m) }
func (*NpcFortData) ProtoMessage()               {}
func (*NpcFortData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{106} }

func (m *NpcFortData) GetGenerateTime() int64 {
	if m != nil {
		return m.GenerateTime
	}
	return 0
}

func (m *NpcFortData) GetMonsterId() int64 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *NpcFortData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *NpcFortData) GetTotalTroops() []*TroopData {
	if m != nil {
		return m.TotalTroops
	}
	return nil
}

func (m *NpcFortData) GetTroops() []*TroopData {
	if m != nil {
		return m.Troops
	}
	return nil
}

// 公会奇观和关卡数据
type GuildTempleData struct {
	ConfigId         uint32    `protobuf:"varint,2,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	IsBattle         bool      `protobuf:"varint,3,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	Pos              *Vector2D `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
	Status           uint32    `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	CityLordId       uint64    `protobuf:"varint,6,opt,name=city_lord_id,json=cityLordId" json:"city_lord_id,omitempty"`
	AppointResetTime int64     `protobuf:"varint,7,opt,name=appoint_reset_time,json=appointResetTime" json:"appoint_reset_time,omitempty"`
	Level            uint32    `protobuf:"varint,8,opt,name=level" json:"level,omitempty"`
}

func (m *GuildTempleData) Reset()                    { *m = GuildTempleData{} }
func (m *GuildTempleData) String() string            { return proto.CompactTextString(m) }
func (*GuildTempleData) ProtoMessage()               {}
func (*GuildTempleData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{107} }

func (m *GuildTempleData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *GuildTempleData) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *GuildTempleData) GetPos() *Vector2D {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *GuildTempleData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GuildTempleData) GetCityLordId() uint64 {
	if m != nil {
		return m.CityLordId
	}
	return 0
}

func (m *GuildTempleData) GetAppointResetTime() int64 {
	if m != nil {
		return m.AppointResetTime
	}
	return 0
}

func (m *GuildTempleData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 公会奇观和关卡数据
type GuildPassData struct {
	ConfigId uint32    `protobuf:"varint,2,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	IsBattle bool      `protobuf:"varint,3,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	Pos      *Vector2D `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
	Status   uint32    `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	Level    uint32    `protobuf:"varint,8,opt,name=level" json:"level,omitempty"`
}

func (m *GuildPassData) Reset()                    { *m = GuildPassData{} }
func (m *GuildPassData) String() string            { return proto.CompactTextString(m) }
func (*GuildPassData) ProtoMessage()               {}
func (*GuildPassData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{108} }

func (m *GuildPassData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *GuildPassData) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *GuildPassData) GetPos() *Vector2D {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *GuildPassData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GuildPassData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 公会据点数据
type GuildStrongholdData struct {
	ConfigId      uint32    `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	IsBattle      bool      `protobuf:"varint,2,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	Pos           *Vector2D `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`
	Status        uint32    `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	Level         uint32    `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Durability    uint32    `protobuf:"varint,6,opt,name=durability" json:"durability,omitempty"`
	DurabilityMax uint32    `protobuf:"varint,7,opt,name=durability_max,json=durabilityMax" json:"durability_max,omitempty"`
	RewardTime    int64     `protobuf:"varint,8,opt,name=reward_time,json=rewardTime" json:"reward_time,omitempty"`
	CaptureTime   int64     `protobuf:"varint,9,opt,name=capture_time,json=captureTime" json:"capture_time,omitempty"`
}

func (m *GuildStrongholdData) Reset()                    { *m = GuildStrongholdData{} }
func (m *GuildStrongholdData) String() string            { return proto.CompactTextString(m) }
func (*GuildStrongholdData) ProtoMessage()               {}
func (*GuildStrongholdData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{109} }

func (m *GuildStrongholdData) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *GuildStrongholdData) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *GuildStrongholdData) GetPos() *Vector2D {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *GuildStrongholdData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GuildStrongholdData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GuildStrongholdData) GetDurability() uint32 {
	if m != nil {
		return m.Durability
	}
	return 0
}

func (m *GuildStrongholdData) GetDurabilityMax() uint32 {
	if m != nil {
		return m.DurabilityMax
	}
	return 0
}

func (m *GuildStrongholdData) GetRewardTime() int64 {
	if m != nil {
		return m.RewardTime
	}
	return 0
}

func (m *GuildStrongholdData) GetCaptureTime() int64 {
	if m != nil {
		return m.CaptureTime
	}
	return 0
}

type TempleResource struct {
	Res []*Resource `protobuf:"bytes,1,rep,name=res" json:"res,omitempty"`
}

func (m *TempleResource) Reset()                    { *m = TempleResource{} }
func (m *TempleResource) String() string            { return proto.CompactTextString(m) }
func (*TempleResource) ProtoMessage()               {}
func (*TempleResource) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{110} }

func (m *TempleResource) GetRes() []*Resource {
	if m != nil {
		return m.Res
	}
	return nil
}

type MarchAlarmData struct {
	EntityId  uint64           `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	OwnerData *EntityOwnerData `protobuf:"bytes,2,opt,name=owner_data,json=ownerData" json:"owner_data,omitempty"`
	ArmyData  *ArmyData        `protobuf:"bytes,3,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
	Pos       *Vector2D        `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
}

func (m *MarchAlarmData) Reset()                    { *m = MarchAlarmData{} }
func (m *MarchAlarmData) String() string            { return proto.CompactTextString(m) }
func (*MarchAlarmData) ProtoMessage()               {}
func (*MarchAlarmData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{111} }

func (m *MarchAlarmData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MarchAlarmData) GetOwnerData() *EntityOwnerData {
	if m != nil {
		return m.OwnerData
	}
	return nil
}

func (m *MarchAlarmData) GetArmyData() *ArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

func (m *MarchAlarmData) GetPos() *Vector2D {
	if m != nil {
		return m.Pos
	}
	return nil
}

type GuildMarchAlarmData struct {
	EntityId       uint64           `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	OwnerData      *EntityOwnerData `protobuf:"bytes,2,opt,name=owner_data,json=ownerData" json:"owner_data,omitempty"`
	ArmyData       *ArmyData        `protobuf:"bytes,3,opt,name=army_data,json=armyData" json:"army_data,omitempty"`
	StartMarchTime int64            `protobuf:"varint,4,opt,name=start_march_time,json=startMarchTime" json:"start_march_time,omitempty"`
	EndMarchTime   int64            `protobuf:"varint,5,opt,name=end_march_time,json=endMarchTime" json:"end_march_time,omitempty"`
	StartPos       *Vector2D        `protobuf:"bytes,6,opt,name=start_pos,json=startPos" json:"start_pos,omitempty"`
	Status         GuildMarchStatus `protobuf:"varint,7,opt,name=status,enum=protomsg.GuildMarchStatus" json:"status,omitempty"`
	MarchCapacity  uint32           `protobuf:"varint,8,opt,name=march_capacity,json=marchCapacity" json:"march_capacity,omitempty"`
	MarchSpeed     int64            `protobuf:"varint,9,opt,name=march_speed,json=marchSpeed" json:"march_speed,omitempty"`
	CurPos         *Vector2D        `protobuf:"bytes,10,opt,name=cur_pos,json=curPos" json:"cur_pos,omitempty"`
}

func (m *GuildMarchAlarmData) Reset()                    { *m = GuildMarchAlarmData{} }
func (m *GuildMarchAlarmData) String() string            { return proto.CompactTextString(m) }
func (*GuildMarchAlarmData) ProtoMessage()               {}
func (*GuildMarchAlarmData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{112} }

func (m *GuildMarchAlarmData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *GuildMarchAlarmData) GetOwnerData() *EntityOwnerData {
	if m != nil {
		return m.OwnerData
	}
	return nil
}

func (m *GuildMarchAlarmData) GetArmyData() *ArmyData {
	if m != nil {
		return m.ArmyData
	}
	return nil
}

func (m *GuildMarchAlarmData) GetStartMarchTime() int64 {
	if m != nil {
		return m.StartMarchTime
	}
	return 0
}

func (m *GuildMarchAlarmData) GetEndMarchTime() int64 {
	if m != nil {
		return m.EndMarchTime
	}
	return 0
}

func (m *GuildMarchAlarmData) GetStartPos() *Vector2D {
	if m != nil {
		return m.StartPos
	}
	return nil
}

func (m *GuildMarchAlarmData) GetStatus() GuildMarchStatus {
	if m != nil {
		return m.Status
	}
	return GuildMarchStatus_kGuildMarchStatus_None
}

func (m *GuildMarchAlarmData) GetMarchCapacity() uint32 {
	if m != nil {
		return m.MarchCapacity
	}
	return 0
}

func (m *GuildMarchAlarmData) GetMarchSpeed() int64 {
	if m != nil {
		return m.MarchSpeed
	}
	return 0
}

func (m *GuildMarchAlarmData) GetCurPos() *Vector2D {
	if m != nil {
		return m.CurPos
	}
	return nil
}

type ScoutAlarmData struct {
	PlayerId   uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	EntityId   uint64 `protobuf:"varint,3,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (m *ScoutAlarmData) Reset()                    { *m = ScoutAlarmData{} }
func (m *ScoutAlarmData) String() string            { return proto.CompactTextString(m) }
func (*ScoutAlarmData) ProtoMessage()               {}
func (*ScoutAlarmData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{113} }

func (m *ScoutAlarmData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ScoutAlarmData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *ScoutAlarmData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

type MapAlarmData struct {
	AlarmType    MapAlarmType `protobuf:"varint,1,opt,name=alarm_type,json=alarmType,enum=protomsg.MapAlarmType" json:"alarm_type,omitempty"`
	AlarmContent []byte       `protobuf:"bytes,2,opt,name=alarm_content,json=alarmContent,proto3" json:"alarm_content,omitempty"`
}

func (m *MapAlarmData) Reset()                    { *m = MapAlarmData{} }
func (m *MapAlarmData) String() string            { return proto.CompactTextString(m) }
func (*MapAlarmData) ProtoMessage()               {}
func (*MapAlarmData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{114} }

func (m *MapAlarmData) GetAlarmType() MapAlarmType {
	if m != nil {
		return m.AlarmType
	}
	return MapAlarmType_kMapAlarm_MarchAttack
}

func (m *MapAlarmData) GetAlarmContent() []byte {
	if m != nil {
		return m.AlarmContent
	}
	return nil
}

type MapAlarmDatas struct {
	TargetEntityId uint64          `protobuf:"varint,1,opt,name=target_entity_id,json=targetEntityId" json:"target_entity_id,omitempty"`
	Datas          []*MapAlarmData `protobuf:"bytes,2,rep,name=datas" json:"datas,omitempty"`
}

func (m *MapAlarmDatas) Reset()                    { *m = MapAlarmDatas{} }
func (m *MapAlarmDatas) String() string            { return proto.CompactTextString(m) }
func (*MapAlarmDatas) ProtoMessage()               {}
func (*MapAlarmDatas) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{115} }

func (m *MapAlarmDatas) GetTargetEntityId() uint64 {
	if m != nil {
		return m.TargetEntityId
	}
	return 0
}

func (m *MapAlarmDatas) GetDatas() []*MapAlarmData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type MapAlarmSyncData struct {
	EntityId uint64    `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	SrcPos   *Vector2D `protobuf:"bytes,2,opt,name=src_pos,json=srcPos" json:"src_pos,omitempty"`
}

func (m *MapAlarmSyncData) Reset()                    { *m = MapAlarmSyncData{} }
func (m *MapAlarmSyncData) String() string            { return proto.CompactTextString(m) }
func (*MapAlarmSyncData) ProtoMessage()               {}
func (*MapAlarmSyncData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{116} }

func (m *MapAlarmSyncData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MapAlarmSyncData) GetSrcPos() *Vector2D {
	if m != nil {
		return m.SrcPos
	}
	return nil
}

type MapAlarmSyncDatas struct {
	Datas []*MapAlarmSyncData `protobuf:"bytes,1,rep,name=datas" json:"datas,omitempty"`
}

func (m *MapAlarmSyncDatas) Reset()                    { *m = MapAlarmSyncDatas{} }
func (m *MapAlarmSyncDatas) String() string            { return proto.CompactTextString(m) }
func (*MapAlarmSyncDatas) ProtoMessage()               {}
func (*MapAlarmSyncDatas) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{117} }

func (m *MapAlarmSyncDatas) GetDatas() []*MapAlarmSyncData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type CarriageAlarmData struct {
	PlayerId   uint64    `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName string    `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	Pos        *Vector2D `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`
	EntityId   uint64    `protobuf:"varint,4,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (m *CarriageAlarmData) Reset()                    { *m = CarriageAlarmData{} }
func (m *CarriageAlarmData) String() string            { return proto.CompactTextString(m) }
func (*CarriageAlarmData) ProtoMessage()               {}
func (*CarriageAlarmData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{118} }

func (m *CarriageAlarmData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *CarriageAlarmData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *CarriageAlarmData) GetPos() *Vector2D {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CarriageAlarmData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

type EntityScoutData struct {
	ScoutIndex uint32 `protobuf:"varint,1,opt,name=scout_index,json=scoutIndex" json:"scout_index,omitempty"`
	ScoutSpeed int64  `protobuf:"varint,2,opt,name=scout_speed,json=scoutSpeed" json:"scout_speed,omitempty"`
}

func (m *EntityScoutData) Reset()                    { *m = EntityScoutData{} }
func (m *EntityScoutData) String() string            { return proto.CompactTextString(m) }
func (*EntityScoutData) ProtoMessage()               {}
func (*EntityScoutData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{119} }

func (m *EntityScoutData) GetScoutIndex() uint32 {
	if m != nil {
		return m.ScoutIndex
	}
	return 0
}

func (m *EntityScoutData) GetScoutSpeed() int64 {
	if m != nil {
		return m.ScoutSpeed
	}
	return 0
}

type ScoutExtendData struct {
	CastlePos *Vector2D `protobuf:"bytes,1,opt,name=castle_pos,json=castlePos" json:"castle_pos,omitempty"`
}

func (m *ScoutExtendData) Reset()                    { *m = ScoutExtendData{} }
func (m *ScoutExtendData) String() string            { return proto.CompactTextString(m) }
func (*ScoutExtendData) ProtoMessage()               {}
func (*ScoutExtendData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{120} }

func (m *ScoutExtendData) GetCastlePos() *Vector2D {
	if m != nil {
		return m.CastlePos
	}
	return nil
}

// ////////////////////////////////////////////////////////////////////
type MistData struct {
	AllOpen bool   `protobuf:"varint,1,opt,name=all_open,json=allOpen" json:"all_open,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *MistData) Reset()                    { *m = MistData{} }
func (m *MistData) String() string            { return proto.CompactTextString(m) }
func (*MistData) ProtoMessage()               {}
func (*MistData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{121} }

func (m *MistData) GetAllOpen() bool {
	if m != nil {
		return m.AllOpen
	}
	return false
}

func (m *MistData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type MapMiscData struct {
	CarriageSendCount    uint64 `protobuf:"varint,2,opt,name=carriage_send_count,json=carriageSendCount" json:"carriage_send_count,omitempty"`
	CarriageReceiveCount uint64 `protobuf:"varint,3,opt,name=carriage_receive_count,json=carriageReceiveCount" json:"carriage_receive_count,omitempty"`
	LastResetTime        int64  `protobuf:"varint,4,opt,name=last_reset_time,json=lastResetTime" json:"last_reset_time,omitempty"`
}

func (m *MapMiscData) Reset()                    { *m = MapMiscData{} }
func (m *MapMiscData) String() string            { return proto.CompactTextString(m) }
func (*MapMiscData) ProtoMessage()               {}
func (*MapMiscData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{122} }

func (m *MapMiscData) GetCarriageSendCount() uint64 {
	if m != nil {
		return m.CarriageSendCount
	}
	return 0
}

func (m *MapMiscData) GetCarriageReceiveCount() uint64 {
	if m != nil {
		return m.CarriageReceiveCount
	}
	return 0
}

func (m *MapMiscData) GetLastResetTime() int64 {
	if m != nil {
		return m.LastResetTime
	}
	return 0
}

// 村庄数据
type VillageInfo struct {
	IsAllAwarded bool     `protobuf:"varint,1,opt,name=is_all_awarded,json=isAllAwarded" json:"is_all_awarded,omitempty"`
	IsAllFound   bool     `protobuf:"varint,2,opt,name=is_all_found,json=isAllFound" json:"is_all_found,omitempty"`
	Founds       []uint64 `protobuf:"varint,3,rep,packed,name=founds" json:"founds,omitempty"`
	Awardeds     []uint64 `protobuf:"varint,4,rep,packed,name=awardeds" json:"awardeds,omitempty"`
}

func (m *VillageInfo) Reset()                    { *m = VillageInfo{} }
func (m *VillageInfo) String() string            { return proto.CompactTextString(m) }
func (*VillageInfo) ProtoMessage()               {}
func (*VillageInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{123} }

func (m *VillageInfo) GetIsAllAwarded() bool {
	if m != nil {
		return m.IsAllAwarded
	}
	return false
}

func (m *VillageInfo) GetIsAllFound() bool {
	if m != nil {
		return m.IsAllFound
	}
	return false
}

func (m *VillageInfo) GetFounds() []uint64 {
	if m != nil {
		return m.Founds
	}
	return nil
}

func (m *VillageInfo) GetAwardeds() []uint64 {
	if m != nil {
		return m.Awardeds
	}
	return nil
}

// 山洞数据
type CaveInfo struct {
	Id     uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Scout  uint32 `protobuf:"varint,3,opt,name=scout" json:"scout,omitempty"`
	Extra  bool   `protobuf:"varint,4,opt,name=extra" json:"extra,omitempty"`
}

func (m *CaveInfo) Reset()                    { *m = CaveInfo{} }
func (m *CaveInfo) String() string            { return proto.CompactTextString(m) }
func (*CaveInfo) ProtoMessage()               {}
func (*CaveInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{124} }

func (m *CaveInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CaveInfo) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CaveInfo) GetScout() uint32 {
	if m != nil {
		return m.Scout
	}
	return 0
}

func (m *CaveInfo) GetExtra() bool {
	if m != nil {
		return m.Extra
	}
	return false
}

// 山洞组
type CaveGroupInfo struct {
	GroupId uint32      `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	Caves   []*CaveInfo `protobuf:"bytes,2,rep,name=caves" json:"caves,omitempty"`
}

func (m *CaveGroupInfo) Reset()                    { *m = CaveGroupInfo{} }
func (m *CaveGroupInfo) String() string            { return proto.CompactTextString(m) }
func (*CaveGroupInfo) ProtoMessage()               {}
func (*CaveGroupInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{125} }

func (m *CaveGroupInfo) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *CaveGroupInfo) GetCaves() []*CaveInfo {
	if m != nil {
		return m.Caves
	}
	return nil
}

// 据点数据
type ExploreStrongholdInfo struct {
	IsAllAwarded bool     `protobuf:"varint,1,opt,name=is_all_awarded,json=isAllAwarded" json:"is_all_awarded,omitempty"`
	IsAllFound   bool     `protobuf:"varint,2,opt,name=is_all_found,json=isAllFound" json:"is_all_found,omitempty"`
	Founds       []uint64 `protobuf:"varint,3,rep,packed,name=founds" json:"founds,omitempty"`
	Awardeds     []uint64 `protobuf:"varint,4,rep,packed,name=awardeds" json:"awardeds,omitempty"`
	Mists        []uint64 `protobuf:"varint,5,rep,packed,name=mists" json:"mists,omitempty"`
}

func (m *ExploreStrongholdInfo) Reset()                    { *m = ExploreStrongholdInfo{} }
func (m *ExploreStrongholdInfo) String() string            { return proto.CompactTextString(m) }
func (*ExploreStrongholdInfo) ProtoMessage()               {}
func (*ExploreStrongholdInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{126} }

func (m *ExploreStrongholdInfo) GetIsAllAwarded() bool {
	if m != nil {
		return m.IsAllAwarded
	}
	return false
}

func (m *ExploreStrongholdInfo) GetIsAllFound() bool {
	if m != nil {
		return m.IsAllFound
	}
	return false
}

func (m *ExploreStrongholdInfo) GetFounds() []uint64 {
	if m != nil {
		return m.Founds
	}
	return nil
}

func (m *ExploreStrongholdInfo) GetAwardeds() []uint64 {
	if m != nil {
		return m.Awardeds
	}
	return nil
}

func (m *ExploreStrongholdInfo) GetMists() []uint64 {
	if m != nil {
		return m.Mists
	}
	return nil
}

// 城池数据
type ExploreTempleInfo struct {
	IsAllAwarded bool     `protobuf:"varint,1,opt,name=is_all_awarded,json=isAllAwarded" json:"is_all_awarded,omitempty"`
	IsAllFound   bool     `protobuf:"varint,2,opt,name=is_all_found,json=isAllFound" json:"is_all_found,omitempty"`
	Founds       []uint64 `protobuf:"varint,3,rep,packed,name=founds" json:"founds,omitempty"`
	Awardeds     []uint64 `protobuf:"varint,4,rep,packed,name=awardeds" json:"awardeds,omitempty"`
	Mists        []uint64 `protobuf:"varint,5,rep,packed,name=mists" json:"mists,omitempty"`
}

func (m *ExploreTempleInfo) Reset()                    { *m = ExploreTempleInfo{} }
func (m *ExploreTempleInfo) String() string            { return proto.CompactTextString(m) }
func (*ExploreTempleInfo) ProtoMessage()               {}
func (*ExploreTempleInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{127} }

func (m *ExploreTempleInfo) GetIsAllAwarded() bool {
	if m != nil {
		return m.IsAllAwarded
	}
	return false
}

func (m *ExploreTempleInfo) GetIsAllFound() bool {
	if m != nil {
		return m.IsAllFound
	}
	return false
}

func (m *ExploreTempleInfo) GetFounds() []uint64 {
	if m != nil {
		return m.Founds
	}
	return nil
}

func (m *ExploreTempleInfo) GetAwardeds() []uint64 {
	if m != nil {
		return m.Awardeds
	}
	return nil
}

func (m *ExploreTempleInfo) GetMists() []uint64 {
	if m != nil {
		return m.Mists
	}
	return nil
}

// 探索其他建筑信息
type ExploreBuildingInfo struct {
	IsAllVisited     bool     `protobuf:"varint,1,opt,name=is_all_visited,json=isAllVisited" json:"is_all_visited,omitempty"`
	IsAllFound       bool     `protobuf:"varint,2,opt,name=is_all_found,json=isAllFound" json:"is_all_found,omitempty"`
	Founds           []uint64 `protobuf:"varint,3,rep,packed,name=founds" json:"founds,omitempty"`
	Visiteds         []uint64 `protobuf:"varint,4,rep,packed,name=visiteds" json:"visiteds,omitempty"`
	FoundTempleCount uint32   `protobuf:"varint,5,opt,name=found_temple_count,json=foundTempleCount" json:"found_temple_count,omitempty"`
	FoundPassCount   uint32   `protobuf:"varint,6,opt,name=found_pass_count,json=foundPassCount" json:"found_pass_count,omitempty"`
}

func (m *ExploreBuildingInfo) Reset()                    { *m = ExploreBuildingInfo{} }
func (m *ExploreBuildingInfo) String() string            { return proto.CompactTextString(m) }
func (*ExploreBuildingInfo) ProtoMessage()               {}
func (*ExploreBuildingInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{128} }

func (m *ExploreBuildingInfo) GetIsAllVisited() bool {
	if m != nil {
		return m.IsAllVisited
	}
	return false
}

func (m *ExploreBuildingInfo) GetIsAllFound() bool {
	if m != nil {
		return m.IsAllFound
	}
	return false
}

func (m *ExploreBuildingInfo) GetFounds() []uint64 {
	if m != nil {
		return m.Founds
	}
	return nil
}

func (m *ExploreBuildingInfo) GetVisiteds() []uint64 {
	if m != nil {
		return m.Visiteds
	}
	return nil
}

func (m *ExploreBuildingInfo) GetFoundTempleCount() uint32 {
	if m != nil {
		return m.FoundTempleCount
	}
	return 0
}

func (m *ExploreBuildingInfo) GetFoundPassCount() uint32 {
	if m != nil {
		return m.FoundPassCount
	}
	return 0
}

// 玩家个人探索信息
type PlayerExploreInfo struct {
	Villages    *VillageInfo           `protobuf:"bytes,1,opt,name=villages" json:"villages,omitempty"`
	CaveGroups  []*CaveGroupInfo       `protobuf:"bytes,2,rep,name=cave_groups,json=caveGroups" json:"cave_groups,omitempty"`
	Buildings   *ExploreBuildingInfo   `protobuf:"bytes,3,opt,name=buildings" json:"buildings,omitempty"`
	Strongholds *ExploreStrongholdInfo `protobuf:"bytes,7,opt,name=strongholds" json:"strongholds,omitempty"`
	Templeinfos *ExploreTempleInfo     `protobuf:"bytes,8,opt,name=templeinfos" json:"templeinfos,omitempty"`
	IsStation   bool                   `protobuf:"varint,9,opt,name=is_station,json=isStation" json:"is_station,omitempty"`
	AwardNum    uint32                 `protobuf:"varint,10,opt,name=award_num,json=awardNum" json:"award_num,omitempty"`
}

func (m *PlayerExploreInfo) Reset()                    { *m = PlayerExploreInfo{} }
func (m *PlayerExploreInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerExploreInfo) ProtoMessage()               {}
func (*PlayerExploreInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{129} }

func (m *PlayerExploreInfo) GetVillages() *VillageInfo {
	if m != nil {
		return m.Villages
	}
	return nil
}

func (m *PlayerExploreInfo) GetCaveGroups() []*CaveGroupInfo {
	if m != nil {
		return m.CaveGroups
	}
	return nil
}

func (m *PlayerExploreInfo) GetBuildings() *ExploreBuildingInfo {
	if m != nil {
		return m.Buildings
	}
	return nil
}

func (m *PlayerExploreInfo) GetStrongholds() *ExploreStrongholdInfo {
	if m != nil {
		return m.Strongholds
	}
	return nil
}

func (m *PlayerExploreInfo) GetTempleinfos() *ExploreTempleInfo {
	if m != nil {
		return m.Templeinfos
	}
	return nil
}

func (m *PlayerExploreInfo) GetIsStation() bool {
	if m != nil {
		return m.IsStation
	}
	return false
}

func (m *PlayerExploreInfo) GetAwardNum() uint32 {
	if m != nil {
		return m.AwardNum
	}
	return 0
}

type ReenforceData struct {
	ArrivedCount      uint64 `protobuf:"varint,1,opt,name=arrived_count,json=arrivedCount" json:"arrived_count,omitempty"`
	WaitingCount      uint64 `protobuf:"varint,2,opt,name=waiting_count,json=waitingCount" json:"waiting_count,omitempty"`
	Capacity          uint64 `protobuf:"varint,3,opt,name=capacity" json:"capacity,omitempty"`
	LeaderId          uint64 `protobuf:"varint,4,opt,name=leader_id,json=leaderId" json:"leader_id,omitempty"`
	LeaderName        string `protobuf:"bytes,5,opt,name=leader_name,json=leaderName" json:"leader_name,omitempty"`
	ArrivedMarchCount uint32 `protobuf:"varint,6,opt,name=arrived_march_count,json=arrivedMarchCount" json:"arrived_march_count,omitempty"`
	WaitingMarchCount uint32 `protobuf:"varint,7,opt,name=waiting_march_count,json=waitingMarchCount" json:"waiting_march_count,omitempty"`
}

func (m *ReenforceData) Reset()                    { *m = ReenforceData{} }
func (m *ReenforceData) String() string            { return proto.CompactTextString(m) }
func (*ReenforceData) ProtoMessage()               {}
func (*ReenforceData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{130} }

func (m *ReenforceData) GetArrivedCount() uint64 {
	if m != nil {
		return m.ArrivedCount
	}
	return 0
}

func (m *ReenforceData) GetWaitingCount() uint64 {
	if m != nil {
		return m.WaitingCount
	}
	return 0
}

func (m *ReenforceData) GetCapacity() uint64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *ReenforceData) GetLeaderId() uint64 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func (m *ReenforceData) GetLeaderName() string {
	if m != nil {
		return m.LeaderName
	}
	return ""
}

func (m *ReenforceData) GetArrivedMarchCount() uint32 {
	if m != nil {
		return m.ArrivedMarchCount
	}
	return 0
}

func (m *ReenforceData) GetWaitingMarchCount() uint32 {
	if m != nil {
		return m.WaitingMarchCount
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////
// /  自动派遣
// ////////////////////////////////////////////////////////////////////////
type PluginDeployTypeInfo struct {
	SearchType MapSearchType `protobuf:"varint,1,opt,name=search_type,json=searchType,enum=protomsg.MapSearchType" json:"search_type,omitempty"`
	Levels     uint32        `protobuf:"varint,2,opt,name=levels" json:"levels,omitempty"`
}

func (m *PluginDeployTypeInfo) Reset()                    { *m = PluginDeployTypeInfo{} }
func (m *PluginDeployTypeInfo) String() string            { return proto.CompactTextString(m) }
func (*PluginDeployTypeInfo) ProtoMessage()               {}
func (*PluginDeployTypeInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{131} }

func (m *PluginDeployTypeInfo) GetSearchType() MapSearchType {
	if m != nil {
		return m.SearchType
	}
	return MapSearchType_kMapSearchType_Start
}

func (m *PluginDeployTypeInfo) GetLevels() uint32 {
	if m != nil {
		return m.Levels
	}
	return 0
}

type PluginDeployInfo struct {
	DeployId       uint32                `protobuf:"varint,1,opt,name=deploy_id,json=deployId" json:"deploy_id,omitempty"`
	DeployTypeInfo *PluginDeployTypeInfo `protobuf:"bytes,2,opt,name=deploy_type_info,json=deployTypeInfo" json:"deploy_type_info,omitempty"`
}

func (m *PluginDeployInfo) Reset()                    { *m = PluginDeployInfo{} }
func (m *PluginDeployInfo) String() string            { return proto.CompactTextString(m) }
func (*PluginDeployInfo) ProtoMessage()               {}
func (*PluginDeployInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{132} }

func (m *PluginDeployInfo) GetDeployId() uint32 {
	if m != nil {
		return m.DeployId
	}
	return 0
}

func (m *PluginDeployInfo) GetDeployTypeInfo() *PluginDeployTypeInfo {
	if m != nil {
		return m.DeployTypeInfo
	}
	return nil
}

type PluginDeploySetParam struct {
	DployInfo *PluginDeployInfo `protobuf:"bytes,1,opt,name=dploy_info,json=dployInfo" json:"dploy_info,omitempty"`
	OnOff     bool              `protobuf:"varint,2,opt,name=on_off,json=onOff" json:"on_off,omitempty"`
}

func (m *PluginDeploySetParam) Reset()                    { *m = PluginDeploySetParam{} }
func (m *PluginDeploySetParam) String() string            { return proto.CompactTextString(m) }
func (*PluginDeploySetParam) ProtoMessage()               {}
func (*PluginDeploySetParam) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{133} }

func (m *PluginDeploySetParam) GetDployInfo() *PluginDeployInfo {
	if m != nil {
		return m.DployInfo
	}
	return nil
}

func (m *PluginDeploySetParam) GetOnOff() bool {
	if m != nil {
		return m.OnOff
	}
	return false
}

type PluginDeploySet struct {
	DeployTypeInfo *PluginDeployTypeInfo `protobuf:"bytes,1,opt,name=deploy_type_info,json=deployTypeInfo" json:"deploy_type_info,omitempty"`
	DeployId       []uint32              `protobuf:"varint,2,rep,packed,name=deploy_id,json=deployId" json:"deploy_id,omitempty"`
}

func (m *PluginDeploySet) Reset()                    { *m = PluginDeploySet{} }
func (m *PluginDeploySet) String() string            { return proto.CompactTextString(m) }
func (*PluginDeploySet) ProtoMessage()               {}
func (*PluginDeploySet) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{134} }

func (m *PluginDeploySet) GetDeployTypeInfo() *PluginDeployTypeInfo {
	if m != nil {
		return m.DeployTypeInfo
	}
	return nil
}

func (m *PluginDeploySet) GetDeployId() []uint32 {
	if m != nil {
		return m.DeployId
	}
	return nil
}

type PluginDeploySyncInfo struct {
	DeployTypeInfo *PluginDeployTypeInfo `protobuf:"bytes,1,opt,name=deploy_type_info,json=deployTypeInfo" json:"deploy_type_info,omitempty"`
	AutoStartTime  int64                 `protobuf:"varint,2,opt,name=auto_start_time,json=autoStartTime" json:"auto_start_time,omitempty"`
	AutoLeftTime   uint64                `protobuf:"varint,3,opt,name=auto_left_time,json=autoLeftTime" json:"auto_left_time,omitempty"`
	DeployId       []uint32              `protobuf:"varint,4,rep,packed,name=deploy_id,json=deployId" json:"deploy_id,omitempty"`
}

func (m *PluginDeploySyncInfo) Reset()                    { *m = PluginDeploySyncInfo{} }
func (m *PluginDeploySyncInfo) String() string            { return proto.CompactTextString(m) }
func (*PluginDeploySyncInfo) ProtoMessage()               {}
func (*PluginDeploySyncInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{135} }

func (m *PluginDeploySyncInfo) GetDeployTypeInfo() *PluginDeployTypeInfo {
	if m != nil {
		return m.DeployTypeInfo
	}
	return nil
}

func (m *PluginDeploySyncInfo) GetAutoStartTime() int64 {
	if m != nil {
		return m.AutoStartTime
	}
	return 0
}

func (m *PluginDeploySyncInfo) GetAutoLeftTime() uint64 {
	if m != nil {
		return m.AutoLeftTime
	}
	return 0
}

func (m *PluginDeploySyncInfo) GetDeployId() []uint32 {
	if m != nil {
		return m.DeployId
	}
	return nil
}

type PluginDeploySyncInfoList struct {
	PluginDeployData []*PluginDeploySyncInfo `protobuf:"bytes,1,rep,name=plugin_deploy_data,json=pluginDeployData" json:"plugin_deploy_data,omitempty"`
}

func (m *PluginDeploySyncInfoList) Reset()                    { *m = PluginDeploySyncInfoList{} }
func (m *PluginDeploySyncInfoList) String() string            { return proto.CompactTextString(m) }
func (*PluginDeploySyncInfoList) ProtoMessage()               {}
func (*PluginDeploySyncInfoList) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{136} }

func (m *PluginDeploySyncInfoList) GetPluginDeployData() []*PluginDeploySyncInfo {
	if m != nil {
		return m.PluginDeployData
	}
	return nil
}

type PluginDeploylist struct {
	PluginDeployList          []*PluginDeployInfo `protobuf:"bytes,1,rep,name=plugin_deploy_list,json=pluginDeployList" json:"plugin_deploy_list,omitempty"`
	AutoMonsterStartTime      int64               `protobuf:"varint,2,opt,name=auto_monster_start_time,json=autoMonsterStartTime" json:"auto_monster_start_time,omitempty"`
	AutoCollectStartTime      int64               `protobuf:"varint,3,opt,name=auto_collect_start_time,json=autoCollectStartTime" json:"auto_collect_start_time,omitempty"`
	TotalAutoMonsterTimeToday uint64              `protobuf:"varint,4,opt,name=total_auto_monster_time_today,json=totalAutoMonsterTimeToday" json:"total_auto_monster_time_today,omitempty"`
	TotalAutoCollectTimeToday uint64              `protobuf:"varint,5,opt,name=total_auto_collect_time_today,json=totalAutoCollectTimeToday" json:"total_auto_collect_time_today,omitempty"`
}

func (m *PluginDeploylist) Reset()                    { *m = PluginDeploylist{} }
func (m *PluginDeploylist) String() string            { return proto.CompactTextString(m) }
func (*PluginDeploylist) ProtoMessage()               {}
func (*PluginDeploylist) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{137} }

func (m *PluginDeploylist) GetPluginDeployList() []*PluginDeployInfo {
	if m != nil {
		return m.PluginDeployList
	}
	return nil
}

func (m *PluginDeploylist) GetAutoMonsterStartTime() int64 {
	if m != nil {
		return m.AutoMonsterStartTime
	}
	return 0
}

func (m *PluginDeploylist) GetAutoCollectStartTime() int64 {
	if m != nil {
		return m.AutoCollectStartTime
	}
	return 0
}

func (m *PluginDeploylist) GetTotalAutoMonsterTimeToday() uint64 {
	if m != nil {
		return m.TotalAutoMonsterTimeToday
	}
	return 0
}

func (m *PluginDeploylist) GetTotalAutoCollectTimeToday() uint64 {
	if m != nil {
		return m.TotalAutoCollectTimeToday
	}
	return 0
}

// 庞贝的复仇建筑数据
type PompeiiBuildData struct {
	Status         PompeiiBuildStatus `protobuf:"varint,1,opt,name=status,enum=protomsg.PompeiiBuildStatus" json:"status,omitempty"`
	StartTime      int64              `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64              `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	FirstOccupidId uint64             `protobuf:"varint,4,opt,name=first_occupid_id,json=firstOccupidId" json:"first_occupid_id,omitempty"`
	IsBattle       bool               `protobuf:"varint,5,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
}

func (m *PompeiiBuildData) Reset()                    { *m = PompeiiBuildData{} }
func (m *PompeiiBuildData) String() string            { return proto.CompactTextString(m) }
func (*PompeiiBuildData) ProtoMessage()               {}
func (*PompeiiBuildData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{138} }

func (m *PompeiiBuildData) GetStatus() PompeiiBuildStatus {
	if m != nil {
		return m.Status
	}
	return PompeiiBuildStatus_kPompeiiBuildStatus_NotOpen
}

func (m *PompeiiBuildData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PompeiiBuildData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PompeiiBuildData) GetFirstOccupidId() uint64 {
	if m != nil {
		return m.FirstOccupidId
	}
	return 0
}

func (m *PompeiiBuildData) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

type EntityPompeiiMonsterData struct {
	MonsterId    uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	GenerateTime int64  `protobuf:"varint,2,opt,name=generate_time,json=generateTime" json:"generate_time,omitempty"`
}

func (m *EntityPompeiiMonsterData) Reset()                    { *m = EntityPompeiiMonsterData{} }
func (m *EntityPompeiiMonsterData) String() string            { return proto.CompactTextString(m) }
func (*EntityPompeiiMonsterData) ProtoMessage()               {}
func (*EntityPompeiiMonsterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{139} }

func (m *EntityPompeiiMonsterData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *EntityPompeiiMonsterData) GetGenerateTime() int64 {
	if m != nil {
		return m.GenerateTime
	}
	return 0
}

type EntityPompeiiBossData struct {
	MonsterId    uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	GenerateTime int64  `protobuf:"varint,2,opt,name=generate_time,json=generateTime" json:"generate_time,omitempty"`
}

func (m *EntityPompeiiBossData) Reset()                    { *m = EntityPompeiiBossData{} }
func (m *EntityPompeiiBossData) String() string            { return proto.CompactTextString(m) }
func (*EntityPompeiiBossData) ProtoMessage()               {}
func (*EntityPompeiiBossData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{140} }

func (m *EntityPompeiiBossData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *EntityPompeiiBossData) GetGenerateTime() int64 {
	if m != nil {
		return m.GenerateTime
	}
	return 0
}

type EntityCarriageData struct {
	MarchIndex uint32 `protobuf:"varint,1,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
	Speed      int64  `protobuf:"varint,4,opt,name=speed" json:"speed,omitempty"`
}

func (m *EntityCarriageData) Reset()                    { *m = EntityCarriageData{} }
func (m *EntityCarriageData) String() string            { return proto.CompactTextString(m) }
func (*EntityCarriageData) ProtoMessage()               {}
func (*EntityCarriageData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{141} }

func (m *EntityCarriageData) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

func (m *EntityCarriageData) GetSpeed() int64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type CarriageCreateData struct {
	Command   *MarchCommand `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	Resources *ResourceSet  `protobuf:"bytes,2,opt,name=resources" json:"resources,omitempty"`
}

func (m *CarriageCreateData) Reset()                    { *m = CarriageCreateData{} }
func (m *CarriageCreateData) String() string            { return proto.CompactTextString(m) }
func (*CarriageCreateData) ProtoMessage()               {}
func (*CarriageCreateData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{142} }

func (m *CarriageCreateData) GetCommand() *MarchCommand {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *CarriageCreateData) GetResources() *ResourceSet {
	if m != nil {
		return m.Resources
	}
	return nil
}

type CarriageCreateResultData struct {
	EntityId   uint64 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	MarchIndex uint32 `protobuf:"varint,2,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
}

func (m *CarriageCreateResultData) Reset()                    { *m = CarriageCreateResultData{} }
func (m *CarriageCreateResultData) String() string            { return proto.CompactTextString(m) }
func (*CarriageCreateResultData) ProtoMessage()               {}
func (*CarriageCreateResultData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{143} }

func (m *CarriageCreateResultData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *CarriageCreateResultData) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

type CarriageDetailedData struct {
	MarchIndex uint32        `protobuf:"varint,1,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
	EntityId   uint64        `protobuf:"varint,3,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Position   *Vector2D     `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`
	Tax        uint32        `protobuf:"varint,5,opt,name=tax" json:"tax,omitempty"`
	Resource   *ResourceSet  `protobuf:"bytes,6,opt,name=resource" json:"resource,omitempty"`
	Command    *MarchCommand `protobuf:"bytes,10,opt,name=command" json:"command,omitempty"`
}

func (m *CarriageDetailedData) Reset()                    { *m = CarriageDetailedData{} }
func (m *CarriageDetailedData) String() string            { return proto.CompactTextString(m) }
func (*CarriageDetailedData) ProtoMessage()               {}
func (*CarriageDetailedData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{144} }

func (m *CarriageDetailedData) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

func (m *CarriageDetailedData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *CarriageDetailedData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CarriageDetailedData) GetTax() uint32 {
	if m != nil {
		return m.Tax
	}
	return 0
}

func (m *CarriageDetailedData) GetResource() *ResourceSet {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *CarriageDetailedData) GetCommand() *MarchCommand {
	if m != nil {
		return m.Command
	}
	return nil
}

type CarriageCapacityData struct {
	CarriageSendCount    uint64 `protobuf:"varint,2,opt,name=carriage_send_count,json=carriageSendCount" json:"carriage_send_count,omitempty"`
	CarriageReceiveCount uint64 `protobuf:"varint,3,opt,name=carriage_receive_count,json=carriageReceiveCount" json:"carriage_receive_count,omitempty"`
	PlayerId             uint64 `protobuf:"varint,4,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	TradingPostLevel     uint32 `protobuf:"varint,5,opt,name=trading_post_level,json=tradingPostLevel" json:"trading_post_level,omitempty"`
}

func (m *CarriageCapacityData) Reset()                    { *m = CarriageCapacityData{} }
func (m *CarriageCapacityData) String() string            { return proto.CompactTextString(m) }
func (*CarriageCapacityData) ProtoMessage()               {}
func (*CarriageCapacityData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{145} }

func (m *CarriageCapacityData) GetCarriageSendCount() uint64 {
	if m != nil {
		return m.CarriageSendCount
	}
	return 0
}

func (m *CarriageCapacityData) GetCarriageReceiveCount() uint64 {
	if m != nil {
		return m.CarriageReceiveCount
	}
	return 0
}

func (m *CarriageCapacityData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *CarriageCapacityData) GetTradingPostLevel() uint32 {
	if m != nil {
		return m.TradingPostLevel
	}
	return 0
}

type CarriageCapacityInfo struct {
	Datas []*CarriageCapacityData `protobuf:"bytes,1,rep,name=datas" json:"datas,omitempty"`
}

func (m *CarriageCapacityInfo) Reset()                    { *m = CarriageCapacityInfo{} }
func (m *CarriageCapacityInfo) String() string            { return proto.CompactTextString(m) }
func (*CarriageCapacityInfo) ProtoMessage()               {}
func (*CarriageCapacityInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{146} }

func (m *CarriageCapacityInfo) GetDatas() []*CarriageCapacityData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type EntityKingdomTitle struct {
	Title uint32 `protobuf:"varint,1,opt,name=title" json:"title,omitempty"`
}

func (m *EntityKingdomTitle) Reset()                    { *m = EntityKingdomTitle{} }
func (m *EntityKingdomTitle) String() string            { return proto.CompactTextString(m) }
func (*EntityKingdomTitle) ProtoMessage()               {}
func (*EntityKingdomTitle) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{147} }

func (m *EntityKingdomTitle) GetTitle() uint32 {
	if m != nil {
		return m.Title
	}
	return 0
}

type KingBaseData struct {
	KingPlayerId uint64 `protobuf:"varint,1,opt,name=king_player_id,json=kingPlayerId" json:"king_player_id,omitempty"`
	KingGuildId  uint64 `protobuf:"varint,2,opt,name=king_guild_id,json=kingGuildId" json:"king_guild_id,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	KingdomId    uint64 `protobuf:"varint,4,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
}

func (m *KingBaseData) Reset()                    { *m = KingBaseData{} }
func (m *KingBaseData) String() string            { return proto.CompactTextString(m) }
func (*KingBaseData) ProtoMessage()               {}
func (*KingBaseData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{148} }

func (m *KingBaseData) GetKingPlayerId() uint64 {
	if m != nil {
		return m.KingPlayerId
	}
	return 0
}

func (m *KingBaseData) GetKingGuildId() uint64 {
	if m != nil {
		return m.KingGuildId
	}
	return 0
}

func (m *KingBaseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KingBaseData) GetKingdomId() uint64 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

// 奇观城墙入库数据
type TempleWallDbData struct {
	Durability uint32 `protobuf:"varint,1,opt,name=durability" json:"durability,omitempty"`
}

func (m *TempleWallDbData) Reset()                    { *m = TempleWallDbData{} }
func (m *TempleWallDbData) String() string            { return proto.CompactTextString(m) }
func (*TempleWallDbData) ProtoMessage()               {}
func (*TempleWallDbData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{149} }

func (m *TempleWallDbData) GetDurability() uint32 {
	if m != nil {
		return m.Durability
	}
	return 0
}

// 奇观城墙同步数据
type TempleWallData struct {
	Durability    uint32 `protobuf:"varint,1,opt,name=durability" json:"durability,omitempty"`
	DurabilityMax uint32 `protobuf:"varint,2,opt,name=durability_max,json=durabilityMax" json:"durability_max,omitempty"`
}

func (m *TempleWallData) Reset()                    { *m = TempleWallData{} }
func (m *TempleWallData) String() string            { return proto.CompactTextString(m) }
func (*TempleWallData) ProtoMessage()               {}
func (*TempleWallData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{150} }

func (m *TempleWallData) GetDurability() uint32 {
	if m != nil {
		return m.Durability
	}
	return 0
}

func (m *TempleWallData) GetDurabilityMax() uint32 {
	if m != nil {
		return m.DurabilityMax
	}
	return 0
}

// 奇观虚拟城墙同步数据
type TempleVirtualWallData struct {
	Durability    uint32   `protobuf:"varint,1,opt,name=durability" json:"durability,omitempty"`
	DurabilityMax uint32   `protobuf:"varint,2,opt,name=durability_max,json=durabilityMax" json:"durability_max,omitempty"`
	AllEntityIds  []uint64 `protobuf:"varint,3,rep,packed,name=all_entity_ids,json=allEntityIds" json:"all_entity_ids,omitempty"`
}

func (m *TempleVirtualWallData) Reset()                    { *m = TempleVirtualWallData{} }
func (m *TempleVirtualWallData) String() string            { return proto.CompactTextString(m) }
func (*TempleVirtualWallData) ProtoMessage()               {}
func (*TempleVirtualWallData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{151} }

func (m *TempleVirtualWallData) GetDurability() uint32 {
	if m != nil {
		return m.Durability
	}
	return 0
}

func (m *TempleVirtualWallData) GetDurabilityMax() uint32 {
	if m != nil {
		return m.DurabilityMax
	}
	return 0
}

func (m *TempleVirtualWallData) GetAllEntityIds() []uint64 {
	if m != nil {
		return m.AllEntityIds
	}
	return nil
}

// 掉落入库数据
type DropDBData struct {
	DropItemType DropItemType `protobuf:"varint,1,opt,name=drop_item_type,json=dropItemType,enum=protomsg.DropItemType" json:"drop_item_type,omitempty"`
	DropItemId   uint32       `protobuf:"varint,2,opt,name=drop_item_id,json=dropItemId" json:"drop_item_id,omitempty"`
	EndTime      int64        `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *DropDBData) Reset()                    { *m = DropDBData{} }
func (m *DropDBData) String() string            { return proto.CompactTextString(m) }
func (*DropDBData) ProtoMessage()               {}
func (*DropDBData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{152} }

func (m *DropDBData) GetDropItemType() DropItemType {
	if m != nil {
		return m.DropItemType
	}
	return DropItemType_kDropItemType_None
}

func (m *DropDBData) GetDropItemId() uint32 {
	if m != nil {
		return m.DropItemId
	}
	return 0
}

func (m *DropDBData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 掉落同步数据
type DropSyncData struct {
	DropItemType DropItemType `protobuf:"varint,1,opt,name=drop_item_type,json=dropItemType,enum=protomsg.DropItemType" json:"drop_item_type,omitempty"`
	DropItemId   uint32       `protobuf:"varint,2,opt,name=drop_item_id,json=dropItemId" json:"drop_item_id,omitempty"`
	EndTime      int64        `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *DropSyncData) Reset()                    { *m = DropSyncData{} }
func (m *DropSyncData) String() string            { return proto.CompactTextString(m) }
func (*DropSyncData) ProtoMessage()               {}
func (*DropSyncData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{153} }

func (m *DropSyncData) GetDropItemType() DropItemType {
	if m != nil {
		return m.DropItemType
	}
	return DropItemType_kDropItemType_None
}

func (m *DropSyncData) GetDropItemId() uint32 {
	if m != nil {
		return m.DropItemId
	}
	return 0
}

func (m *DropSyncData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 奇怪守卫怪同步数据
type TempleGuardMonsterData struct {
	MonsterId uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	Index     uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *TempleGuardMonsterData) Reset()                    { *m = TempleGuardMonsterData{} }
func (m *TempleGuardMonsterData) String() string            { return proto.CompactTextString(m) }
func (*TempleGuardMonsterData) ProtoMessage()               {}
func (*TempleGuardMonsterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{154} }

func (m *TempleGuardMonsterData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *TempleGuardMonsterData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *TempleGuardMonsterData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// 投石车同步数据
type CatapultData struct {
	MonsterId       uint32    `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	AttackPosition  *Vector2D `protobuf:"bytes,2,opt,name=attack_position,json=attackPosition" json:"attack_position,omitempty"`
	AttackStartTime int64     `protobuf:"varint,3,opt,name=attack_start_time,json=attackStartTime" json:"attack_start_time,omitempty"`
	AttackDelayTime uint32    `protobuf:"varint,4,opt,name=attack_delay_time,json=attackDelayTime" json:"attack_delay_time,omitempty"`
	TempleId        uint64    `protobuf:"varint,5,opt,name=temple_id,json=templeId" json:"temple_id,omitempty"`
}

func (m *CatapultData) Reset()                    { *m = CatapultData{} }
func (m *CatapultData) String() string            { return proto.CompactTextString(m) }
func (*CatapultData) ProtoMessage()               {}
func (*CatapultData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{155} }

func (m *CatapultData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *CatapultData) GetAttackPosition() *Vector2D {
	if m != nil {
		return m.AttackPosition
	}
	return nil
}

func (m *CatapultData) GetAttackStartTime() int64 {
	if m != nil {
		return m.AttackStartTime
	}
	return 0
}

func (m *CatapultData) GetAttackDelayTime() uint32 {
	if m != nil {
		return m.AttackDelayTime
	}
	return 0
}

func (m *CatapultData) GetTempleId() uint64 {
	if m != nil {
		return m.TempleId
	}
	return 0
}

type CatapultDBData struct {
	TempldId uint64 `protobuf:"varint,1,opt,name=templd_id,json=templdId" json:"templd_id,omitempty"`
}

func (m *CatapultDBData) Reset()                    { *m = CatapultDBData{} }
func (m *CatapultDBData) String() string            { return proto.CompactTextString(m) }
func (*CatapultDBData) ProtoMessage()               {}
func (*CatapultDBData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{156} }

func (m *CatapultDBData) GetTempldId() uint64 {
	if m != nil {
		return m.TempldId
	}
	return 0
}

// 城墙掠夺同步数据
type WallPillageSyncData struct {
	EntityId       uint64 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	MaxPillage     uint64 `protobuf:"varint,2,opt,name=max_pillage,json=maxPillage" json:"max_pillage,omitempty"`
	CurrentPillage uint64 `protobuf:"varint,3,opt,name=current_pillage,json=currentPillage" json:"current_pillage,omitempty"`
}

func (m *WallPillageSyncData) Reset()                    { *m = WallPillageSyncData{} }
func (m *WallPillageSyncData) String() string            { return proto.CompactTextString(m) }
func (*WallPillageSyncData) ProtoMessage()               {}
func (*WallPillageSyncData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{157} }

func (m *WallPillageSyncData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *WallPillageSyncData) GetMaxPillage() uint64 {
	if m != nil {
		return m.MaxPillage
	}
	return 0
}

func (m *WallPillageSyncData) GetCurrentPillage() uint64 {
	if m != nil {
		return m.CurrentPillage
	}
	return 0
}

// 庞贝生化实验室
type PompeiiLabData struct {
	CultureTankEntityId uint64 `protobuf:"varint,1,opt,name=culture_tank_entity_id,json=cultureTankEntityId" json:"culture_tank_entity_id,omitempty"`
	LastIndex           uint32 `protobuf:"varint,2,opt,name=last_index,json=lastIndex" json:"last_index,omitempty"`
	RefreshTime         int64  `protobuf:"varint,3,opt,name=refresh_time,json=refreshTime" json:"refresh_time,omitempty"`
	InLab               bool   `protobuf:"varint,4,opt,name=in_lab,json=inLab" json:"in_lab,omitempty"`
}

func (m *PompeiiLabData) Reset()                    { *m = PompeiiLabData{} }
func (m *PompeiiLabData) String() string            { return proto.CompactTextString(m) }
func (*PompeiiLabData) ProtoMessage()               {}
func (*PompeiiLabData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{158} }

func (m *PompeiiLabData) GetCultureTankEntityId() uint64 {
	if m != nil {
		return m.CultureTankEntityId
	}
	return 0
}

func (m *PompeiiLabData) GetLastIndex() uint32 {
	if m != nil {
		return m.LastIndex
	}
	return 0
}

func (m *PompeiiLabData) GetRefreshTime() int64 {
	if m != nil {
		return m.RefreshTime
	}
	return 0
}

func (m *PompeiiLabData) GetInLab() bool {
	if m != nil {
		return m.InLab
	}
	return false
}

// 庞贝培养槽
type PompeiiCultureTankData struct {
	MarchEntityId uint64 `protobuf:"varint,1,opt,name=march_entity_id,json=marchEntityId" json:"march_entity_id,omitempty"`
	Index         uint32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	LabEntityId   uint64 `protobuf:"varint,3,opt,name=lab_entity_id,json=labEntityId" json:"lab_entity_id,omitempty"`
}

func (m *PompeiiCultureTankData) Reset()                    { *m = PompeiiCultureTankData{} }
func (m *PompeiiCultureTankData) String() string            { return proto.CompactTextString(m) }
func (*PompeiiCultureTankData) ProtoMessage()               {}
func (*PompeiiCultureTankData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{159} }

func (m *PompeiiCultureTankData) GetMarchEntityId() uint64 {
	if m != nil {
		return m.MarchEntityId
	}
	return 0
}

func (m *PompeiiCultureTankData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PompeiiCultureTankData) GetLabEntityId() uint64 {
	if m != nil {
		return m.LabEntityId
	}
	return 0
}

type MarchPickUpData struct {
	StartTime int64 `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   int64 `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *MarchPickUpData) Reset()                    { *m = MarchPickUpData{} }
func (m *MarchPickUpData) String() string            { return proto.CompactTextString(m) }
func (*MarchPickUpData) ProtoMessage()               {}
func (*MarchPickUpData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{160} }

func (m *MarchPickUpData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *MarchPickUpData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 火车站
type TrainStationEntityData struct {
}

func (m *TrainStationEntityData) Reset()                    { *m = TrainStationEntityData{} }
func (m *TrainStationEntityData) String() string            { return proto.CompactTextString(m) }
func (*TrainStationEntityData) ProtoMessage()               {}
func (*TrainStationEntityData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{161} }

// 月台
type RailwayPlatformEntityData struct {
	TrainEntityId uint64 `protobuf:"varint,1,opt,name=train_entity_id,json=trainEntityId" json:"train_entity_id,omitempty"`
}

func (m *RailwayPlatformEntityData) Reset()                    { *m = RailwayPlatformEntityData{} }
func (m *RailwayPlatformEntityData) String() string            { return proto.CompactTextString(m) }
func (*RailwayPlatformEntityData) ProtoMessage()               {}
func (*RailwayPlatformEntityData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{162} }

func (m *RailwayPlatformEntityData) GetTrainEntityId() uint64 {
	if m != nil {
		return m.TrainEntityId
	}
	return 0
}

// 火车
type TrainEntityData struct {
	Status       TrainStatus `protobuf:"varint,1,opt,name=status,enum=protomsg.TrainStatus" json:"status,omitempty"`
	StartTime    int64       `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime      int64       `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	FromPlatform uint64      `protobuf:"varint,4,opt,name=from_platform,json=fromPlatform" json:"from_platform,omitempty"`
	ToPlatform   uint64      `protobuf:"varint,5,opt,name=to_platform,json=toPlatform" json:"to_platform,omitempty"`
	FirstWait    bool        `protobuf:"varint,6,opt,name=first_wait,json=firstWait" json:"first_wait,omitempty"`
}

func (m *TrainEntityData) Reset()                    { *m = TrainEntityData{} }
func (m *TrainEntityData) String() string            { return proto.CompactTextString(m) }
func (*TrainEntityData) ProtoMessage()               {}
func (*TrainEntityData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{163} }

func (m *TrainEntityData) GetStatus() TrainStatus {
	if m != nil {
		return m.Status
	}
	return TrainStatus_kTrainStatus_None
}

func (m *TrainEntityData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TrainEntityData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *TrainEntityData) GetFromPlatform() uint64 {
	if m != nil {
		return m.FromPlatform
	}
	return 0
}

func (m *TrainEntityData) GetToPlatform() uint64 {
	if m != nil {
		return m.ToPlatform
	}
	return 0
}

func (m *TrainEntityData) GetFirstWait() bool {
	if m != nil {
		return m.FirstWait
	}
	return false
}

type PrivateRadarMonsterData struct {
	MonsterId       uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime       uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	Index           uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	OwnerPlayerId   uint64 `protobuf:"varint,4,opt,name=owner_player_id,json=ownerPlayerId" json:"owner_player_id,omitempty"`
	OwnerRadarId    uint64 `protobuf:"varint,5,opt,name=owner_radar_id,json=ownerRadarId" json:"owner_radar_id,omitempty"`
	OwnerPlayerName string `protobuf:"bytes,6,opt,name=owner_player_name,json=ownerPlayerName" json:"owner_player_name,omitempty"`
}

func (m *PrivateRadarMonsterData) Reset()                    { *m = PrivateRadarMonsterData{} }
func (m *PrivateRadarMonsterData) String() string            { return proto.CompactTextString(m) }
func (*PrivateRadarMonsterData) ProtoMessage()               {}
func (*PrivateRadarMonsterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{164} }

func (m *PrivateRadarMonsterData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *PrivateRadarMonsterData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *PrivateRadarMonsterData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PrivateRadarMonsterData) GetOwnerPlayerId() uint64 {
	if m != nil {
		return m.OwnerPlayerId
	}
	return 0
}

func (m *PrivateRadarMonsterData) GetOwnerRadarId() uint64 {
	if m != nil {
		return m.OwnerRadarId
	}
	return 0
}

func (m *PrivateRadarMonsterData) GetOwnerPlayerName() string {
	if m != nil {
		return m.OwnerPlayerName
	}
	return ""
}

type PublicRadarMonsterData struct {
	MonsterId     uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	DeathTime     uint64 `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	Index         uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	OwnerPlayerId uint64 `protobuf:"varint,4,opt,name=owner_player_id,json=ownerPlayerId" json:"owner_player_id,omitempty"`
	OwnerRadarId  uint64 `protobuf:"varint,5,opt,name=owner_radar_id,json=ownerRadarId" json:"owner_radar_id,omitempty"`
}

func (m *PublicRadarMonsterData) Reset()                    { *m = PublicRadarMonsterData{} }
func (m *PublicRadarMonsterData) String() string            { return proto.CompactTextString(m) }
func (*PublicRadarMonsterData) ProtoMessage()               {}
func (*PublicRadarMonsterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{165} }

func (m *PublicRadarMonsterData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *PublicRadarMonsterData) GetDeathTime() uint64 {
	if m != nil {
		return m.DeathTime
	}
	return 0
}

func (m *PublicRadarMonsterData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PublicRadarMonsterData) GetOwnerPlayerId() uint64 {
	if m != nil {
		return m.OwnerPlayerId
	}
	return 0
}

func (m *PublicRadarMonsterData) GetOwnerRadarId() uint64 {
	if m != nil {
		return m.OwnerRadarId
	}
	return 0
}

// 据点同步数据
type StrongholdData struct {
	Status        uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	StartTime     int64  `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime       int64  `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	RewardTime    int64  `protobuf:"varint,4,opt,name=reward_time,json=rewardTime" json:"reward_time,omitempty"`
	Durability    uint32 `protobuf:"varint,5,opt,name=durability" json:"durability,omitempty"`
	DurabilityMax uint32 `protobuf:"varint,6,opt,name=durability_max,json=durabilityMax" json:"durability_max,omitempty"`
	IsActive      bool   `protobuf:"varint,7,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	IsCaptured    bool   `protobuf:"varint,8,opt,name=is_captured,json=isCaptured" json:"is_captured,omitempty"`
	IsBattle      bool   `protobuf:"varint,9,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	CaptureTime   int64  `protobuf:"varint,10,opt,name=capture_time,json=captureTime" json:"capture_time,omitempty"`
}

func (m *StrongholdData) Reset()                    { *m = StrongholdData{} }
func (m *StrongholdData) String() string            { return proto.CompactTextString(m) }
func (*StrongholdData) ProtoMessage()               {}
func (*StrongholdData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{166} }

func (m *StrongholdData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *StrongholdData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *StrongholdData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *StrongholdData) GetRewardTime() int64 {
	if m != nil {
		return m.RewardTime
	}
	return 0
}

func (m *StrongholdData) GetDurability() uint32 {
	if m != nil {
		return m.Durability
	}
	return 0
}

func (m *StrongholdData) GetDurabilityMax() uint32 {
	if m != nil {
		return m.DurabilityMax
	}
	return 0
}

func (m *StrongholdData) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *StrongholdData) GetIsCaptured() bool {
	if m != nil {
		return m.IsCaptured
	}
	return false
}

func (m *StrongholdData) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *StrongholdData) GetCaptureTime() int64 {
	if m != nil {
		return m.CaptureTime
	}
	return 0
}

// 据点入库数据
type StrongholdDbData struct {
	Status               uint32   `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	StartTime            int64    `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime              int64    `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	RewardTime           int64    `protobuf:"varint,4,opt,name=reward_time,json=rewardTime" json:"reward_time,omitempty"`
	Durability           uint32   `protobuf:"varint,5,opt,name=durability" json:"durability,omitempty"`
	CaptureTime          int64    `protobuf:"varint,6,opt,name=capture_time,json=captureTime" json:"capture_time,omitempty"`
	DefendMarchEntityIds []uint64 `protobuf:"varint,7,rep,packed,name=defend_march_entity_ids,json=defendMarchEntityIds" json:"defend_march_entity_ids,omitempty"`
}

func (m *StrongholdDbData) Reset()                    { *m = StrongholdDbData{} }
func (m *StrongholdDbData) String() string            { return proto.CompactTextString(m) }
func (*StrongholdDbData) ProtoMessage()               {}
func (*StrongholdDbData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{167} }

func (m *StrongholdDbData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *StrongholdDbData) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *StrongholdDbData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *StrongholdDbData) GetRewardTime() int64 {
	if m != nil {
		return m.RewardTime
	}
	return 0
}

func (m *StrongholdDbData) GetDurability() uint32 {
	if m != nil {
		return m.Durability
	}
	return 0
}

func (m *StrongholdDbData) GetCaptureTime() int64 {
	if m != nil {
		return m.CaptureTime
	}
	return 0
}

func (m *StrongholdDbData) GetDefendMarchEntityIds() []uint64 {
	if m != nil {
		return m.DefendMarchEntityIds
	}
	return nil
}

// 请求地图建筑信息
type MapBuildingBriefInfo struct {
	MapEntityId    uint64 `protobuf:"varint,1,opt,name=map_entity_id,json=mapEntityId" json:"map_entity_id,omitempty"`
	MapEntityType  uint32 `protobuf:"varint,2,opt,name=map_entity_type,json=mapEntityType" json:"map_entity_type,omitempty"`
	IsCaptured     bool   `protobuf:"varint,3,opt,name=is_captured,json=isCaptured" json:"is_captured,omitempty"`
	IsBattle       bool   `protobuf:"varint,4,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	IsActive       bool   `protobuf:"varint,5,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	GuildId        uint64 `protobuf:"varint,6,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildIcon      uint32 `protobuf:"varint,7,opt,name=guild_icon,json=guildIcon" json:"guild_icon,omitempty"`
	GuildShortName string `protobuf:"bytes,8,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	OwnerId        uint64 `protobuf:"varint,9,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	OwnerType      uint32 `protobuf:"varint,10,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
}

func (m *MapBuildingBriefInfo) Reset()                    { *m = MapBuildingBriefInfo{} }
func (m *MapBuildingBriefInfo) String() string            { return proto.CompactTextString(m) }
func (*MapBuildingBriefInfo) ProtoMessage()               {}
func (*MapBuildingBriefInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{168} }

func (m *MapBuildingBriefInfo) GetMapEntityId() uint64 {
	if m != nil {
		return m.MapEntityId
	}
	return 0
}

func (m *MapBuildingBriefInfo) GetMapEntityType() uint32 {
	if m != nil {
		return m.MapEntityType
	}
	return 0
}

func (m *MapBuildingBriefInfo) GetIsCaptured() bool {
	if m != nil {
		return m.IsCaptured
	}
	return false
}

func (m *MapBuildingBriefInfo) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *MapBuildingBriefInfo) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *MapBuildingBriefInfo) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *MapBuildingBriefInfo) GetGuildIcon() uint32 {
	if m != nil {
		return m.GuildIcon
	}
	return 0
}

func (m *MapBuildingBriefInfo) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *MapBuildingBriefInfo) GetOwnerId() uint64 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *MapBuildingBriefInfo) GetOwnerType() uint32 {
	if m != nil {
		return m.OwnerType
	}
	return 0
}

// 驻防守军信息
type DefendMarchArmyData struct {
	Army        *ArmyData `protobuf:"bytes,2,opt,name=army" json:"army,omitempty"`
	PlayerId    uint64    `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName  string    `protobuf:"bytes,4,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	SystemGuard bool      `protobuf:"varint,5,opt,name=system_guard,json=systemGuard" json:"system_guard,omitempty"`
	BattlePower uint64    `protobuf:"varint,6,opt,name=battle_power,json=battlePower" json:"battle_power,omitempty"`
}

func (m *DefendMarchArmyData) Reset()                    { *m = DefendMarchArmyData{} }
func (m *DefendMarchArmyData) String() string            { return proto.CompactTextString(m) }
func (*DefendMarchArmyData) ProtoMessage()               {}
func (*DefendMarchArmyData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{169} }

func (m *DefendMarchArmyData) GetArmy() *ArmyData {
	if m != nil {
		return m.Army
	}
	return nil
}

func (m *DefendMarchArmyData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *DefendMarchArmyData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *DefendMarchArmyData) GetSystemGuard() bool {
	if m != nil {
		return m.SystemGuard
	}
	return false
}

func (m *DefendMarchArmyData) GetBattlePower() uint64 {
	if m != nil {
		return m.BattlePower
	}
	return 0
}

type DefendMarchesInfo struct {
	EntityId uint64                 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Marches  []*DefendMarchArmyData `protobuf:"bytes,2,rep,name=marches" json:"marches,omitempty"`
}

func (m *DefendMarchesInfo) Reset()                    { *m = DefendMarchesInfo{} }
func (m *DefendMarchesInfo) String() string            { return proto.CompactTextString(m) }
func (*DefendMarchesInfo) ProtoMessage()               {}
func (*DefendMarchesInfo) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{170} }

func (m *DefendMarchesInfo) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *DefendMarchesInfo) GetMarches() []*DefendMarchArmyData {
	if m != nil {
		return m.Marches
	}
	return nil
}

type NpcFortDbData struct {
	NpcForceId       int64  `protobuf:"varint,1,opt,name=npc_force_id,json=npcForceId" json:"npc_force_id,omitempty"`
	RefreshTime      int64  `protobuf:"varint,2,opt,name=refresh_time,json=refreshTime" json:"refresh_time,omitempty"`
	MonsterId        uint32 `protobuf:"varint,3,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	MonsterNumber    uint32 `protobuf:"varint,4,opt,name=monster_number,json=monsterNumber" json:"monster_number,omitempty"`
	Radius           uint32 `protobuf:"varint,5,opt,name=radius" json:"radius,omitempty"`
	EventId          uint32 `protobuf:"varint,6,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	TempleId         uint32 `protobuf:"varint,7,opt,name=temple_id,json=templeId" json:"temple_id,omitempty"`
	RefreshMonsterId uint32 `protobuf:"varint,8,opt,name=refresh_monster_id,json=refreshMonsterId" json:"refresh_monster_id,omitempty"`
}

func (m *NpcFortDbData) Reset()                    { *m = NpcFortDbData{} }
func (m *NpcFortDbData) String() string            { return proto.CompactTextString(m) }
func (*NpcFortDbData) ProtoMessage()               {}
func (*NpcFortDbData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{171} }

func (m *NpcFortDbData) GetNpcForceId() int64 {
	if m != nil {
		return m.NpcForceId
	}
	return 0
}

func (m *NpcFortDbData) GetRefreshTime() int64 {
	if m != nil {
		return m.RefreshTime
	}
	return 0
}

func (m *NpcFortDbData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *NpcFortDbData) GetMonsterNumber() uint32 {
	if m != nil {
		return m.MonsterNumber
	}
	return 0
}

func (m *NpcFortDbData) GetRadius() uint32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *NpcFortDbData) GetEventId() uint32 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *NpcFortDbData) GetTempleId() uint32 {
	if m != nil {
		return m.TempleId
	}
	return 0
}

func (m *NpcFortDbData) GetRefreshMonsterId() uint32 {
	if m != nil {
		return m.RefreshMonsterId
	}
	return 0
}

type KillMonsterData struct {
	MonsterId uint32 `protobuf:"varint,1,opt,name=monster_id,json=monsterId" json:"monster_id,omitempty"`
	KillTime  int64  `protobuf:"varint,3,opt,name=kill_time,json=killTime" json:"kill_time,omitempty"`
}

func (m *KillMonsterData) Reset()                    { *m = KillMonsterData{} }
func (m *KillMonsterData) String() string            { return proto.CompactTextString(m) }
func (*KillMonsterData) ProtoMessage()               {}
func (*KillMonsterData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{172} }

func (m *KillMonsterData) GetMonsterId() uint32 {
	if m != nil {
		return m.MonsterId
	}
	return 0
}

func (m *KillMonsterData) GetKillTime() int64 {
	if m != nil {
		return m.KillTime
	}
	return 0
}

type KillData struct {
	MonsterData []*KillMonsterData `protobuf:"bytes,1,rep,name=monster_data,json=monsterData" json:"monster_data,omitempty"`
}

func (m *KillData) Reset()                    { *m = KillData{} }
func (m *KillData) String() string            { return proto.CompactTextString(m) }
func (*KillData) ProtoMessage()               {}
func (*KillData) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{173} }

func (m *KillData) GetMonsterData() []*KillMonsterData {
	if m != nil {
		return m.MonsterData
	}
	return nil
}

func init() {
	proto.RegisterType((*GridData)(nil), "protomsg.GridData")
	proto.RegisterType((*EventData)(nil), "protomsg.EventData")
	proto.RegisterType((*ShowBuffStrongHold)(nil), "protomsg.ShowBuffStrongHold")
	proto.RegisterType((*ShowBuffMarch)(nil), "protomsg.ShowBuffMarch")
	proto.RegisterType((*ShowBuffCastle)(nil), "protomsg.ShowBuffCastle")
	proto.RegisterType((*ShowBuffMap)(nil), "protomsg.ShowBuffMap")
	proto.RegisterType((*ShowBuffGuild)(nil), "protomsg.ShowBuffGuild")
	proto.RegisterType((*ShowBuffData)(nil), "protomsg.ShowBuffData")
	proto.RegisterType((*EntityTypeData)(nil), "protomsg.EntityTypeData")
	proto.RegisterType((*EntityOwnerData)(nil), "protomsg.EntityOwnerData")
	proto.RegisterType((*EntityMarchData)(nil), "protomsg.EntityMarchData")
	proto.RegisterType((*EntitySimpleData)(nil), "protomsg.EntitySimpleData")
	proto.RegisterType((*StatePathData)(nil), "protomsg.StatePathData")
	proto.RegisterType((*StatePathDatas)(nil), "protomsg.StatePathDatas")
	proto.RegisterType((*PathData)(nil), "protomsg.PathData")
	proto.RegisterType((*TroopData)(nil), "protomsg.TroopData")
	proto.RegisterType((*GuildMarchData)(nil), "protomsg.GuildMarchData")
	proto.RegisterType((*GuildMarchLimit)(nil), "protomsg.GuildMarchLimit")
	proto.RegisterType((*GuildMarchInfo)(nil), "protomsg.GuildMarchInfo")
	proto.RegisterType((*GuildMarchAttackInfo)(nil), "protomsg.GuildMarchAttackInfo")
	proto.RegisterType((*PlayerCastle)(nil), "protomsg.PlayerCastle")
	proto.RegisterType((*BarbariansMeta)(nil), "protomsg.BarbariansMeta")
	proto.RegisterType((*CollectResource)(nil), "protomsg.CollectResource")
	proto.RegisterType((*ResourceData)(nil), "protomsg.ResourceData")
	proto.RegisterType((*CollectData)(nil), "protomsg.CollectData")
	proto.RegisterType((*GuildTempleWarData)(nil), "protomsg.GuildTempleWarData")
	proto.RegisterType((*PlayerTempleWarDBData)(nil), "protomsg.PlayerTempleWarDBData")
	proto.RegisterType((*GuildTempleWarDBData)(nil), "protomsg.GuildTempleWarDBData")
	proto.RegisterType((*TempleData)(nil), "protomsg.TempleData")
	proto.RegisterType((*TempleDbData)(nil), "protomsg.TempleDbData")
	proto.RegisterType((*PassData)(nil), "protomsg.PassData")
	proto.RegisterType((*MarchCommand)(nil), "protomsg.MarchCommand")
	proto.RegisterType((*CastleCreateData)(nil), "protomsg.CastleCreateData")
	proto.RegisterType((*CastleCreateResultData)(nil), "protomsg.CastleCreateResultData")
	proto.RegisterType((*MarchCreateData)(nil), "protomsg.MarchCreateData")
	proto.RegisterType((*MarchCreateResultData)(nil), "protomsg.MarchCreateResultData")
	proto.RegisterType((*MapPlayerExtandData)(nil), "protomsg.MapPlayerExtandData")
	proto.RegisterType((*MapPlayerPresbyterData)(nil), "protomsg.MapPlayerPresbyterData")
	proto.RegisterType((*MapPlayerRegisterData)(nil), "protomsg.MapPlayerRegisterData")
	proto.RegisterType((*MapPlayerRegisterResultData)(nil), "protomsg.MapPlayerRegisterResultData")
	proto.RegisterType((*MapPlayerUnRegisterResultData)(nil), "protomsg.MapPlayerUnRegisterResultData")
	proto.RegisterType((*MapPlayerUpdateData)(nil), "protomsg.MapPlayerUpdateData")
	proto.RegisterType((*BarbariansData)(nil), "protomsg.BarbariansData")
	proto.RegisterType((*SummonData)(nil), "protomsg.SummonData")
	proto.RegisterType((*TrapData)(nil), "protomsg.TrapData")
	proto.RegisterType((*ArmyData)(nil), "protomsg.ArmyData")
	proto.RegisterType((*MarchArmyData)(nil), "protomsg.MarchArmyData")
	proto.RegisterType((*ArmyComponentData)(nil), "protomsg.ArmyComponentData")
	proto.RegisterType((*ReenforceArmyData)(nil), "protomsg.ReenforceArmyData")
	proto.RegisterType((*ReenforceInfo)(nil), "protomsg.ReenforceInfo")
	proto.RegisterType((*ReenforceJoinTimeInfo)(nil), "protomsg.ReenforceJoinTimeInfo")
	proto.RegisterType((*DBReenforceData)(nil), "protomsg.DBReenforceData")
	proto.RegisterType((*ArmyHeroData)(nil), "protomsg.ArmyHeroData")
	proto.RegisterType((*GarrisonData)(nil), "protomsg.GarrisonData")
	proto.RegisterType((*MarchHeroData)(nil), "protomsg.MarchHeroData")
	proto.RegisterType((*KillBarbariansData)(nil), "protomsg.KillBarbariansData")
	proto.RegisterType((*EffectData)(nil), "protomsg.EffectData")
	proto.RegisterType((*CastleExtendData)(nil), "protomsg.CastleExtendData")
	proto.RegisterType((*AttackTargetData)(nil), "protomsg.AttackTargetData")
	proto.RegisterType((*AttackStickEnemyData)(nil), "protomsg.AttackStickEnemyData")
	proto.RegisterType((*MoveSpeedData)(nil), "protomsg.MoveSpeedData")
	proto.RegisterType((*SkillStatus)(nil), "protomsg.SkillStatus")
	proto.RegisterType((*SkillStatusData)(nil), "protomsg.SkillStatusData")
	proto.RegisterType((*MultiStrikeData)(nil), "protomsg.MultiStrikeData")
	proto.RegisterType((*BattleStatusData)(nil), "protomsg.BattleStatusData")
	proto.RegisterType((*MapBuildingInfo)(nil), "protomsg.MapBuildingInfo")
	proto.RegisterType((*MapBuildingData)(nil), "protomsg.MapBuildingData")
	proto.RegisterType((*MapData)(nil), "protomsg.MapData")
	proto.RegisterType((*MoveData)(nil), "protomsg.MoveData")
	proto.RegisterType((*MovePathData)(nil), "protomsg.MovePathData")
	proto.RegisterType((*MapPlayerBaseData)(nil), "protomsg.MapPlayerBaseData")
	proto.RegisterType((*MainCastleData)(nil), "protomsg.MainCastleData")
	proto.RegisterType((*CityWallData)(nil), "protomsg.CityWallData")
	proto.RegisterType((*CityWallAllData)(nil), "protomsg.CityWallAllData")
	proto.RegisterType((*GarrisonHeroData)(nil), "protomsg.GarrisonHeroData")
	proto.RegisterType((*PlayerMarch)(nil), "protomsg.PlayerMarch")
	proto.RegisterType((*MapViewerData)(nil), "protomsg.MapViewerData")
	proto.RegisterType((*SyncData)(nil), "protomsg.SyncData")
	proto.RegisterType((*SyncEntityData)(nil), "protomsg.SyncEntityData")
	proto.RegisterType((*MarchData)(nil), "protomsg.MarchData")
	proto.RegisterType((*CastleData)(nil), "protomsg.CastleData")
	proto.RegisterType((*GuildBaseData)(nil), "protomsg.GuildBaseData")
	proto.RegisterType((*EntityBaseData)(nil), "protomsg.EntityBaseData")
	proto.RegisterType((*MarchTargetData)(nil), "protomsg.MarchTargetData")
	proto.RegisterType((*ScoutPlayerBase)(nil), "protomsg.ScoutPlayerBase")
	proto.RegisterType((*PlayerGuildMarch)(nil), "protomsg.PlayerGuildMarch")
	proto.RegisterType((*MapPlayerData)(nil), "protomsg.MapPlayerData")
	proto.RegisterType((*PlayerMapData)(nil), "protomsg.PlayerMapData")
	proto.RegisterType((*PlayerPresbyter)(nil), "protomsg.PlayerPresbyter")
	proto.RegisterType((*BattleSkill)(nil), "protomsg.BattleSkill")
	proto.RegisterType((*TroopDelta)(nil), "protomsg.TroopDelta")
	proto.RegisterType((*SkillImpact)(nil), "protomsg.SkillImpact")
	proto.RegisterType((*SkillResult)(nil), "protomsg.SkillResult")
	proto.RegisterType((*GuildCollectBuildingData)(nil), "protomsg.GuildCollectBuildingData")
	proto.RegisterType((*GenericMonsterData)(nil), "protomsg.GenericMonsterData")
	proto.RegisterType((*SummonMonsterData)(nil), "protomsg.SummonMonsterData")
	proto.RegisterType((*ExpeStrongholdData)(nil), "protomsg.ExpeStrongholdData")
	proto.RegisterType((*ExpeEnemyFortData)(nil), "protomsg.ExpeEnemyFortData")
	proto.RegisterType((*ExpeGroupMarchData)(nil), "protomsg.ExpeGroupMarchData")
	proto.RegisterType((*TrafficUnitData)(nil), "protomsg.TrafficUnitData")
	proto.RegisterType((*MapGuildBuildingRequestData)(nil), "protomsg.MapGuildBuildingRequestData")
	proto.RegisterType((*MapCreateStrongHoldRequestData)(nil), "protomsg.MapCreateStrongHoldRequestData")
	proto.RegisterType((*GuildCollectMarchData)(nil), "protomsg.GuildCollectMarchData")
	proto.RegisterType((*MapGuildBuildingDB)(nil), "protomsg.MapGuildBuildingDB")
	proto.RegisterType((*MapGuildCollectDB)(nil), "protomsg.MapGuildCollectDB")
	proto.RegisterType((*BarbarianFortData)(nil), "protomsg.BarbarianFortData")
	proto.RegisterType((*NpcFortData)(nil), "protomsg.NpcFortData")
	proto.RegisterType((*GuildTempleData)(nil), "protomsg.GuildTempleData")
	proto.RegisterType((*GuildPassData)(nil), "protomsg.GuildPassData")
	proto.RegisterType((*GuildStrongholdData)(nil), "protomsg.GuildStrongholdData")
	proto.RegisterType((*TempleResource)(nil), "protomsg.TempleResource")
	proto.RegisterType((*MarchAlarmData)(nil), "protomsg.MarchAlarmData")
	proto.RegisterType((*GuildMarchAlarmData)(nil), "protomsg.GuildMarchAlarmData")
	proto.RegisterType((*ScoutAlarmData)(nil), "protomsg.ScoutAlarmData")
	proto.RegisterType((*MapAlarmData)(nil), "protomsg.MapAlarmData")
	proto.RegisterType((*MapAlarmDatas)(nil), "protomsg.MapAlarmDatas")
	proto.RegisterType((*MapAlarmSyncData)(nil), "protomsg.MapAlarmSyncData")
	proto.RegisterType((*MapAlarmSyncDatas)(nil), "protomsg.MapAlarmSyncDatas")
	proto.RegisterType((*CarriageAlarmData)(nil), "protomsg.CarriageAlarmData")
	proto.RegisterType((*EntityScoutData)(nil), "protomsg.EntityScoutData")
	proto.RegisterType((*ScoutExtendData)(nil), "protomsg.ScoutExtendData")
	proto.RegisterType((*MistData)(nil), "protomsg.MistData")
	proto.RegisterType((*MapMiscData)(nil), "protomsg.MapMiscData")
	proto.RegisterType((*VillageInfo)(nil), "protomsg.VillageInfo")
	proto.RegisterType((*CaveInfo)(nil), "protomsg.CaveInfo")
	proto.RegisterType((*CaveGroupInfo)(nil), "protomsg.CaveGroupInfo")
	proto.RegisterType((*ExploreStrongholdInfo)(nil), "protomsg.ExploreStrongholdInfo")
	proto.RegisterType((*ExploreTempleInfo)(nil), "protomsg.ExploreTempleInfo")
	proto.RegisterType((*ExploreBuildingInfo)(nil), "protomsg.ExploreBuildingInfo")
	proto.RegisterType((*PlayerExploreInfo)(nil), "protomsg.PlayerExploreInfo")
	proto.RegisterType((*ReenforceData)(nil), "protomsg.ReenforceData")
	proto.RegisterType((*PluginDeployTypeInfo)(nil), "protomsg.PluginDeployTypeInfo")
	proto.RegisterType((*PluginDeployInfo)(nil), "protomsg.PluginDeployInfo")
	proto.RegisterType((*PluginDeploySetParam)(nil), "protomsg.PluginDeploySetParam")
	proto.RegisterType((*PluginDeploySet)(nil), "protomsg.PluginDeploySet")
	proto.RegisterType((*PluginDeploySyncInfo)(nil), "protomsg.PluginDeploySyncInfo")
	proto.RegisterType((*PluginDeploySyncInfoList)(nil), "protomsg.PluginDeploySyncInfoList")
	proto.RegisterType((*PluginDeploylist)(nil), "protomsg.PluginDeploylist")
	proto.RegisterType((*PompeiiBuildData)(nil), "protomsg.PompeiiBuildData")
	proto.RegisterType((*EntityPompeiiMonsterData)(nil), "protomsg.EntityPompeiiMonsterData")
	proto.RegisterType((*EntityPompeiiBossData)(nil), "protomsg.EntityPompeiiBossData")
	proto.RegisterType((*EntityCarriageData)(nil), "protomsg.EntityCarriageData")
	proto.RegisterType((*CarriageCreateData)(nil), "protomsg.CarriageCreateData")
	proto.RegisterType((*CarriageCreateResultData)(nil), "protomsg.CarriageCreateResultData")
	proto.RegisterType((*CarriageDetailedData)(nil), "protomsg.CarriageDetailedData")
	proto.RegisterType((*CarriageCapacityData)(nil), "protomsg.CarriageCapacityData")
	proto.RegisterType((*CarriageCapacityInfo)(nil), "protomsg.CarriageCapacityInfo")
	proto.RegisterType((*EntityKingdomTitle)(nil), "protomsg.EntityKingdomTitle")
	proto.RegisterType((*KingBaseData)(nil), "protomsg.KingBaseData")
	proto.RegisterType((*TempleWallDbData)(nil), "protomsg.TempleWallDbData")
	proto.RegisterType((*TempleWallData)(nil), "protomsg.TempleWallData")
	proto.RegisterType((*TempleVirtualWallData)(nil), "protomsg.TempleVirtualWallData")
	proto.RegisterType((*DropDBData)(nil), "protomsg.DropDBData")
	proto.RegisterType((*DropSyncData)(nil), "protomsg.DropSyncData")
	proto.RegisterType((*TempleGuardMonsterData)(nil), "protomsg.TempleGuardMonsterData")
	proto.RegisterType((*CatapultData)(nil), "protomsg.CatapultData")
	proto.RegisterType((*CatapultDBData)(nil), "protomsg.CatapultDBData")
	proto.RegisterType((*WallPillageSyncData)(nil), "protomsg.WallPillageSyncData")
	proto.RegisterType((*PompeiiLabData)(nil), "protomsg.PompeiiLabData")
	proto.RegisterType((*PompeiiCultureTankData)(nil), "protomsg.PompeiiCultureTankData")
	proto.RegisterType((*MarchPickUpData)(nil), "protomsg.MarchPickUpData")
	proto.RegisterType((*TrainStationEntityData)(nil), "protomsg.TrainStationEntityData")
	proto.RegisterType((*RailwayPlatformEntityData)(nil), "protomsg.RailwayPlatformEntityData")
	proto.RegisterType((*TrainEntityData)(nil), "protomsg.TrainEntityData")
	proto.RegisterType((*PrivateRadarMonsterData)(nil), "protomsg.PrivateRadarMonsterData")
	proto.RegisterType((*PublicRadarMonsterData)(nil), "protomsg.PublicRadarMonsterData")
	proto.RegisterType((*StrongholdData)(nil), "protomsg.StrongholdData")
	proto.RegisterType((*StrongholdDbData)(nil), "protomsg.StrongholdDbData")
	proto.RegisterType((*MapBuildingBriefInfo)(nil), "protomsg.MapBuildingBriefInfo")
	proto.RegisterType((*DefendMarchArmyData)(nil), "protomsg.DefendMarchArmyData")
	proto.RegisterType((*DefendMarchesInfo)(nil), "protomsg.DefendMarchesInfo")
	proto.RegisterType((*NpcFortDbData)(nil), "protomsg.NpcFortDbData")
	proto.RegisterType((*KillMonsterData)(nil), "protomsg.kill_monster_data")
	proto.RegisterType((*KillData)(nil), "protomsg.kill_data")
	proto.RegisterEnum("protomsg.RegionType", RegionType_name, RegionType_value)
	proto.RegisterEnum("protomsg.EntityMonitorType", EntityMonitorType_name, EntityMonitorType_value)
	proto.RegisterEnum("protomsg.EntityType", EntityType_name, EntityType_value)
	proto.RegisterEnum("protomsg.DropItemType", DropItemType_name, DropItemType_value)
	proto.RegisterEnum("protomsg.EntityPropertyType", EntityPropertyType_name, EntityPropertyType_value)
	proto.RegisterEnum("protomsg.MapTerritoryType", MapTerritoryType_name, MapTerritoryType_value)
	proto.RegisterEnum("protomsg.TroopType", TroopType_name, TroopType_value)
	proto.RegisterEnum("protomsg.TemplePoliticalLv", TemplePoliticalLv_name, TemplePoliticalLv_value)
	proto.RegisterEnum("protomsg.MarchCommandStatus", MarchCommandStatus_name, MarchCommandStatus_value)
	proto.RegisterEnum("protomsg.MarchCommandTarget", MarchCommandTarget_name, MarchCommandTarget_value)
	proto.RegisterEnum("protomsg.CollectType", CollectType_name, CollectType_value)
	proto.RegisterEnum("protomsg.StrongholdType", StrongholdType_name, StrongholdType_value)
	proto.RegisterEnum("protomsg.GuildResourceFieldType", GuildResourceFieldType_name, GuildResourceFieldType_value)
	proto.RegisterEnum("protomsg.GuildMarchMemberStatus", GuildMarchMemberStatus_name, GuildMarchMemberStatus_value)
	proto.RegisterEnum("protomsg.GuildMarchStatus", GuildMarchStatus_name, GuildMarchStatus_value)
	proto.RegisterEnum("protomsg.BuffAttrType", BuffAttrType_name, BuffAttrType_value)
	proto.RegisterEnum("protomsg.MoveCastleType", MoveCastleType_name, MoveCastleType_value)
	proto.RegisterEnum("protomsg.TempleStatusType", TempleStatusType_name, TempleStatusType_value)
	proto.RegisterEnum("protomsg.TempleIsCapturedStatus", TempleIsCapturedStatus_name, TempleIsCapturedStatus_value)
	proto.RegisterEnum("protomsg.PassStatusType", PassStatusType_name, PassStatusType_value)
	proto.RegisterEnum("protomsg.PassIsCapturedStatus", PassIsCapturedStatus_name, PassIsCapturedStatus_value)
	proto.RegisterEnum("protomsg.GuildBuildingBagType", GuildBuildingBagType_name, GuildBuildingBagType_value)
	proto.RegisterEnum("protomsg.MapSearchType", MapSearchType_name, MapSearchType_value)
	proto.RegisterEnum("protomsg.MapSearchCreateEntityType", MapSearchCreateEntityType_name, MapSearchCreateEntityType_value)
	proto.RegisterEnum("protomsg.MapAlarmType", MapAlarmType_name, MapAlarmType_value)
	proto.RegisterEnum("protomsg.ExploreStatus", ExploreStatus_name, ExploreStatus_value)
	proto.RegisterEnum("protomsg.AutoExploreStateType", AutoExploreStateType_name, AutoExploreStateType_value)
	proto.RegisterEnum("protomsg.PompeiiBuildStatus", PompeiiBuildStatus_name, PompeiiBuildStatus_value)
	proto.RegisterEnum("protomsg.PompeiiBuildType", PompeiiBuildType_name, PompeiiBuildType_value)
	proto.RegisterEnum("protomsg.AddArmySourceType", AddArmySourceType_name, AddArmySourceType_value)
	proto.RegisterEnum("protomsg.TrainStatus", TrainStatus_name, TrainStatus_value)
	proto.RegisterEnum("protomsg.StrongholdStatusType", StrongholdStatusType_name, StrongholdStatusType_value)
}

func init() { proto.RegisterFile("msg_common_map.proto", fileDescriptor49) }

var fileDescriptor49 = []byte{
	// 11189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x7d, 0x59, 0x8c, 0x25, 0x59,
	0x76, 0x90, 0xe3, 0x2d, 0xf9, 0xde, 0x3b, 0x6f, 0xc9, 0xc8, 0xa8, 0xcc, 0xaa, 0xac, 0xaa, 0xae,
	0xa5, 0xa3, 0xab, 0xbb, 0x6b, 0xb2, 0xf7, 0x5a, 0xa6, 0xbb, 0xa7, 0x7b, 0xda, 0x93, 0x99, 0xb5,
	0xe5, 0x74, 0x65, 0x75, 0x3a, 0x32, 0xbb, 0xdb, 0x06, 0xcb, 0x4f, 0x91, 0x2f, 0x22, 0x33, 0xc3,
	0x15, 0x2f, 0xe2, 0x4d, 0x44, 0xbc, 0xac, 0x4a, 0x8c, 0x04, 0x48, 0x18, 0xcb, 0x36, 0xb2, 0xc5,
	0x22, 0x0c, 0x42, 0xf6, 0x17, 0x7c, 0x20, 0x84, 0xc5, 0x22, 0x03, 0x32, 0x12, 0x9b, 0x84, 0x57,
	0x3c, 0xc6, 0x20, 0x90, 0xc0, 0x58, 0x83, 0x25, 0x30, 0x9e, 0x31, 0x60, 0xc3, 0x80, 0x40, 0x58,
	0xb2, 0xd1, 0x3d, 0xe7, 0xde, 0x88, 0x7b, 0x63, 0x79, 0x99, 0xd5, 0xcb, 0xcc, 0x58, 0x7c, 0x65,
	0xc6, 0x39, 0xe7, 0xee, 0xe7, 0x9e, 0x7b, 0xee, 0x59, 0xee, 0x83, 0xc5, 0x71, 0xbc, 0x3f, 0x1c,
	0x85, 0xe3, 0x71, 0x18, 0x0c, 0xc7, 0xf6, 0xe4, 0xe5, 0x49, 0x14, 0x26, 0xa1, 0xd1, 0xc6, 0x3f,
	0xe3, 0x78, 0xff, 0x9c, 0x9e, 0xe1, 0x09, 0x77, 0xee, 0xb4, 0x54, 0x62, 0x7f, 0xea, 0xf9, 0x0e,
	0x87, 0x9f, 0xdd, 0x0f, 0xc3, 0x7d, 0xdf, 0x7d, 0x05, 0xbf, 0x76, 0xa7, 0x7b, 0xaf, 0xd8, 0xc1,
	0x11, 0xa1, 0xcc, 0x37, 0xa0, 0x7d, 0x37, 0xf2, 0x9c, 0x5b, 0x76, 0x62, 0x1b, 0x8b, 0xd0, 0xf4,
	0x02, 0xc7, 0x7d, 0xbc, 0xac, 0x5d, 0xd6, 0xae, 0xf6, 0x2d, 0xfa, 0x30, 0x4e, 0xc3, 0x5c, 0x9c,
	0xd8, 0xc9, 0x34, 0x5e, 0xae, 0x21, 0x98, 0x7f, 0x99, 0xff, 0xb3, 0x06, 0x9d, 0xdb, 0x87, 0x6e,
	0x90, 0x60, 0xd9, 0x0b, 0x00, 0x2e, 0xfb, 0x18, 0x26, 0x47, 0x13, 0x97, 0x57, 0xd0, 0x41, 0xc8,
	0xce, 0xd1, 0xc4, 0x35, 0x2e, 0x42, 0xd7, 0x0b, 0x92, 0xe1, 0xc4, 0x8e, 0xec, 0xf1, 0xf0, 0x35,
	0xac, 0xa9, 0x61, 0x75, 0xbc, 0x20, 0xd9, 0x62, 0x90, 0xd7, 0x54, 0xfc, 0xb5, 0xe5, 0xba, 0x8a,
	0xbf, 0xa6, 0xe2, 0xaf, 0x2f, 0x37, 0x54, 0xfc, 0x75, 0x15, 0x7f, 0x63, 0xb9, 0xa9, 0xe2, 0x6f,
	0x30, 0x7c, 0x9c, 0x44, 0x69, 0xfb, 0x73, 0x97, 0xb5, 0xab, 0x1d, 0xab, 0x13, 0x27, 0x51, 0xd6,
	0x7e, 0x86, 0xbf, 0xb6, 0xdc, 0x52, 0xf1, 0xd7, 0x54, 0xfc, 0xf5, 0xe5, 0xb6, 0x8a, 0xbf, 0xae,
	0xe2, 0x6f, 0x2c, 0x77, 0x54, 0xfc, 0x0d, 0xb5, 0x7f, 0xc1, 0x32, 0x5c, 0xae, 0xcb, 0xfd, 0x7b,
	0x60, 0x5c, 0x85, 0x86, 0x63, 0x27, 0xf6, 0x72, 0xf7, 0xb2, 0x76, 0xb5, 0x7b, 0x6d, 0xf1, 0x65,
	0x5a, 0xb0, 0x97, 0xc5, 0x82, 0xbd, 0xbc, 0x1a, 0x1c, 0x59, 0x48, 0x61, 0xfe, 0x74, 0x0d, 0x8c,
	0xed, 0x83, 0xf0, 0xd1, 0xda, 0x74, 0x6f, 0x6f, 0x3b, 0x89, 0xc2, 0x60, 0xff, 0x5e, 0xe8, 0x3b,
	0x86, 0x01, 0x8d, 0xc0, 0x1e, 0xd3, 0xcc, 0x77, 0x2c, 0xfc, 0xdf, 0x38, 0x0f, 0x9d, 0x89, 0x6f,
	0x1f, 0xb9, 0xd1, 0xd0, 0x73, 0xf8, 0x94, 0xb7, 0x09, 0xb0, 0xe1, 0x18, 0x57, 0x41, 0x77, 0x83,
	0xc4, 0x4b, 0x8e, 0x86, 0x19, 0x0d, 0x4d, 0xfb, 0x80, 0xe0, 0x5b, 0x82, 0xf2, 0x3c, 0x74, 0x38,
	0xa5, 0xe7, 0xf0, 0x99, 0x6f, 0x13, 0x60, 0xc3, 0x31, 0x2e, 0x41, 0x97, 0x23, 0x71, 0xe1, 0x9b,
	0xd8, 0x3c, 0x10, 0x08, 0x57, 0xde, 0x84, 0xbe, 0xed, 0xfb, 0xc3, 0xdd, 0xe9, 0xde, 0x1e, 0x91,
	0xd0, 0xdc, 0x77, 0x6d, 0xdf, 0x67, 0x43, 0x40, 0x9a, 0xab, 0xa0, 0xa7, 0xf8, 0x61, 0x1c, 0x4e,
	0xa3, 0x91, 0xcb, 0x97, 0x60, 0xb0, 0xcb, 0x69, 0xb6, 0x11, 0x6a, 0x7c, 0x1e, 0xce, 0x27, 0xee,
	0xe8, 0x20, 0x08, 0xfd, 0x70, 0xff, 0x68, 0x58, 0x28, 0x44, 0xeb, 0xb2, 0x9c, 0x91, 0xac, 0x29,
	0xc5, 0xcd, 0xbf, 0xd9, 0x80, 0xbe, 0x98, 0xbc, 0x4d, 0x3b, 0x1a, 0x1d, 0xfc, 0xff, 0x32, 0x6f,
	0xa7, 0x61, 0xce, 0x4e, 0x12, 0x7b, 0xf4, 0x10, 0xa7, 0xa8, 0x6e, 0xf1, 0x2f, 0x63, 0x19, 0x5a,
	0x8e, 0xbb, 0xe7, 0x06, 0x23, 0x17, 0x79, 0xb6, 0x6e, 0x89, 0x4f, 0x63, 0x00, 0xb5, 0x83, 0xc9,
	0x32, 0x20, 0xb0, 0x76, 0x30, 0x61, 0xc2, 0x21, 0x89, 0xc2, 0x70, 0x82, 0x2c, 0xda, 0xb7, 0xe8,
	0x83, 0x41, 0xe3, 0x89, 0xeb, 0x3a, 0xcb, 0x3d, 0x24, 0xa4, 0x0f, 0xe3, 0x32, 0xf4, 0xc6, 0xb6,
	0x17, 0x0c, 0x0f, 0xdc, 0x28, 0x64, 0x83, 0xef, 0x63, 0x11, 0x60, 0xb0, 0x7b, 0x6e, 0x14, 0x6e,
	0x38, 0xc6, 0x15, 0x18, 0xc4, 0xee, 0x28, 0x0c, 0x9c, 0x94, 0x66, 0x80, 0x34, 0x3d, 0x82, 0x72,
	0x2a, 0x13, 0xfa, 0xc9, 0x81, 0x17, 0x65, 0x44, 0xf3, 0x48, 0xd4, 0x45, 0x60, 0x56, 0xd3, 0x5e,
	0x38, 0x8d, 0x92, 0x83, 0x94, 0x48, 0xa7, 0x9a, 0x08, 0x9a, 0xd5, 0xb4, 0xe7, 0xed, 0x49, 0x44,
	0x0b, 0x54, 0x13, 0x02, 0x39, 0xcd, 0x22, 0x34, 0x7d, 0xf7, 0xd0, 0xf5, 0x97, 0x0d, 0x1a, 0x21,
	0x7e, 0x98, 0x5f, 0xad, 0xc3, 0x40, 0xb0, 0xcc, 0xba, 0x1d, 0x27, 0xbe, 0xfb, 0xad, 0xcb, 0x33,
	0x57, 0x60, 0xf0, 0xbd, 0xa1, 0x17, 0x0c, 0xb3, 0x2a, 0xe6, 0xb0, 0x8a, 0x1e, 0x83, 0xde, 0x16,
	0xd5, 0xa4, 0xe3, 0x6c, 0x49, 0xe3, 0x2c, 0xac, 0x59, 0xfb, 0x04, 0x6b, 0xd6, 0x39, 0xc9, 0x9a,
	0xc1, 0x49, 0xd6, 0xac, 0x7b, 0x92, 0x35, 0xeb, 0x15, 0xd7, 0xac, 0xb0, 0x4b, 0xfa, 0x27, 0xdb,
	0x25, 0x83, 0xb2, 0x5d, 0x62, 0xee, 0x42, 0x37, 0x93, 0x0e, 0x93, 0x27, 0x5f, 0xe7, 0x42, 0x6f,
	0xea, 0x85, 0xde, 0x98, 0x7f, 0x2c, 0x93, 0x40, 0x77, 0xd9, 0x11, 0xfd, 0xe4, 0xad, 0x9c, 0x85,
	0x36, 0x1e, 0xee, 0x19, 0x17, 0xb5, 0xf0, 0xbb, 0xac, 0x03, 0x8d, 0x62, 0x07, 0x7e, 0xa0, 0x06,
	0x3d, 0xd1, 0x03, 0x3c, 0xba, 0xdf, 0x06, 0x88, 0xf1, 0x20, 0x39, 0x08, 0x7d, 0x07, 0xbb, 0xd1,
	0xbd, 0xf6, 0xd4, 0xcb, 0x42, 0xcd, 0x78, 0xb9, 0x78, 0xd8, 0x58, 0x12, 0xbd, 0xf1, 0x0a, 0xcc,
	0x8d, 0x99, 0x24, 0x65, 0xea, 0x41, 0xfd, 0x6a, 0xf7, 0xda, 0x99, 0x62, 0x49, 0x94, 0xb4, 0x16,
	0x27, 0x33, 0x5e, 0x85, 0xb9, 0x11, 0xee, 0x23, 0xec, 0x7c, 0xf7, 0xda, 0x72, 0xb1, 0x00, 0xed,
	0x33, 0x8b, 0xd3, 0x19, 0xcf, 0x43, 0x7d, 0x6c, 0x4f, 0x70, 0x2c, 0xdd, 0x6b, 0x4b, 0x65, 0xf5,
	0x4f, 0x2c, 0x46, 0x61, 0xbc, 0x04, 0x4d, 0x9c, 0x09, 0xdc, 0x1a, 0xa5, 0x5d, 0xc1, 0x29, 0xb7,
	0x88, 0xca, 0x5c, 0x87, 0xc1, 0xed, 0x74, 0xf3, 0xe0, 0x54, 0x9c, 0x87, 0xce, 0x28, 0x0c, 0xf6,
	0xbc, 0x7d, 0x36, 0xb7, 0xa4, 0xc4, 0xb4, 0x09, 0x20, 0xef, 0x9b, 0x5a, 0x4e, 0x3e, 0xcc, 0x53,
	0x2d, 0xef, 0x3d, 0x0a, 0xdc, 0x48, 0x54, 0x93, 0x2d, 0x9f, 0x96, 0x5b, 0xbe, 0x4b, 0xd0, 0xe5,
	0x48, 0x5c, 0xf6, 0x1a, 0xed, 0x62, 0x02, 0x3d, 0x60, 0x8b, 0x9f, 0x11, 0x1c, 0xb8, 0xb6, 0xc3,
	0x79, 0x88, 0x13, 0xdc, 0x73, 0x6d, 0x95, 0x01, 0x1a, 0x2a, 0x03, 0x5c, 0x00, 0x20, 0x14, 0xd6,
	0x4d, 0x12, 0xa2, 0x83, 0x10, 0xac, 0xfa, 0x2a, 0xe8, 0x84, 0x8e, 0x0f, 0xc2, 0x28, 0x21, 0x22,
	0x3a, 0x57, 0x06, 0x08, 0xdf, 0x66, 0x60, 0xa4, 0x4c, 0x2b, 0xf2, 0x46, 0x61, 0xc0, 0x25, 0x05,
	0x55, 0xb4, 0x31, 0x0a, 0x03, 0x86, 0x7e, 0xe8, 0x05, 0xfb, 0x4e, 0x38, 0xce, 0xb6, 0x78, 0x87,
	0x43, 0x88, 0x45, 0xf7, 0xc2, 0x68, 0xe4, 0x66, 0x5b, 0xbb, 0x85, 0xdf, 0x1b, 0x78, 0x36, 0x04,
	0x93, 0xd1, 0x30, 0x45, 0xf7, 0x70, 0x00, 0x10, 0x4c, 0x46, 0x77, 0x38, 0xc5, 0x15, 0x18, 0x64,
	0x14, 0xd8, 0x45, 0xda, 0xd4, 0x3d, 0x41, 0x83, 0x1d, 0x7c, 0x05, 0x16, 0x33, 0x2a, 0x69, 0x38,
	0xb4, 0xb3, 0x17, 0x04, 0x6d, 0x36, 0x22, 0xa5, 0xda, 0x3d, 0xdf, 0xde, 0xe7, 0xa7, 0x49, 0x5a,
	0xed, 0x1d, 0xdf, 0xde, 0x67, 0x4b, 0xe7, 0x44, 0xf6, 0xa3, 0xa1, 0xef, 0x05, 0x2e, 0x9e, 0x24,
	0x6d, 0xab, 0xcd, 0x00, 0xf7, 0xbd, 0xc0, 0x35, 0x7f, 0x4e, 0x13, 0x6b, 0x8d, 0x2c, 0x8d, 0x6b,
	0x7d, 0x09, 0xba, 0xc8, 0xd8, 0x43, 0x59, 0x75, 0x06, 0x04, 0x6d, 0xa0, 0xfe, 0x7c, 0x1e, 0x3a,
	0x91, 0x9b, 0x4c, 0xa3, 0x60, 0x68, 0x4f, 0x38, 0xeb, 0xb4, 0x09, 0xb0, 0x3a, 0x31, 0xae, 0xc1,
	0xd2, 0x43, 0x8f, 0xed, 0x58, 0x3b, 0xda, 0xb5, 0x23, 0xcf, 0x0e, 0xe2, 0xe1, 0x28, 0x9c, 0x06,
	0x09, 0xae, 0x7a, 0xdf, 0x3a, 0xc5, 0x90, 0x6b, 0x29, 0x6e, 0x9d, 0xa1, 0xb2, 0x16, 0xe9, 0xe4,
	0x6d, 0xe0, 0xc9, 0x4b, 0x2d, 0x6e, 0xe3, 0xf1, 0x6b, 0x42, 0x7f, 0xe2, 0x8d, 0x1e, 0x0e, 0xdd,
	0xc0, 0x19, 0x26, 0x1e, 0xe7, 0x83, 0xba, 0xd5, 0x65, 0xc0, 0xdb, 0x81, 0xb3, 0xe3, 0x8d, 0x5d,
	0xf3, 0x57, 0x34, 0xd0, 0x69, 0x28, 0xdb, 0xde, 0x78, 0xe2, 0x13, 0xfb, 0xdf, 0x54, 0x0f, 0x18,
	0x36, 0x96, 0xc1, 0xb5, 0xc5, 0x6c, 0x17, 0x65, 0xbb, 0x45, 0x39, 0x76, 0x94, 0x43, 0xab, 0x96,
	0x3b, 0xb4, 0x94, 0x2d, 0x55, 0xaf, 0xda, 0x52, 0x0d, 0xf9, 0x28, 0x52, 0xb6, 0x4f, 0x73, 0x86,
	0xf4, 0x9b, 0x53, 0x98, 0xdf, 0xb4, 0xa0, 0xbf, 0x9d, 0xd8, 0x89, 0xbb, 0x65, 0x27, 0xb4, 0x36,
	0x67, 0xa0, 0x35, 0xb1, 0xe3, 0x38, 0xdb, 0x85, 0x73, 0xec, 0x13, 0x0f, 0xe4, 0xe6, 0xc4, 0x4e,
	0x52, 0x99, 0x65, 0x64, 0x43, 0x3c, 0x74, 0x47, 0x49, 0x18, 0x5d, 0x73, 0x2c, 0x22, 0x30, 0xbf,
	0x1d, 0x06, 0x4a, 0x9d, 0x31, 0x13, 0x32, 0x4c, 0x11, 0x8f, 0x97, 0xb5, 0x82, 0xbc, 0x93, 0x09,
	0x2d, 0xa2, 0x32, 0xef, 0x41, 0x3b, 0xed, 0xcf, 0xdb, 0xa0, 0x8f, 0xa6, 0xd1, 0x50, 0xec, 0x1c,
	0xd6, 0xc2, 0x8c, 0x1e, 0x0c, 0x46, 0xd3, 0xe8, 0x5d, 0x22, 0x65, 0x35, 0x98, 0x77, 0xa1, 0xb3,
	0xc3, 0x94, 0x2e, 0xac, 0xea, 0x2c, 0xb4, 0x51, 0x03, 0xcb, 0x04, 0x55, 0x0b, 0xbf, 0x49, 0xc0,
	0x10, 0x6a, 0xea, 0x05, 0x89, 0xb8, 0xb5, 0x01, 0x82, 0xde, 0x67, 0x10, 0xf3, 0x37, 0x34, 0x18,
	0xa0, 0x20, 0xcc, 0xb8, 0xf8, 0x2a, 0xe8, 0x71, 0x62, 0x47, 0xc9, 0x90, 0x38, 0x0b, 0xb9, 0x46,
	0x43, 0xae, 0x19, 0x20, 0x1c, 0x29, 0x19, 0xe3, 0xb0, 0x6d, 0xc4, 0xf8, 0x4a, 0xa2, 0xab, 0x21,
	0x5d, 0xcf, 0x0d, 0x9c, 0x8c, 0xea, 0x5a, 0x7a, 0x69, 0xac, 0x23, 0x13, 0x9d, 0xcb, 0xc6, 0x97,
	0xb5, 0xbc, 0x8d, 0x14, 0xe2, 0x42, 0x69, 0xbc, 0x02, 0x1d, 0xea, 0xc3, 0x24, 0x8c, 0xb9, 0xb0,
	0x2f, 0x9b, 0x96, 0x36, 0x12, 0x6d, 0x85, 0x31, 0x0e, 0xd4, 0x8e, 0xf6, 0xdd, 0x24, 0xd3, 0x87,
	0xd8, 0x40, 0x11, 0x84, 0x47, 0x9d, 0x0b, 0xf3, 0x59, 0x6b, 0xf7, 0xbd, 0xb1, 0x97, 0xb0, 0x81,
	0xd2, 0xe4, 0xa0, 0x36, 0xe0, 0x33, 0x18, 0x9f, 0xbf, 0x01, 0xc2, 0x59, 0xb9, 0x1c, 0x65, 0x64,
	0x07, 0x0f, 0x39, 0x65, 0x4d, 0xa2, 0xb4, 0xec, 0xe0, 0x21, 0x52, 0x9a, 0x3f, 0x52, 0x97, 0xe7,
	0x73, 0x23, 0xd8, 0x0b, 0xd5, 0x2d, 0xa1, 0xe5, 0xb6, 0xc4, 0x4d, 0xe8, 0xec, 0xda, 0xb1, 0x3b,
	0xc4, 0x1b, 0x5f, 0x2d, 0x7f, 0x08, 0xaa, 0x2b, 0x63, 0xb5, 0x19, 0x29, 0xae, 0xd1, 0x3b, 0x30,
	0x88, 0x5c, 0x37, 0xe0, 0x92, 0x33, 0xd8, 0x0b, 0xf9, 0x01, 0x2a, 0x71, 0xa0, 0x25, 0xf0, 0xac,
	0x13, 0x56, 0x3f, 0x92, 0x3f, 0x8d, 0x57, 0xa1, 0x35, 0x0a, 0xc7, 0x63, 0x3b, 0x70, 0xf8, 0xec,
	0x9e, 0xce, 0x0a, 0x62, 0x7b, 0xeb, 0x84, 0xb5, 0x04, 0x99, 0xf1, 0x66, 0x3a, 0xc1, 0xd8, 0xd5,
	0x66, 0xbe, 0xab, 0x24, 0x0f, 0xd6, 0x78, 0x07, 0xc5, 0xd4, 0x63, 0x67, 0x5f, 0x80, 0x16, 0x63,
	0x75, 0xb6, 0x94, 0x73, 0x95, 0x4b, 0x39, 0x37, 0x9a, 0x46, 0x6c, 0x21, 0x2f, 0x00, 0x8c, 0xc3,
	0x43, 0x97, 0x0b, 0xb4, 0x16, 0xf2, 0x53, 0x87, 0x41, 0x48, 0x9e, 0xbd, 0x02, 0xf8, 0x41, 0x9d,
	0x68, 0xe7, 0x6b, 0xdb, 0x0c, 0x0f, 0xa9, 0xf9, 0xf6, 0x98, 0xff, 0x67, 0x7e, 0x09, 0x16, 0xb3,
	0x59, 0x5c, 0xc5, 0x9b, 0xce, 0xf1, 0xab, 0xf2, 0x36, 0x80, 0xed, 0xdb, 0xd1, 0x58, 0x2c, 0x0b,
	0xdb, 0x96, 0x17, 0xca, 0x96, 0x65, 0x95, 0x51, 0x61, 0x8b, 0x1d, 0x5b, 0xfc, 0x6b, 0xfe, 0xd9,
	0x1a, 0xf4, 0x48, 0x8b, 0xe7, 0x97, 0x84, 0x01, 0xd4, 0xd2, 0x46, 0x6a, 0x9e, 0x63, 0xdc, 0x80,
	0x8e, 0x1d, 0x8d, 0x8f, 0xa8, 0xf6, 0x8b, 0xf9, 0x85, 0xa3, 0x8a, 0xa3, 0xf1, 0x11, 0x8d, 0xc4,
	0xe6, 0xff, 0xa1, 0x44, 0xde, 0xdb, 0x73, 0x47, 0x7c, 0x05, 0xae, 0x72, 0xf3, 0x40, 0xb6, 0x02,
	0x88, 0xa4, 0xd9, 0x77, 0xd3, 0xff, 0x8d, 0x35, 0xd0, 0x51, 0x99, 0x27, 0x05, 0x8a, 0xca, 0x5e,
	0xcb, 0xaf, 0xde, 0xa6, 0xed, 0x05, 0xd4, 0x59, 0x2c, 0x3f, 0x18, 0x2b, 0xdf, 0xc6, 0x2a, 0xe8,
	0x8f, 0xec, 0x84, 0x6d, 0xf2, 0xf0, 0x91, 0x1b, 0x51, 0x1d, 0xd7, 0x67, 0xf7, 0x7b, 0x80, 0x05,
	0x76, 0x18, 0x3d, 0x4e, 0xca, 0xef, 0x69, 0x30, 0xc8, 0x4e, 0xaf, 0x4d, 0x37, 0xb1, 0x0b, 0xd3,
	0xf2, 0x22, 0xb4, 0xc7, 0xf6, 0x84, 0x6a, 0x5f, 0xc4, 0xda, 0x17, 0xe4, 0xda, 0x51, 0xd8, 0x59,
	0xad, 0x31, 0xfd, 0x63, 0xac, 0xc2, 0xbc, 0x74, 0x52, 0x62, 0xa1, 0xa5, 0xfc, 0xb0, 0xb2, 0x06,
	0xa9, 0x4f, 0xbb, 0xca, 0x77, 0x7e, 0x46, 0x4f, 0x9f, 0x70, 0x46, 0x95, 0xe5, 0x3b, 0x73, 0xc2,
	0xe5, 0x33, 0xff, 0x8d, 0x06, 0xf3, 0xeb, 0xa1, 0xef, 0xbb, 0xa3, 0xc4, 0x72, 0xe9, 0xea, 0xc1,
	0x98, 0x7d, 0x44, 0xa0, 0x4c, 0x76, 0x77, 0x38, 0x04, 0xb5, 0x9f, 0x3a, 0xdb, 0x34, 0xb5, 0xca,
	0x4d, 0xc3, 0xd0, 0x8c, 0x2a, 0x72, 0x63, 0x2e, 0x00, 0x0c, 0x59, 0x00, 0x50, 0x2b, 0x16, 0x43,
	0x1b, 0x4f, 0x43, 0x4f, 0x34, 0x85, 0x92, 0x9a, 0x54, 0x85, 0x2e, 0x87, 0xa1, 0xa0, 0xbe, 0x59,
	0xbc, 0x53, 0x9e, 0xe0, 0xc8, 0x37, 0xff, 0xae, 0x06, 0x3d, 0xd1, 0x16, 0xce, 0xcf, 0xe7, 0x40,
	0x54, 0x3b, 0x64, 0x1d, 0xa3, 0xed, 0x73, 0x36, 0xab, 0x27, 0x37, 0x0b, 0x96, 0x98, 0x03, 0xcb,
	0x8d, 0x8d, 0xd7, 0x00, 0x76, 0xed, 0x84, 0x31, 0x2a, 0x8d, 0xa9, 0x5e, 0x31, 0xa6, 0x0e, 0x51,
	0xb1, 0x22, 0xaf, 0x43, 0x7f, 0x14, 0x06, 0x71, 0x12, 0x4d, 0x79, 0x83, 0x8d, 0xca, 0x52, 0xbd,
	0x94, 0xd0, 0x72, 0x63, 0xf3, 0x47, 0x6a, 0xd0, 0xe5, 0x7d, 0xc1, 0x7e, 0x5f, 0x83, 0xa5, 0xc8,
	0xc5, 0xbd, 0x12, 0xf1, 0x02, 0x5c, 0x01, 0x23, 0x8d, 0xe4, 0x14, 0x21, 0x45, 0x65, 0xa4, 0x80,
	0x3d, 0x07, 0xf3, 0x74, 0xfc, 0x65, 0xc2, 0x84, 0xb4, 0x94, 0x3e, 0x82, 0xd3, 0x8b, 0xf6, 0x05,
	0x76, 0xb1, 0x62, 0x07, 0x1a, 0x4e, 0xfe, 0x1c, 0x89, 0x35, 0x84, 0xe0, 0xd4, 0x9f, 0x85, 0x76,
	0xaa, 0xa1, 0x91, 0xcc, 0x6b, 0xb9, 0xa4, 0x9d, 0x19, 0xcf, 0xc3, 0xbc, 0xed, 0x47, 0xae, 0xed,
	0x1c, 0x0d, 0xf9, 0x3c, 0xf1, 0xfb, 0xf8, 0x80, 0x83, 0xf9, 0x10, 0x32, 0xfb, 0x0b, 0x5d, 0xc5,
	0xb9, 0xfd, 0x65, 0x05, 0x16, 0xc6, 0xf6, 0x63, 0x51, 0x94, 0x0f, 0x88, 0x94, 0xf4, 0xf9, 0xb1,
	0xfd, 0x98, 0x17, 0xc6, 0xc1, 0x98, 0x7f, 0x43, 0x03, 0x03, 0x65, 0xdb, 0x8e, 0xcb, 0xf4, 0xc0,
	0x0f, 0xed, 0x48, 0xe8, 0x17, 0xa9, 0x9a, 0xa5, 0xa9, 0x77, 0x8c, 0x45, 0x68, 0x4e, 0x42, 0x2f,
	0x10, 0xa7, 0x21, 0x7d, 0xe4, 0x6e, 0x1e, 0xf5, 0x93, 0xdc, 0x3c, 0x1a, 0x27, 0xb8, 0x79, 0x34,
	0x73, 0x37, 0x0f, 0xf3, 0x8b, 0xb0, 0x44, 0x72, 0x36, 0xeb, 0xef, 0xda, 0xf1, 0x97, 0xae, 0xd2,
	0x3e, 0x9b, 0x3f, 0xa8, 0xf1, 0x83, 0x22, 0x5f, 0xd7, 0x13, 0x8f, 0xfe, 0x0b, 0xe9, 0x9d, 0x0d,
	0x05, 0x04, 0xf1, 0xf0, 0xa5, 0x8c, 0x1b, 0x4b, 0xbb, 0x2c, 0x2e, 0x75, 0x28, 0x2a, 0x7e, 0xb3,
	0x06, 0x40, 0x78, 0xec, 0x41, 0x66, 0x75, 0x6f, 0xca, 0x56, 0xf7, 0x8f, 0xc1, 0x53, 0xe7, 0xa1,
	0xe3, 0xc5, 0x43, 0x7b, 0x94, 0x78, 0x87, 0x64, 0x28, 0x6d, 0x5b, 0x6d, 0x2f, 0x5e, 0xc5, 0x6f,
	0xa6, 0x4a, 0x79, 0xf1, 0x70, 0x64, 0x4f, 0x92, 0x69, 0xc4, 0xb9, 0xa9, 0x6d, 0x81, 0x17, 0xaf,
	0x73, 0x08, 0x2f, 0x4d, 0x1b, 0x10, 0x59, 0x09, 0x4b, 0xaf, 0xe1, 0xb7, 0xf1, 0x16, 0xc0, 0x23,
	0x3b, 0x22, 0x97, 0x43, 0xbc, 0xdc, 0xc5, 0xc1, 0x3f, 0x95, 0x3b, 0x3a, 0x15, 0xf6, 0xb2, 0x3a,
	0x8f, 0xec, 0x08, 0xc1, 0x31, 0xbb, 0x10, 0xb2, 0xc2, 0x69, 0xb7, 0xc9, 0x92, 0xc8, 0x2a, 0xe4,
	0x77, 0x15, 0xc6, 0x3b, 0x28, 0x7b, 0x47, 0xd3, 0x28, 0x72, 0x83, 0x64, 0x18, 0x4c, 0xc7, 0xdc,
	0xa4, 0x38, 0x60, 0xf0, 0x75, 0x02, 0x3f, 0x98, 0x8e, 0x99, 0x72, 0x8a, 0x94, 0x49, 0x98, 0xd8,
	0x3e, 0xd2, 0x71, 0xb3, 0x22, 0x83, 0xee, 0x30, 0xe0, 0x83, 0xe9, 0xd8, 0xfc, 0x99, 0x1a, 0xf4,
	0xf8, 0x54, 0xef, 0xfe, 0xc1, 0x9b, 0xec, 0xab, 0xa0, 0xef, 0x79, 0x51, 0x9c, 0x88, 0x0a, 0x84,
	0xf1, 0xb4, 0x61, 0x0d, 0x10, 0xce, 0x6b, 0xd9, 0x70, 0x8c, 0xcf, 0x2b, 0xcb, 0x32, 0x8f, 0xcb,
	0x72, 0xb1, 0x72, 0x59, 0xd6, 0x8e, 0x5b, 0x18, 0x3d, 0xbf, 0x30, 0xe6, 0xaf, 0x6b, 0xec, 0x72,
	0x13, 0xc7, 0x33, 0x27, 0x31, 0x37, 0xda, 0xb9, 0x8a, 0xd1, 0x56, 0xcc, 0x95, 0x32, 0x15, 0x9d,
	0x13, 0x4c, 0x05, 0x94, 0x4e, 0x85, 0xba, 0x92, 0xdd, 0x59, 0x2b, 0xd9, 0x53, 0x56, 0x92, 0xe9,
	0x30, 0x3d, 0x59, 0x3b, 0x36, 0x5e, 0x86, 0xf6, 0x24, 0x8c, 0xbd, 0xc4, 0x0b, 0x83, 0x19, 0xa7,
	0x74, 0x4a, 0x63, 0x7c, 0x5e, 0xbd, 0xa5, 0xd0, 0x7d, 0xe8, 0xa9, 0x72, 0xd5, 0x7b, 0x07, 0x09,
	0xe5, 0x3b, 0x0c, 0x9b, 0x00, 0x5e, 0x3c, 0xb3, 0x08, 0x13, 0x80, 0x86, 0xe5, 0xc5, 0xc3, 0x2f,
	0x4d, 0xed, 0x28, 0x71, 0x23, 0x9c, 0xf7, 0xa6, 0xd5, 0xf1, 0xe2, 0xef, 0x20, 0x80, 0xb1, 0x0e,
	0x03, 0xae, 0xca, 0x0f, 0xf9, 0xd2, 0x8c, 0x66, 0xb5, 0xce, 0xef, 0x63, 0xfd, 0x91, 0xfc, 0x69,
	0x7e, 0x5d, 0x03, 0x9d, 0xd4, 0xc2, 0xf5, 0xc8, 0xb5, 0x13, 0xb7, 0xa8, 0x0e, 0x69, 0x27, 0xd5,
	0x66, 0xcb, 0x54, 0xca, 0xda, 0x13, 0xa9, 0x94, 0xec, 0x4a, 0x6f, 0x47, 0xae, 0x9d, 0x19, 0x13,
	0xe6, 0xd8, 0xe7, 0x86, 0x63, 0xbc, 0x04, 0x6d, 0x2f, 0xf0, 0x8e, 0xbb, 0x3c, 0xb6, 0x18, 0x0d,
	0xbb, 0x72, 0x5c, 0x04, 0x98, 0x44, 0x61, 0x3c, 0x71, 0x23, 0x2f, 0x39, 0x12, 0x57, 0xc7, 0x0c,
	0x62, 0xfe, 0x05, 0x0d, 0x4e, 0xcb, 0xa3, 0xb6, 0xdc, 0x78, 0xea, 0x27, 0xe2, 0xa0, 0xa9, 0xbe,
	0x45, 0x3c, 0x29, 0x77, 0xbc, 0x22, 0x4f, 0x64, 0x41, 0x9d, 0x2b, 0x51, 0x29, 0xff, 0x8f, 0x06,
	0xf3, 0xb4, 0x68, 0x1f, 0x77, 0x35, 0xa4, 0xfb, 0x60, 0xed, 0x64, 0xf7, 0xc1, 0x4b, 0xd0, 0xdd,
	0x8b, 0xc2, 0xf1, 0x50, 0xb2, 0xdf, 0xb6, 0x2d, 0x60, 0x20, 0x7e, 0xe9, 0x79, 0xc2, 0x45, 0x10,
	0xe4, 0x8e, 0x17, 0xf1, 0xcb, 0x65, 0x25, 0xf9, 0x2d, 0x2f, 0x32, 0xff, 0x94, 0x06, 0x4b, 0xd2,
	0xd0, 0x4f, 0xba, 0x24, 0xca, 0x14, 0xd7, 0x8e, 0x9f, 0xe2, 0xbc, 0x49, 0xaf, 0x9e, 0x37, 0xe9,
	0x99, 0x8f, 0xe0, 0xd4, 0xa6, 0x3d, 0xa1, 0x33, 0xfd, 0xf6, 0xe3, 0xc4, 0x0e, 0xc8, 0x7f, 0xfe,
	0x19, 0x68, 0x8c, 0xbd, 0x78, 0xc4, 0x57, 0x60, 0x49, 0xb9, 0xc7, 0x6c, 0x7a, 0xf1, 0x08, 0x9b,
	0x41, 0x12, 0xe3, 0x26, 0xb4, 0xdc, 0xc7, 0x13, 0x3f, 0x8c, 0x5c, 0xde, 0xa3, 0xf3, 0x79, 0x5d,
	0xe1, 0x36, 0xa1, 0xf1, 0x22, 0x2f, 0x68, 0xcd, 0x4d, 0x38, 0x9d, 0x36, 0xbc, 0x15, 0xb9, 0xf1,
	0xee, 0x51, 0xc2, 0xf7, 0xc5, 0x75, 0xc6, 0xcf, 0x1c, 0x20, 0x4c, 0x53, 0xa7, 0xa4, 0x3a, 0x05,
	0xce, 0x92, 0xc8, 0xcc, 0x9f, 0xaa, 0xb3, 0x09, 0xe5, 0xf5, 0x59, 0xee, 0xbe, 0x17, 0x27, 0x27,
	0xb1, 0x60, 0xbf, 0xa1, 0x2a, 0x3b, 0x25, 0x3b, 0x98, 0x57, 0x99, 0x57, 0x72, 0xf0, 0x2c, 0x60,
	0x0b, 0xae, 0x32, 0x10, 0x03, 0x71, 0x06, 0x7a, 0x0b, 0xba, 0xf2, 0x9d, 0x95, 0x78, 0x48, 0x32,
	0x1e, 0xe5, 0x05, 0x91, 0x05, 0xa3, 0xec, 0xc6, 0xfa, 0x39, 0xb1, 0x6e, 0x64, 0x9f, 0x6b, 0xe6,
	0xef, 0x20, 0xb9, 0x6d, 0xc3, 0x97, 0x94, 0xac, 0x7a, 0xef, 0x40, 0xd7, 0xc5, 0x95, 0xa4, 0x86,
	0xc9, 0x66, 0x71, 0xa1, 0x64, 0x4c, 0xd9, 0x7a, 0x5b, 0xe0, 0x66, 0x6b, 0x7f, 0x17, 0x06, 0xe9,
	0xc4, 0x52, 0x15, 0x2d, 0xac, 0xe2, 0x72, 0x49, 0x15, 0xca, 0xca, 0x59, 0xfd, 0x89, 0xb2, 0x90,
	0x26, 0xf4, 0xbd, 0x78, 0x18, 0xb8, 0x8f, 0xb8, 0xaf, 0x90, 0x9f, 0x88, 0x5d, 0x2f, 0x7e, 0xe0,
	0x3e, 0xa2, 0xf2, 0xe6, 0xef, 0x68, 0x70, 0xbe, 0xb0, 0x6e, 0xea, 0x76, 0xa8, 0x76, 0x1f, 0x3d,
	0x00, 0x83, 0x4f, 0x71, 0x84, 0x25, 0x64, 0xd1, 0x73, 0xb9, 0x7c, 0xa6, 0xb3, 0xaa, 0x2d, 0x9d,
	0xca, 0x4a, 0x8d, 0x6d, 0x82, 0x41, 0xb3, 0x2e, 0x55, 0x27, 0xee, 0x63, 0x97, 0x4a, 0x27, 0x5f,
	0xae, 0x0e, 0x8b, 0x66, 0x80, 0xd8, 0x58, 0x82, 0x39, 0x1a, 0x3f, 0x4a, 0x84, 0xb6, 0xd5, 0xc4,
	0x81, 0x9b, 0xff, 0x56, 0x83, 0x0b, 0xe9, 0x90, 0xdf, 0x0f, 0x8e, 0x1b, 0xb4, 0x56, 0xb4, 0x1a,
	0xb3, 0x13, 0xd0, 0x15, 0x13, 0xd2, 0xb7, 0x5a, 0xf8, 0xbd, 0xe1, 0x18, 0x03, 0xa8, 0xd9, 0x13,
	0xbe, 0xc9, 0x6b, 0xf6, 0xc4, 0x78, 0x1e, 0x74, 0xdf, 0x8e, 0x93, 0xa1, 0x3d, 0x19, 0xda, 0x8e,
	0x23, 0x5f, 0x9c, 0xfb, 0x0c, 0xbe, 0x3a, 0x59, 0x75, 0x48, 0xc7, 0x2b, 0x2e, 0x79, 0xf3, 0x23,
	0x2d, 0xb9, 0xf9, 0x35, 0x4d, 0x92, 0x27, 0xef, 0x4f, 0x1c, 0x21, 0xd6, 0x89, 0x15, 0x22, 0x37,
	0x16, 0x06, 0x38, 0x4d, 0xb0, 0x82, 0xc5, 0x60, 0x48, 0xf3, 0xd1, 0xf7, 0xe2, 0x5b, 0xd0, 0xdf,
	0xb7, 0xa3, 0xc8, 0x8b, 0xc3, 0x40, 0x66, 0x81, 0xd3, 0xaa, 0x68, 0xbc, 0xe7, 0x46, 0x21, 0x16,
	0xed, 0x09, 0x62, 0xd1, 0x2c, 0x2d, 0xfa, 0x81, 0x1b, 0x85, 0x62, 0xb5, 0xf3, 0x67, 0x4e, 0x5a,
	0x96, 0x36, 0x1a, 0xfb, 0x8c, 0xcd, 0x0d, 0xd9, 0x24, 0x84, 0x75, 0x19, 0xd0, 0x48, 0xed, 0xc8,
	0x7d, 0x0b, 0xff, 0x37, 0x9e, 0x81, 0xbe, 0x64, 0xe8, 0x49, 0x0f, 0xfb, 0x5e, 0x06, 0xdc, 0x70,
	0xcc, 0xcf, 0x00, 0x6c, 0x4f, 0xc7, 0x63, 0xde, 0xa5, 0xf3, 0xd0, 0x89, 0xf1, 0x4b, 0xf2, 0xdd,
	0x11, 0x60, 0xc3, 0x31, 0x9f, 0x81, 0xf6, 0x4e, 0xc4, 0x8d, 0x48, 0x67, 0xa0, 0x95, 0x44, 0xb6,
	0x64, 0x39, 0x9f, 0x63, 0x9f, 0x1b, 0x8e, 0xf9, 0x9f, 0x1a, 0xd0, 0x16, 0xc7, 0x01, 0xbb, 0xe7,
	0xb1, 0xb1, 0xbd, 0x26, 0x82, 0xa1, 0xf0, 0x43, 0x40, 0xaf, 0x89, 0xdb, 0x1f, 0x7e, 0x18, 0x37,
	0xb8, 0x58, 0x43, 0xbb, 0xb0, 0xb0, 0x60, 0x48, 0xd2, 0x37, 0x35, 0xdb, 0x93, 0xac, 0xc3, 0x4f,
	0x54, 0x8c, 0xb1, 0xd2, 0xa1, 0xec, 0x02, 0x01, 0x04, 0xdd, 0x47, 0x3f, 0x08, 0x27, 0xb8, 0xc6,
	0x09, 0xe6, 0x32, 0x82, 0x6b, 0x44, 0xf0, 0x39, 0x18, 0x88, 0x3b, 0x11, 0x6f, 0xba, 0x5d, 0xdd,
	0x74, 0x9f, 0x93, 0xf2, 0xd6, 0x57, 0xc1, 0x88, 0x7d, 0x6f, 0xff, 0x20, 0x19, 0x3e, 0x0a, 0x43,
	0x47, 0x94, 0xef, 0x54, 0x97, 0xd7, 0x89, 0xfc, 0xc3, 0x30, 0x74, 0x78, 0x15, 0x7c, 0x32, 0xae,
	0x73, 0xd3, 0x02, 0x7d, 0x88, 0x5e, 0x5f, 0xe7, 0xbd, 0xee, 0x66, 0xbd, 0xbe, 0x4e, 0xbd, 0xe6,
	0xc5, 0x6e, 0x70, 0x7f, 0x3e, 0x7d, 0x88, 0x62, 0x37, 0x78, 0xb1, 0x7e, 0x56, 0xec, 0x86, 0x52,
	0xec, 0x26, 0xbf, 0xd2, 0xd1, 0x87, 0x28, 0x76, 0x93, 0x17, 0x9b, 0xcf, 0x8a, 0xdd, 0xa4, 0x62,
	0xa7, 0x61, 0x2e, 0xb2, 0x1d, 0x6f, 0x1a, 0xa3, 0xa9, 0xaf, 0x6f, 0xf1, 0x2f, 0x74, 0xf4, 0xb9,
	0x13, 0x3f, 0x44, 0x95, 0xe1, 0x0c, 0xb1, 0x0b, 0x01, 0xb8, 0xb8, 0xf0, 0xdc, 0x7d, 0x14, 0x17,
	0xcb, 0x5c, 0x5c, 0xb0, 0x6f, 0xf2, 0xae, 0x10, 0x8a, 0x1a, 0x3c, 0x4b, 0x0d, 0x22, 0xe8, 0xbe,
	0x08, 0xa4, 0x60, 0xd7, 0x99, 0x69, 0x12, 0x0e, 0xf7, 0x3c, 0xdf, 0x5f, 0x3e, 0x27, 0x2e, 0x3c,
	0xab, 0xd3, 0x24, 0xbc, 0xe3, 0xf9, 0xbe, 0xf9, 0xb3, 0x0d, 0xe8, 0x2b, 0x4a, 0x99, 0x71, 0x55,
	0x66, 0x36, 0x45, 0x3d, 0xc1, 0x38, 0x07, 0xa6, 0x03, 0x70, 0x06, 0xbc, 0x2a, 0x33, 0xe0, 0x0c,
	0xca, 0x8f, 0xca, 0x94, 0x45, 0x96, 0x6a, 0x7c, 0x4c, 0x96, 0x6a, 0x3e, 0x09, 0x4b, 0xdd, 0x80,
	0xae, 0xe3, 0xda, 0x69, 0xd9, 0xb9, 0x19, 0x9d, 0x66, 0x74, 0xbc, 0xd4, 0x55, 0xc1, 0x88, 0xad,
	0xd9, 0x93, 0x72, 0x5d, 0x50, 0xde, 0x28, 0xba, 0x11, 0x54, 0xca, 0x1b, 0x82, 0xf2, 0x26, 0x5e,
	0x3a, 0x67, 0x50, 0xde, 0x54, 0x39, 0x09, 0x66, 0x70, 0x52, 0x77, 0x26, 0x27, 0xf5, 0x3e, 0x02,
	0x27, 0xfd, 0x53, 0x0d, 0x16, 0x18, 0x13, 0xad, 0x87, 0xe3, 0x49, 0x18, 0x88, 0x58, 0xcc, 0x6f,
	0xda, 0xe5, 0xec, 0x23, 0xb1, 0x9c, 0xf9, 0x1f, 0x6b, 0xb0, 0x90, 0x3a, 0xae, 0xd2, 0x2d, 0xf1,
	0x34, 0xf4, 0xd8, 0x81, 0x73, 0xe8, 0x3a, 0xb2, 0x37, 0xb2, 0xcb, 0x61, 0x78, 0x00, 0x3f, 0x07,
	0x0d, 0xd6, 0xfb, 0x19, 0x3a, 0x3d, 0xe2, 0x55, 0xcd, 0xa0, 0x3e, 0x3b, 0x1c, 0xa3, 0x51, 0x08,
	0xc7, 0x30, 0xa0, 0x81, 0x71, 0x18, 0x14, 0x4c, 0x81, 0xff, 0x0b, 0x23, 0xfd, 0xdc, 0x6c, 0x23,
	0xbd, 0x72, 0x2b, 0x69, 0xe5, 0x6e, 0x25, 0xa9, 0xe5, 0xb6, 0x2d, 0x47, 0xce, 0x29, 0xae, 0xae,
	0xce, 0xf1, 0xae, 0x2e, 0xe3, 0x2a, 0x70, 0x8d, 0x4c, 0x32, 0x46, 0x73, 0x13, 0x08, 0xc1, 0x85,
	0x35, 0xda, 0xfc, 0x0d, 0x0d, 0xfa, 0x8a, 0x7f, 0xf0, 0x38, 0x27, 0xa5, 0xe2, 0x18, 0xa8, 0x9d,
	0x30, 0x16, 0xe0, 0x2a, 0xe8, 0xbe, 0x6b, 0x3b, 0x6e, 0x24, 0xf5, 0x87, 0x87, 0xba, 0x11, 0x3c,
	0xb5, 0x8e, 0xbf, 0x05, 0x90, 0xfa, 0x27, 0x85, 0x94, 0x39, 0x5f, 0xe2, 0xca, 0x4c, 0x17, 0x53,
	0x22, 0x37, 0xce, 0x41, 0x7b, 0x64, 0x4f, 0xec, 0x51, 0x76, 0x79, 0x4f, 0xbf, 0xcd, 0x7b, 0xb0,
	0x94, 0x16, 0xfe, 0x62, 0xe8, 0x05, 0x8c, 0x57, 0x8e, 0x1f, 0xaf, 0xac, 0x85, 0xd4, 0x49, 0x0b,
	0x31, 0xef, 0xc1, 0xfc, 0xad, 0xb5, 0xb4, 0x2e, 0xee, 0x3e, 0x6a, 0x7a, 0xc1, 0x5e, 0x28, 0xae,
	0x58, 0x97, 0x4a, 0x3a, 0x2c, 0xb7, 0x69, 0x11, 0xb5, 0xf9, 0x1f, 0x34, 0xe8, 0xc9, 0xea, 0xd4,
	0xa7, 0x22, 0xf1, 0x53, 0x31, 0x58, 0x3f, 0xb1, 0x18, 0x6c, 0x9c, 0x58, 0x0c, 0x36, 0x8f, 0x11,
	0x83, 0xe6, 0x2e, 0xf4, 0xee, 0xca, 0x2a, 0xe2, 0xa7, 0x30, 0x42, 0xd3, 0xe5, 0x07, 0x67, 0x3a,
	0x8d, 0xc7, 0x46, 0xdf, 0x5c, 0x87, 0x0e, 0x86, 0x0f, 0x4a, 0xe2, 0xac, 0x4a, 0xc3, 0x6d, 0x1f,
	0xf0, 0xff, 0xcc, 0x37, 0xc1, 0x78, 0x57, 0x09, 0xbc, 0xc1, 0xb6, 0x54, 0x9d, 0xd4, 0x3f, 0xc4,
	0xc9, 0x6b, 0xca, 0x3a, 0xe9, 0xfd, 0x43, 0xd3, 0x07, 0xc8, 0x3c, 0x88, 0xc6, 0x8b, 0x30, 0x47,
	0x3e, 0x44, 0xce, 0x2e, 0x05, 0x3f, 0x23, 0x0e, 0x8e, 0xd3, 0x18, 0xaf, 0xd2, 0x25, 0x65, 0x1a,
	0xbb, 0xc2, 0xff, 0xb7, 0xa8, 0x06, 0x97, 0x4c, 0xc9, 0xa5, 0x99, 0x52, 0x99, 0x3f, 0x95, 0xda,
	0xe6, 0x6e, 0x3f, 0x4e, 0x5c, 0x7e, 0x15, 0xc5, 0xd8, 0x2c, 0xdf, 0xe7, 0x6e, 0x1f, 0xe2, 0xf3,
	0x0e, 0x83, 0x90, 0xf7, 0xea, 0x69, 0xe8, 0x71, 0x6f, 0xdb, 0x84, 0x09, 0x6e, 0x7e, 0x3f, 0xec,
	0x12, 0x6c, 0x8b, 0x81, 0x8c, 0xe7, 0x60, 0xde, 0x0b, 0x86, 0x13, 0xd7, 0xc6, 0xd0, 0x2a, 0xcf,
	0xf5, 0x1d, 0x7e, 0x55, 0xef, 0x7b, 0xc1, 0x16, 0x83, 0x6e, 0x23, 0x90, 0x69, 0xd2, 0x23, 0x7b,
	0x3c, 0x11, 0x96, 0xc9, 0xbe, 0x35, 0xc7, 0x3e, 0x37, 0x9c, 0x63, 0xad, 0x6b, 0x9f, 0x05, 0x9d,
	0xdc, 0xf2, 0x3b, 0x59, 0xc4, 0x80, 0x09, 0xfd, 0xc4, 0x96, 0xc5, 0x06, 0xf5, 0xbc, 0x9b, 0xd8,
	0xa9, 0xcc, 0x30, 0xdf, 0x87, 0x45, 0x2a, 0xb7, 0x9d, 0x60, 0x2c, 0x93, 0xcb, 0x0f, 0x8b, 0x13,
	0x94, 0x65, 0x27, 0xb1, 0x17, 0x0f, 0x63, 0x56, 0x10, 0xc7, 0xdc, 0xb6, 0x5a, 0x5e, 0x8c, 0xf5,
	0x98, 0x2f, 0x43, 0x7f, 0x53, 0x44, 0x1b, 0x88, 0x29, 0x94, 0x02, 0x12, 0xb4, 0x5c, 0x40, 0x02,
	0x3b, 0x76, 0xbb, 0xdb, 0x6c, 0x46, 0x69, 0x51, 0x84, 0x10, 0x76, 0x8b, 0x3d, 0x18, 0x10, 0xfc,
	0xb6, 0x14, 0x0d, 0x45, 0x8b, 0x27, 0x2e, 0xa2, 0x4d, 0xb1, 0x9a, 0x1b, 0x8e, 0xf1, 0x22, 0x18,
	0x1c, 0xe9, 0x3e, 0x9e, 0x78, 0x91, 0x4b, 0x07, 0x1f, 0x49, 0x4f, 0x9d, 0x30, 0xb7, 0x11, 0x81,
	0xa7, 0xdf, 0x32, 0xb4, 0xc2, 0x43, 0x37, 0xf2, 0x79, 0x64, 0x64, 0xdf, 0x12, 0x9f, 0xc6, 0x15,
	0xe0, 0xcd, 0xa6, 0x91, 0xb3, 0xb4, 0x02, 0x3d, 0x82, 0x52, 0xe8, 0xac, 0x79, 0x17, 0xe6, 0xa5,
	0x31, 0xf0, 0xf3, 0x1b, 0x78, 0x07, 0x62, 0x57, 0xb0, 0xac, 0x1c, 0x6f, 0x99, 0x91, 0x5b, 0x7c,
	0x18, 0xdb, 0x6e, 0x62, 0xde, 0x80, 0xf9, 0xcd, 0xa9, 0x9f, 0x78, 0xdb, 0x49, 0xe4, 0x3d, 0x74,
	0xc5, 0xe1, 0x3d, 0x66, 0xa0, 0x61, 0x8c, 0x30, 0x9c, 0x8c, 0xa6, 0xd5, 0x1d, 0x67, 0x64, 0xe6,
	0x2b, 0xa0, 0x93, 0x15, 0x5f, 0x6a, 0x5f, 0x31, 0xf6, 0xf3, 0x2b, 0x9c, 0x30, 0xf6, 0x9b, 0xef,
	0xc2, 0xfc, 0xa6, 0x3d, 0x59, 0x9b, 0x7a, 0xbe, 0xe3, 0x05, 0xfb, 0x28, 0xd0, 0xb3, 0x60, 0x82,
	0x3e, 0x06, 0x13, 0x30, 0x19, 0x2e, 0x0e, 0x2b, 0x76, 0x93, 0x64, 0x07, 0x52, 0x1a, 0x62, 0x56,
	0x97, 0xa3, 0x36, 0xbf, 0xa8, 0x54, 0x86, 0x8d, 0xbf, 0x0e, 0x9d, 0x5d, 0xfe, 0x2d, 0xa4, 0xbb,
	0x62, 0x3b, 0x52, 0x9a, 0xb6, 0x32, 0x5a, 0xf3, 0x07, 0x34, 0x68, 0xf1, 0x48, 0x05, 0xe3, 0x1c,
	0x8e, 0xc0, 0xc3, 0x84, 0x1d, 0x7e, 0x5d, 0x6f, 0x79, 0xf1, 0x46, 0xb0, 0x69, 0x4f, 0x9e, 0xd8,
	0x34, 0xfc, 0x2a, 0x74, 0x1c, 0x2f, 0x72, 0x47, 0x58, 0xa0, 0x5e, 0x59, 0x20, 0x23, 0x32, 0xff,
	0xb4, 0x06, 0x6d, 0xa1, 0x23, 0xa0, 0x68, 0x44, 0x1e, 0x26, 0xcb, 0xbf, 0x10, 0x8d, 0x8c, 0x89,
	0x89, 0x6b, 0xe5, 0xfe, 0xd4, 0x4f, 0x66, 0xaa, 0x9e, 0xd8, 0xc9, 0xc1, 0x70, 0xcf, 0x4b, 0x23,
	0x88, 0xa4, 0x02, 0x69, 0xdc, 0x5b, 0x9b, 0x11, 0xdd, 0xf1, 0x02, 0xc7, 0x7c, 0x03, 0x7a, 0xac,
	0x37, 0x69, 0xf8, 0xdb, 0xc9, 0xa3, 0xee, 0xbe, 0xd2, 0x80, 0x85, 0xd4, 0x72, 0x21, 0xe2, 0x8b,
	0x8e, 0xf5, 0xf0, 0x16, 0xa3, 0x73, 0xd3, 0xe0, 0xea, 0xba, 0x14, 0x5c, 0x2d, 0x14, 0xba, 0x86,
	0xa4, 0xd0, 0xa9, 0x32, 0xb3, 0x79, 0x9c, 0xcc, 0x9c, 0x2b, 0xca, 0x4c, 0x49, 0x16, 0xb6, 0x14,
	0x59, 0xf8, 0x22, 0x18, 0xf9, 0x10, 0x4f, 0xff, 0x90, 0xbb, 0xf3, 0x75, 0x35, 0xbe, 0xf3, 0xfe,
	0xa1, 0xe2, 0x79, 0x06, 0xd5, 0xf3, 0xfc, 0x0e, 0x90, 0xab, 0x7c, 0x98, 0xae, 0x5a, 0x17, 0x95,
	0xb2, 0x33, 0x39, 0x97, 0xde, 0x16, 0x47, 0x5b, 0xfd, 0x7d, 0xf9, 0x93, 0x1b, 0xba, 0xe6, 0x67,
	0x1a, 0xba, 0xf4, 0x32, 0x43, 0x97, 0x1a, 0xec, 0xbb, 0x38, 0x2b, 0xd8, 0x77, 0x49, 0x0d, 0xf6,
	0x7d, 0x0e, 0xe6, 0xb1, 0x09, 0x3f, 0xdc, 0xf7, 0x02, 0x6a, 0xe1, 0x22, 0x45, 0x4a, 0x30, 0xf0,
	0x7d, 0x06, 0x15, 0x1e, 0x5e, 0x41, 0x17, 0x4e, 0xb9, 0x93, 0xee, 0x12, 0xd7, 0x1a, 0x89, 0x30,
	0x9c, 0x92, 0xa7, 0xee, 0x12, 0x74, 0xc3, 0xe4, 0xc0, 0x8d, 0xf8, 0x42, 0x5c, 0xa6, 0xe8, 0x61,
	0x04, 0xd1, 0x3a, 0x3c, 0x0b, 0x83, 0x2c, 0x3a, 0x7d, 0xe8, 0x39, 0xf1, 0xf2, 0xd3, 0x98, 0x6c,
	0xd5, 0xcf, 0xa0, 0x1b, 0x4e, 0x6c, 0xde, 0x86, 0x81, 0x1a, 0xff, 0xc4, 0x34, 0x05, 0xa6, 0x3e,
	0x0e, 0x1f, 0xd9, 0xbe, 0xcf, 0x75, 0x16, 0x49, 0x53, 0x58, 0xf7, 0x92, 0xa3, 0x0f, 0x6d, 0xdf,
	0x27, 0x16, 0x1f, 0xf1, 0x2f, 0xf3, 0x27, 0x34, 0xe8, 0xc9, 0x28, 0x36, 0x62, 0x72, 0x34, 0xee,
	0x4e, 0xa3, 0x40, 0xbe, 0xb9, 0xf4, 0x11, 0xbc, 0x36, 0x8d, 0x68, 0xc4, 0x26, 0xf4, 0xdd, 0xc0,
	0x91, 0xa8, 0x48, 0xef, 0xec, 0xba, 0x81, 0x93, 0xd2, 0xa4, 0x57, 0x84, 0xba, 0x1c, 0xdc, 0xf1,
	0x22, 0x18, 0x7e, 0x18, 0x27, 0x43, 0x67, 0x1a, 0xd9, 0xbb, 0xbe, 0x1a, 0xae, 0xa2, 0x33, 0xcc,
	0x2d, 0x42, 0x50, 0x78, 0xc7, 0xaf, 0xd7, 0x60, 0x5e, 0x74, 0x70, 0xf5, 0x53, 0xe8, 0x63, 0x79,
	0x6f, 0x9a, 0xe5, 0xbd, 0x31, 0x5e, 0x85, 0xc5, 0xc8, 0x9d, 0xd8, 0x5e, 0x34, 0xf4, 0x82, 0xc4,
	0x8d, 0x0e, 0x6d, 0x5f, 0x76, 0xad, 0x1b, 0x84, 0xdb, 0xe0, 0x28, 0xb1, 0xde, 0x41, 0x98, 0x78,
	0x23, 0x77, 0xc8, 0x24, 0x17, 0xdf, 0x5a, 0x40, 0x20, 0x26, 0x5c, 0xd4, 0x7b, 0x54, 0x3a, 0x49,
	0xaa, 0x02, 0xd2, 0xc9, 0x2b, 0x20, 0xc6, 0x45, 0xe8, 0xb2, 0x75, 0x46, 0xc6, 0xe7, 0x69, 0x4e,
	0x7d, 0xab, 0xc3, 0x40, 0xab, 0x8e, 0x73, 0x6f, 0x62, 0xbc, 0x00, 0x46, 0x86, 0x77, 0x6d, 0x7f,
	0x18, 0xd9, 0x89, 0xcb, 0x2f, 0xf0, 0xf3, 0x82, 0xcc, 0xb5, 0x7d, 0xcb, 0x4e, 0x5c, 0xf3, 0x17,
	0x34, 0xd0, 0x85, 0xea, 0x9b, 0x6a, 0xa6, 0x2f, 0xc1, 0xa9, 0xd8, 0xc5, 0xf0, 0x1b, 0x25, 0xad,
	0x86, 0xc4, 0xb0, 0x4e, 0xa8, 0xcd, 0x2c, 0xb9, 0xe6, 0x35, 0x58, 0xe2, 0xe4, 0xb9, 0x1c, 0x1b,
	0x12, 0x67, 0x06, 0x21, 0xb7, 0xe5, 0x4c, 0x9b, 0xe7, 0x29, 0x9a, 0x58, 0xa9, 0x9e, 0x38, 0xa5,
	0x3f, 0x9a, 0x46, 0x52, 0xdd, 0x2f, 0x80, 0xc1, 0x08, 0x73, 0x15, 0x13, 0xc7, 0xcc, 0x8f, 0xa6,
	0x91, 0x5c, 0xab, 0xf9, 0x43, 0x0d, 0xe8, 0x92, 0xdc, 0xa5, 0x04, 0xb9, 0x7c, 0xc0, 0x5e, 0x4e,
	0xe3, 0xae, 0x95, 0xc5, 0xbb, 0x57, 0xdf, 0xb6, 0x67, 0xa4, 0x2e, 0x3c, 0x59, 0x24, 0xe0, 0x9b,
	0xd0, 0x13, 0xae, 0x6d, 0x29, 0xa2, 0xb2, 0xca, 0x83, 0xd9, 0xe5, 0xb4, 0x45, 0xf3, 0xc8, 0xd5,
	0x8f, 0x18, 0x89, 0x79, 0xed, 0x84, 0x71, 0x83, 0xca, 0x85, 0xfe, 0xed, 0x13, 0x5c, 0xe8, 0x1f,
	0xc0, 0x62, 0xfe, 0xb8, 0xc0, 0xb2, 0x77, 0xf2, 0x79, 0x39, 0xc5, 0x1b, 0x8a, 0x65, 0x3c, 0x2c,
	0xde, 0x5a, 0xde, 0x82, 0x7e, 0x1a, 0xd9, 0x86, 0x15, 0x6d, 0xe5, 0x67, 0x4a, 0x8e, 0xe3, 0xb3,
	0x7a, 0x91, 0xf4, 0x65, 0xfe, 0x3d, 0x8d, 0x5d, 0xb8, 0x26, 0x1f, 0x78, 0xee, 0xa3, 0x93, 0x38,
	0x06, 0x6f, 0x42, 0xcb, 0x76, 0x9c, 0xc8, 0x8d, 0xe3, 0xa2, 0x57, 0x73, 0xdb, 0x8d, 0x0e, 0xdd,
	0x68, 0x95, 0xd0, 0xe4, 0xd5, 0xe4, 0xb4, 0xc6, 0xeb, 0xd0, 0x3f, 0xf4, 0xdc, 0x47, 0xd9, 0xb9,
	0x56, 0xed, 0x3a, 0xee, 0x31, 0xc2, 0xf4, 0x44, 0x3b, 0x0b, 0x6d, 0x2c, 0xe8, 0x87, 0x42, 0xc5,
	0x6d, 0xb1, 0xef, 0xfb, 0x21, 0xd3, 0x3d, 0xda, 0xdb, 0x47, 0xc1, 0x28, 0x75, 0x30, 0x64, 0x59,
	0xc9, 0xa4, 0x16, 0x2e, 0x43, 0x6b, 0x14, 0x06, 0x89, 0xcb, 0x03, 0xb9, 0x7a, 0x96, 0xf8, 0x64,
	0x4a, 0xd4, 0x80, 0x15, 0x25, 0x9d, 0xfd, 0x53, 0xcb, 0x8b, 0x78, 0x8e, 0x67, 0xfc, 0x16, 0xc2,
	0x1d, 0x45, 0xb7, 0x79, 0xbe, 0xef, 0x6f, 0x69, 0xd0, 0x79, 0xb2, 0x6c, 0x93, 0xbc, 0xe1, 0xa5,
	0x3c, 0x38, 0xa1, 0x71, 0x02, 0x8d, 0xaf, 0x2a, 0xa4, 0x47, 0x8a, 0x1c, 0x80, 0x93, 0x45, 0x0e,
	0x08, 0x53, 0xdd, 0xe2, 0x6c, 0x53, 0x9d, 0xf9, 0xcf, 0x6a, 0x00, 0xd2, 0x99, 0x3c, 0x73, 0x06,
	0x9f, 0x54, 0x7f, 0x15, 0x7d, 0x68, 0x1c, 0x63, 0x2e, 0x2c, 0xc6, 0xd9, 0x37, 0x9f, 0x28, 0xce,
	0xfe, 0x5d, 0x58, 0xda, 0x8b, 0x3c, 0x76, 0x72, 0xe6, 0xaa, 0x99, 0x9b, 0x5d, 0xcd, 0x29, 0x2a,
	0xa5, 0xda, 0xe8, 0x72, 0x62, 0xa7, 0x75, 0x32, 0xb1, 0x63, 0x6e, 0x40, 0x1f, 0x75, 0xc1, 0x54,
	0x77, 0x9e, 0x11, 0xd1, 0xa8, 0x46, 0x6e, 0xd6, 0x72, 0x91, 0x9b, 0xe6, 0x3f, 0xae, 0x89, 0x34,
	0xb9, 0xb4, 0xb2, 0xab, 0xd2, 0x86, 0xaa, 0xda, 0x08, 0xb4, 0xcd, 0x3e, 0x7a, 0x6a, 0x10, 0x9d,
	0x3b, 0x8d, 0xf4, 0xdc, 0x11, 0x9a, 0x7c, 0xb3, 0x44, 0x93, 0x9f, 0x93, 0x34, 0x79, 0x79, 0xa0,
	0xad, 0x59, 0x03, 0x6d, 0x9f, 0x24, 0x44, 0xb5, 0x53, 0x1a, 0xa2, 0x2a, 0x73, 0x1e, 0x1c, 0xcf,
	0x79, 0xe6, 0x3f, 0xa8, 0xf1, 0x98, 0x1d, 0xc9, 0xdc, 0xf1, 0x8d, 0x98, 0xc3, 0x37, 0x00, 0xc2,
	0x47, 0x81, 0x30, 0xe6, 0x13, 0xdf, 0x9f, 0xcd, 0xb7, 0x94, 0xa6, 0x2d, 0x5a, 0x9d, 0x30, 0xcd,
	0x60, 0xcc, 0x67, 0x03, 0x37, 0x0b, 0xd9, 0xc0, 0x6f, 0x64, 0xb1, 0xe5, 0x52, 0xc4, 0xc4, 0x52,
	0x21, 0xe2, 0x1b, 0x6b, 0x16, 0xb1, 0xe1, 0x58, 0xf7, 0x93, 0xce, 0xde, 0x9f, 0xd1, 0x60, 0x7e,
	0x7b, 0x14, 0x4e, 0x93, 0xec, 0x3a, 0x38, 0xfb, 0x18, 0x12, 0x6c, 0x51, 0x93, 0xd8, 0x22, 0x67,
	0xe6, 0xaf, 0x17, 0xcc, 0xfc, 0x2f, 0x8a, 0xdc, 0xd1, 0x92, 0xdc, 0x98, 0x09, 0xee, 0x25, 0xca,
	0xea, 0xa2, 0xd4, 0xd1, 0x7f, 0x54, 0x03, 0x9d, 0xba, 0x93, 0xe5, 0x85, 0xcc, 0xb6, 0x2f, 0x7f,
	0xd4, 0x94, 0xde, 0x4c, 0x06, 0x37, 0x14, 0x19, 0x2c, 0x87, 0x2c, 0x36, 0xd5, 0xe0, 0xd3, 0x2b,
	0x30, 0x18, 0xdb, 0x8f, 0x87, 0x14, 0x33, 0x8b, 0xfa, 0x38, 0xb9, 0x8e, 0x7b, 0x63, 0xfb, 0x31,
	0x79, 0x8b, 0xa6, 0x14, 0xb0, 0x2d, 0x85, 0x44, 0xb6, 0xf2, 0x21, 0x91, 0xb2, 0x3a, 0xd6, 0x3e,
	0x56, 0x1d, 0x93, 0x4e, 0x84, 0xce, 0x89, 0x4e, 0x04, 0xf3, 0xd7, 0x48, 0xb5, 0xc8, 0x82, 0x13,
	0x8e, 0x8b, 0x39, 0x2a, 0xe4, 0x4c, 0x9d, 0x2f, 0x89, 0x72, 0x48, 0x73, 0x91, 0xb2, 0xb4, 0xa9,
	0x9c, 0x04, 0xad, 0x9f, 0x50, 0x71, 0x7b, 0x07, 0xfa, 0xc2, 0xc4, 0x53, 0xb1, 0x7d, 0x72, 0x06,
	0x24, 0xab, 0xb7, 0x2b, 0x7d, 0x99, 0xff, 0x5b, 0x83, 0xbe, 0xd0, 0xa3, 0x27, 0x9f, 0xe6, 0xf8,
	0x5e, 0xcc, 0xe5, 0x53, 0x2f, 0xe6, 0x63, 0x78, 0x90, 0x5e, 0xe4, 0x52, 0xbf, 0x90, 0xa6, 0x6b,
	0x17, 0xfc, 0xba, 0x59, 0xce, 0x99, 0x48, 0xd5, 0xbe, 0x01, 0x9d, 0x11, 0xbb, 0xd7, 0xd8, 0xfb,
	0xae, 0xf0, 0xe3, 0xca, 0x57, 0x62, 0x8e, 0x22, 0xd9, 0x91, 0x12, 0x9a, 0x77, 0x60, 0x3e, 0x17,
	0xf4, 0xf2, 0xd1, 0xa2, 0xd3, 0xbe, 0x1b, 0xba, 0xdc, 0x42, 0xc8, 0xd4, 0x5a, 0xf4, 0xa4, 0xa2,
	0x66, 0xcc, 0x67, 0xaf, 0x69, 0xb5, 0xf0, 0x7b, 0x83, 0xec, 0xd0, 0x8e, 0x7c, 0x45, 0x9d, 0x1b,
	0x39, 0x22, 0xae, 0x97, 0xca, 0xf8, 0x87, 0x38, 0x3b, 0xa2, 0xcc, 0xfd, 0x43, 0xf3, 0x1e, 0x00,
	0xb9, 0x23, 0x5d, 0xbf, 0x24, 0x9d, 0xb2, 0x39, 0x33, 0x9d, 0xb2, 0xa9, 0xa4, 0x53, 0xfe, 0x9a,
	0xb0, 0x06, 0x6f, 0x8c, 0x27, 0xf6, 0x28, 0x39, 0x91, 0x31, 0x9a, 0xd3, 0x50, 0xc5, 0xe3, 0x50,
	0xd8, 0x82, 0x19, 0x0d, 0xf6, 0x6a, 0x33, 0x74, 0x8c, 0xcf, 0x83, 0xce, 0x68, 0x78, 0x7a, 0x0a,
	0x3d, 0xbe, 0x31, 0xc3, 0xa5, 0x3a, 0x48, 0xec, 0xc8, 0x42, 0x5a, 0x84, 0xe1, 0x90, 0xec, 0x68,
	0xe8, 0x08, 0x53, 0x57, 0xdb, 0x6a, 0x25, 0x76, 0x74, 0x8b, 0x09, 0xc3, 0x65, 0x68, 0xf1, 0xfb,
	0x3a, 0x8f, 0x19, 0x16, 0x9f, 0x4c, 0x74, 0x8e, 0xbd, 0x38, 0xe6, 0x51, 0xda, 0xf8, 0xbf, 0xf9,
	0xf7, 0xeb, 0x7c, 0x7c, 0x14, 0x6c, 0xc5, 0xfa, 0x1e, 0x47, 0xa3, 0xe2, 0xf8, 0xe2, 0x68, 0x24,
	0x1b, 0xdb, 0xd3, 0xc5, 0x12, 0xf1, 0x56, 0x7c, 0xb1, 0x3e, 0x0b, 0x67, 0x50, 0x28, 0xb9, 0x11,
	0xbd, 0x41, 0x22, 0x4d, 0x02, 0x2d, 0xd1, 0x92, 0x82, 0x96, 0xa7, 0x83, 0x35, 0xab, 0x4c, 0xc7,
	0x8c, 0xd8, 0x84, 0x41, 0x1c, 0x8d, 0x72, 0xd3, 0xc1, 0x8a, 0x3b, 0xc2, 0x95, 0xdb, 0xb6, 0x5a,
	0x71, 0x34, 0xba, 0xc5, 0xcf, 0x06, 0x91, 0x03, 0x64, 0xef, 0x93, 0x31, 0xa2, 0x69, 0x01, 0xcf,
	0xfc, 0xb1, 0xf7, 0x5d, 0xe3, 0x29, 0x72, 0x22, 0x8d, 0xf6, 0xf6, 0xb9, 0x52, 0xd1, 0xb4, 0x32,
	0x80, 0xf1, 0x39, 0xe8, 0xf3, 0xb1, 0xe2, 0xfa, 0x8b, 0x20, 0x9a, 0xbc, 0xe1, 0x9c, 0xb8, 0xc3,
	0xea, 0xc5, 0xd9, 0x47, 0xac, 0x30, 0xe8, 0x92, 0x34, 0x4f, 0xf7, 0x0f, 0x55, 0x57, 0xc1, 0x69,
	0x1e, 0xcf, 0x24, 0x5c, 0x05, 0x68, 0xe5, 0x42, 0xa4, 0xf0, 0x01, 0x50, 0x08, 0x4b, 0x9f, 0xa0,
	0xef, 0x11, 0xd0, 0xfc, 0x77, 0x1a, 0x2c, 0xe3, 0x01, 0xc5, 0x0f, 0x63, 0xc5, 0xe0, 0x5d, 0x99,
	0xfa, 0x44, 0xeb, 0x59, 0x9a, 0xfa, 0xc4, 0x36, 0x03, 0xe6, 0x56, 0x90, 0xcd, 0x85, 0xce, 0x31,
	0x40, 0x10, 0xe5, 0x6a, 0x3e, 0x03, 0x7d, 0xe1, 0xb6, 0xcf, 0x12, 0xd9, 0x1b, 0x96, 0xf0, 0xe5,
	0x53, 0x2d, 0xb7, 0xe0, 0x52, 0x10, 0x26, 0x43, 0xdf, 0xb5, 0x0f, 0xdd, 0x61, 0x75, 0xfa, 0x55,
	0xc3, 0x3a, 0x1f, 0x84, 0xc9, 0x7d, 0x46, 0x65, 0x15, 0xfb, 0x62, 0x7e, 0xbf, 0x06, 0xc6, 0x5d,
	0x37, 0x70, 0x23, 0x6f, 0xb4, 0x19, 0x06, 0x69, 0xe8, 0x2a, 0xfa, 0x6e, 0xf0, 0x53, 0xca, 0xaf,
	0xe3, 0x10, 0x52, 0x02, 0x1d, 0xd7, 0x4e, 0xa4, 0xdc, 0xe5, 0x86, 0xd5, 0x41, 0x88, 0xb0, 0xb9,
	0xc9, 0x51, 0xbf, 0xfc, 0x0d, 0xac, 0xf3, 0xd0, 0x49, 0x30, 0x51, 0x42, 0x0e, 0xc2, 0x47, 0xc0,
	0x86, 0x63, 0xee, 0xc3, 0x02, 0x85, 0xa1, 0x7d, 0xca, 0xbd, 0x30, 0x0f, 0xc0, 0xb8, 0xfd, 0x78,
	0xe2, 0x6e, 0xa7, 0x86, 0xcc, 0x4f, 0xad, 0xa5, 0x7d, 0x58, 0x60, 0x2d, 0xa1, 0x83, 0xed, 0x4e,
	0x18, 0x25, 0x9f, 0x5a, 0x43, 0x3f, 0xa4, 0xd1, 0x98, 0xee, 0x46, 0xe1, 0x74, 0x92, 0x5d, 0x73,
	0x3f, 0x5e, 0x53, 0x14, 0x37, 0x73, 0x10, 0x8e, 0xdd, 0x61, 0xec, 0x39, 0x59, 0x98, 0x71, 0x7c,
	0x2f, 0x1c, 0xbb, 0xdb, 0x9e, 0x23, 0x75, 0xa6, 0x21, 0x77, 0xc6, 0x85, 0xf9, 0x9d, 0xc8, 0xde,
	0xdb, 0xf3, 0x46, 0xef, 0x07, 0xde, 0xa7, 0x37, 0xe6, 0xff, 0x4b, 0xd1, 0xbb, 0x74, 0x3f, 0xe3,
	0x1b, 0xd2, 0x72, 0xbf, 0x34, 0x75, 0xe3, 0xe4, 0xb8, 0xab, 0x9a, 0xa2, 0xed, 0xd7, 0x72, 0xda,
	0xfe, 0x93, 0xde, 0x87, 0x15, 0x7d, 0xa4, 0x91, 0xd3, 0x47, 0x9e, 0x86, 0x5e, 0xe4, 0x8e, 0xc2,
	0xc8, 0x51, 0x2c, 0xba, 0x5d, 0x82, 0xd1, 0x2e, 0xbe, 0x0e, 0x1d, 0xb1, 0x69, 0xe3, 0xa2, 0xfa,
	0x2f, 0xf6, 0xea, 0xb6, 0x9b, 0x58, 0x19, 0x9d, 0xf9, 0x75, 0x0d, 0x2e, 0x6e, 0xda, 0x13, 0x0a,
	0x04, 0x96, 0x9e, 0x94, 0xf9, 0x04, 0xc6, 0x7f, 0x45, 0x58, 0xfe, 0x87, 0xdc, 0xf4, 0x2f, 0x82,
	0x46, 0xe3, 0xb4, 0x99, 0xbc, 0x1e, 0xfe, 0x8d, 0x1a, 0xf5, 0x0f, 0xd4, 0x60, 0x49, 0x96, 0xc3,
	0x19, 0xa7, 0x97, 0xe4, 0x92, 0x6a, 0xc7, 0xe7, 0x92, 0x72, 0x4e, 0x2b, 0x4f, 0x60, 0xe2, 0x17,
	0x88, 0x19, 0xb9, 0xa4, 0x34, 0xec, 0xca, 0x5c, 0x52, 0x72, 0x7f, 0xcd, 0xca, 0x25, 0x25, 0xff,
	0x57, 0x3e, 0x97, 0xb4, 0x90, 0x6f, 0x4c, 0xf7, 0x6f, 0x39, 0xdf, 0xd8, 0xfc, 0x5a, 0x0d, 0x8c,
	0x3c, 0xf3, 0xdf, 0x5a, 0x33, 0x5e, 0x87, 0xb6, 0xd0, 0x9e, 0xb9, 0xef, 0xe5, 0x7c, 0xce, 0xab,
	0xa5, 0xa8, 0xda, 0x29, 0x31, 0xfa, 0x1f, 0x6c, 0xcc, 0x00, 0xf3, 0x47, 0x53, 0xdf, 0x96, 0x12,
	0x9d, 0x1b, 0x16, 0xfa, 0x94, 0xd6, 0x39, 0x02, 0xe7, 0xe2, 0x65, 0x38, 0x95, 0xa5, 0x0d, 0xe7,
	0xdf, 0x18, 0x59, 0x48, 0x51, 0xe9, 0x73, 0x5c, 0xcf, 0xc3, 0x7c, 0x46, 0x4f, 0x93, 0x33, 0xc7,
	0xfd, 0xfa, 0x02, 0x4c, 0xc7, 0x5e, 0x9e, 0x71, 0x5a, 0x45, 0xc6, 0xf9, 0x02, 0xe8, 0x9c, 0x24,
	0xe3, 0x9f, 0xf6, 0x2c, 0xfe, 0x99, 0x27, 0x72, 0x01, 0x8a, 0x8d, 0x57, 0x60, 0x91, 0x1c, 0x76,
	0xa4, 0x37, 0xa5, 0x9b, 0xa4, 0x43, 0xdd, 0x47, 0xa7, 0x1d, 0xa2, 0xee, 0xf2, 0x07, 0x51, 0xfe,
	0xba, 0x86, 0x6e, 0x54, 0x99, 0xf3, 0x6e, 0xad, 0x19, 0x77, 0xf3, 0x37, 0x1b, 0x9a, 0x70, 0x33,
	0x37, 0xe1, 0x25, 0x2a, 0x83, 0x7a, 0xc5, 0x31, 0x36, 0xc1, 0x10, 0xcb, 0x9d, 0xe5, 0x5d, 0x70,
	0xe7, 0xee, 0xa5, 0xf2, 0xda, 0xb2, 0x3b, 0x86, 0x3e, 0xca, 0x41, 0xcc, 0x0f, 0x61, 0x21, 0xb5,
	0x5d, 0xa7, 0x87, 0xce, 0x33, 0xd0, 0xdf, 0x67, 0x67, 0xbc, 0x9d, 0xb8, 0xb2, 0xa7, 0xaa, 0x27,
	0x80, 0xc2, 0x41, 0x29, 0x49, 0xe9, 0x9a, 0x08, 0xd7, 0xe0, 0x52, 0xda, 0xfc, 0xd7, 0x1a, 0x74,
	0x1f, 0xe0, 0x23, 0x3f, 0x9f, 0x58, 0x9d, 0x39, 0xc9, 0x5f, 0xcf, 0x4b, 0xfe, 0xcf, 0x42, 0x8f,
	0xf4, 0xa4, 0xe3, 0x83, 0x68, 0x49, 0xa1, 0xe2, 0x91, 0xac, 0x2f, 0xc0, 0xdc, 0xf1, 0x61, 0xb3,
	0x9c, 0xc4, 0xfc, 0x6d, 0x8d, 0xbf, 0x6f, 0x22, 0xe5, 0x0d, 0xcf, 0x94, 0x90, 0x4a, 0x7c, 0x45,
	0x3d, 0x97, 0x4c, 0xc9, 0x63, 0x1a, 0x1b, 0xb3, 0x63, 0x1a, 0xab, 0x4c, 0xc2, 0x97, 0xa1, 0x87,
	0xde, 0x53, 0x9f, 0x31, 0x78, 0xfa, 0x34, 0x0f, 0x30, 0xd8, 0xfd, 0x30, 0x22, 0xff, 0x8e, 0x61,
	0x4f, 0x30, 0x5b, 0x9a, 0xa7, 0x34, 0x48, 0x76, 0x07, 0x9d, 0x63, 0x30, 0xaf, 0x41, 0x1c, 0x9d,
	0xe4, 0xce, 0x6f, 0xcb, 0x61, 0x1b, 0x3f, 0xae, 0x71, 0xbb, 0x66, 0x9a, 0x75, 0xfa, 0xcd, 0x1a,
	0x6f, 0x79, 0xff, 0x7e, 0xb2, 0x06, 0xa7, 0xb0, 0x7f, 0x39, 0x1d, 0x6d, 0xe6, 0xbb, 0x62, 0x4a,
	0x2f, 0x6b, 0xe5, 0xbd, 0xac, 0x9f, 0xb4, 0x97, 0x8d, 0xf2, 0x5e, 0x36, 0xe5, 0xa0, 0x88, 0x8b,
	0x00, 0x78, 0xdf, 0xf3, 0x7c, 0x2f, 0x39, 0x12, 0x69, 0x05, 0x19, 0x84, 0x5d, 0x2e, 0xb2, 0xaf,
	0xe1, 0xd8, 0x7e, 0xcc, 0xc5, 0x59, 0x3f, 0x83, 0x6e, 0xda, 0x8f, 0xe9, 0xda, 0xf4, 0xc8, 0x8e,
	0xf8, 0xb1, 0x43, 0x71, 0xac, 0x40, 0x20, 0x5c, 0x43, 0x76, 0x1c, 0xf0, 0xc4, 0x5c, 0xa4, 0xe8,
	0xf0, 0xe7, 0x27, 0x08, 0x86, 0xc7, 0xc1, 0x67, 0x61, 0x40, 0xcc, 0x9b, 0x3e, 0x8f, 0xc1, 0x5f,
	0xb6, 0xd0, 0x2a, 0xdf, 0x73, 0x60, 0x68, 0xf3, 0x1f, 0x6a, 0x30, 0x50, 0x1f, 0x63, 0x99, 0x6d,
	0x7d, 0x53, 0x2d, 0xa1, 0xb5, 0x27, 0xb0, 0x84, 0x3e, 0x69, 0x82, 0xe6, 0xc9, 0xf8, 0xca, 0xfc,
	0xd9, 0x3a, 0xe7, 0x94, 0x6f, 0xd1, 0x51, 0x94, 0x3d, 0x08, 0xd5, 0x38, 0xe1, 0x83, 0x50, 0xcd,
	0x92, 0x07, 0xa1, 0x94, 0xc7, 0x9d, 0xe6, 0x4e, 0xf0, 0xb8, 0x53, 0xf6, 0x82, 0x54, 0xeb, 0xc4,
	0x2f, 0x48, 0x3d, 0x0b, 0x03, 0xea, 0x46, 0x1a, 0x1b, 0x4c, 0xbb, 0x93, 0x74, 0xa9, 0x75, 0x0e,
	0xcc, 0x3f, 0xa0, 0xd6, 0x29, 0x3c, 0xa0, 0x26, 0x3d, 0x5e, 0x04, 0xc7, 0x3d, 0x5e, 0x64, 0x3e,
	0x84, 0x01, 0x5a, 0xa7, 0x95, 0x35, 0xfc, 0x18, 0xcf, 0xff, 0xcd, 0xf2, 0xe0, 0x99, 0xdf, 0x0b,
	0xbd, 0x4d, 0x7b, 0x92, 0x35, 0x75, 0x53, 0x3c, 0x5a, 0x24, 0xf9, 0x12, 0x54, 0xd3, 0x35, 0xd2,
	0xa2, 0x37, 0x81, 0x5e, 0x2b, 0x42, 0xcf, 0x24, 0xbb, 0xa5, 0x63, 0x31, 0xd5, 0x07, 0xda, 0x43,
	0xe0, 0x3a, 0x77, 0x84, 0xee, 0xa3, 0x81, 0x36, 0x6d, 0x0b, 0xc3, 0x1c, 0x79, 0x2a, 0x7a, 0x21,
	0xcc, 0x91, 0xe0, 0xa9, 0xb6, 0xfa, 0xa2, 0x78, 0x23, 0xad, 0x96, 0x37, 0x1a, 0xca, 0x35, 0x8a,
	0x27, 0xd2, 0xbe, 0x1b, 0x74, 0x01, 0x4e, 0x7d, 0xb6, 0x33, 0xf7, 0xc1, 0x0b, 0xd0, 0x8a, 0xa3,
	0xd1, 0x70, 0xf6, 0x3b, 0x39, 0x73, 0x71, 0x34, 0x62, 0xeb, 0x73, 0x1b, 0x75, 0x20, 0xa5, 0xf6,
	0xd8, 0x78, 0x55, 0x7d, 0xc4, 0xed, 0x5c, 0xb1, 0x83, 0xa9, 0x1b, 0x96, 0x77, 0xf2, 0xcf, 0x6b,
	0xb0, 0x20, 0x2c, 0x9e, 0x9f, 0xd4, 0x52, 0x9f, 0x4c, 0xb8, 0xcf, 0x7a, 0x13, 0xd6, 0xdc, 0x16,
	0x2f, 0x12, 0x22, 0x0f, 0x0a, 0x1f, 0x71, 0xcc, 0x3e, 0x54, 0x1f, 0x31, 0x82, 0xc8, 0x47, 0x9c,
	0x12, 0x64, 0x46, 0x9c, 0x3a, 0x27, 0xa0, 0xf8, 0xd6, 0x5b, 0xdc, 0xe1, 0x22, 0x05, 0x15, 0xbf,
	0x06, 0x3c, 0xd3, 0x16, 0x67, 0x5d, 0xab, 0x8e, 0x46, 0x24, 0x2a, 0x36, 0xf1, 0x6f, 0x42, 0x7b,
	0xd3, 0xcb, 0xee, 0x74, 0xb6, 0xef, 0x0f, 0xc3, 0x89, 0x1b, 0x88, 0xb0, 0x48, 0xdb, 0xf7, 0xdf,
	0x9b, 0xb8, 0x81, 0x61, 0x70, 0x47, 0x38, 0xb1, 0x20, 0x39, 0xbd, 0xff, 0xb2, 0x06, 0x5d, 0x29,
	0x69, 0x1a, 0xf5, 0x76, 0x3e, 0xf7, 0xc3, 0x98, 0x49, 0x1b, 0xd2, 0xb2, 0x6b, 0x5c, 0x6f, 0xe7,
	0xa8, 0x6d, 0x37, 0xe0, 0xba, 0xf6, 0x0d, 0x38, 0x9d, 0xd2, 0x47, 0xee, 0xc8, 0xf5, 0x0e, 0x5d,
	0xc5, 0x1c, 0xb5, 0x28, 0xb0, 0x16, 0x21, 0xd3, 0x77, 0x7d, 0x50, 0xbf, 0x96, 0xd4, 0x13, 0x29,
	0xf1, 0x33, 0xd5, 0x4d, 0xcc, 0x1f, 0xd4, 0xa0, 0xfb, 0x81, 0xe7, 0xfb, 0xf6, 0x3e, 0xf9, 0x68,
	0xaf, 0xc0, 0xc0, 0x8b, 0x87, 0x18, 0x2e, 0xc4, 0xce, 0x3e, 0x1e, 0x31, 0xdc, 0xb6, 0x7a, 0x5e,
	0xbc, 0xea, 0xfb, 0xab, 0x04, 0x13, 0xd9, 0x3c, 0xbe, 0x3f, 0xdc, 0x0b, 0xa7, 0x3c, 0xe7, 0x9e,
	0xb2, 0x79, 0x7c, 0xff, 0x0e, 0x83, 0xb0, 0x53, 0x1c, 0x51, 0x94, 0x39, 0xd3, 0xb0, 0xf8, 0x97,
	0x71, 0x0e, 0xda, 0xbc, 0x62, 0x52, 0x24, 0x1b, 0x56, 0xfa, 0x6d, 0x7e, 0x0f, 0xb4, 0xd7, 0xed,
	0x43, 0x37, 0x17, 0x0e, 0x4b, 0x2e, 0xd3, 0x8a, 0x97, 0xdb, 0xf1, 0xa2, 0xc7, 0x96, 0x37, 0x8d,
	0x2b, 0x63, 0x1f, 0x0c, 0xea, 0x3e, 0x4e, 0x22, 0x9b, 0x1b, 0x8b, 0xe9, 0xc3, 0xdc, 0x81, 0x3e,
	0xab, 0x1f, 0xed, 0x33, 0xd8, 0x08, 0xbb, 0x9d, 0xb3, 0x0f, 0xe9, 0xe1, 0x41, 0xfc, 0xa6, 0x57,
	0x15, 0x47, 0xf6, 0xa1, 0x5b, 0x12, 0xdf, 0x29, 0xba, 0x68, 0x11, 0x81, 0xf9, 0xd7, 0x34, 0x58,
	0xe2, 0x09, 0xee, 0x99, 0xa6, 0xf4, 0xcd, 0x9e, 0x4b, 0x36, 0x03, 0x63, 0x2f, 0x4e, 0x48, 0xf7,
	0x6e, 0x58, 0xf4, 0x61, 0xfe, 0x55, 0x0d, 0x8d, 0x61, 0xac, 0xaf, 0xa4, 0xaa, 0x7c, 0x8b, 0xf6,
	0xf3, 0xab, 0x1a, 0x9c, 0xe2, 0xfd, 0x54, 0x82, 0xa4, 0xb3, 0x9e, 0x1e, 0x7a, 0xb1, 0x97, 0xe4,
	0x7a, 0xfa, 0x01, 0xc1, 0x3e, 0x5e, 0x4f, 0x79, 0xc5, 0x69, 0x4f, 0xc5, 0x37, 0xd3, 0xf9, 0x91,
	0x6a, 0xc8, 0xad, 0xa7, 0x4a, 0x74, 0x20, 0x62, 0x68, 0x4a, 0x69, 0xff, 0x5d, 0x05, 0x82, 0x0d,
	0xf1, 0xd1, 0x4e, 0xd9, 0x73, 0x39, 0x40, 0x38, 0x53, 0xfa, 0xc9, 0xf4, 0xfb, 0xbb, 0x35, 0x58,
	0x28, 0x3c, 0x93, 0x60, 0xbc, 0xc6, 0x7a, 0x82, 0xdb, 0x32, 0x2e, 0xbe, 0xc1, 0x20, 0x6d, 0x58,
	0x2b, 0x25, 0x33, 0xde, 0x80, 0x2e, 0xe3, 0xc8, 0x21, 0xb2, 0x70, 0xc9, 0x13, 0xc6, 0x0a, 0xef,
	0x5b, 0x30, 0x12, 0x9f, 0xb1, 0xf1, 0x96, 0x1c, 0x2e, 0x5e, 0xcf, 0x3f, 0x17, 0x50, 0xb2, 0x10,
	0x52, 0xc8, 0xb8, 0xb1, 0x8a, 0x3f, 0x17, 0xc0, 0xf9, 0x3e, 0xe6, 0x51, 0x1d, 0x97, 0x0a, 0xc5,
	0xd5, 0xbd, 0x61, 0xc9, 0x65, 0xf0, 0x59, 0x19, 0x9c, 0x3b, 0x4a, 0x47, 0x6a, 0xe7, 0x8d, 0x26,
	0x05, 0x96, 0xb5, 0x64, 0x7a, 0xfe, 0x72, 0x0c, 0x13, 0x08, 0x5e, 0x18, 0xf0, 0x87, 0x75, 0x3a,
	0x5e, 0xbc, 0x4d, 0x00, 0x76, 0xe6, 0x20, 0xbb, 0xe1, 0x1b, 0x4a, 0x3c, 0xa7, 0x11, 0x01, 0x0f,
	0xa6, 0x63, 0xf3, 0xcf, 0xd5, 0xa4, 0x4c, 0x32, 0x71, 0xa3, 0x56, 0xad, 0xfe, 0x5a, 0x89, 0xd5,
	0xff, 0x19, 0xe8, 0x3f, 0xb2, 0xbd, 0xc4, 0x0b, 0xf6, 0x15, 0xf1, 0xdd, 0xe3, 0x40, 0x22, 0x92,
	0x13, 0xbb, 0xb8, 0xf2, 0x23, 0xbe, 0x59, 0xa7, 0x78, 0x6e, 0x59, 0x76, 0x10, 0x12, 0x80, 0x0e,
	0x5b, 0x8e, 0x94, 0xc2, 0x44, 0x80, 0x40, 0x3c, 0x68, 0xe3, 0x94, 0xe8, 0x23, 0x57, 0x12, 0x25,
	0x06, 0x5b, 0xe0, 0x28, 0xee, 0xab, 0x66, 0x3d, 0x79, 0x19, 0x4e, 0x89, 0xee, 0xca, 0xf4, 0x74,
	0x15, 0x5a, 0xe0, 0xa8, 0x8c, 0xde, 0x3c, 0x80, 0xc5, 0x2d, 0x7f, 0xba, 0xef, 0x05, 0xb7, 0x30,
	0xf7, 0x93, 0xe9, 0x59, 0xc8, 0x95, 0x6f, 0x40, 0x37, 0x76, 0x49, 0x39, 0xce, 0x74, 0x34, 0x35,
	0x43, 0x7f, 0x1b, 0xf1, 0x14, 0x3f, 0x16, 0xa7, 0xff, 0xb3, 0x1d, 0x87, 0x17, 0xb6, 0x54, 0x7e,
	0xd3, 0x97, 0x79, 0x04, 0xba, 0xdc, 0x92, 0xc8, 0x6d, 0xcb, 0x92, 0x50, 0xb5, 0x5c, 0x12, 0xea,
	0x3d, 0xd0, 0x39, 0x12, 0x5f, 0x3d, 0xc5, 0x60, 0x24, 0x52, 0x9c, 0x2e, 0xca, 0xcf, 0x8e, 0x14,
	0x3b, 0x6f, 0x0d, 0x1c, 0xe5, 0x3b, 0x3f, 0xc8, 0x6d, 0x97, 0x7e, 0xc0, 0xc2, 0x78, 0x13, 0xc0,
	0xa1, 0xd6, 0x59, 0xdd, 0x5a, 0xfe, 0xd9, 0x8e, 0x7c, 0x77, 0xad, 0x8e, 0x93, 0xf6, 0x7c, 0x09,
	0xe6, 0xc2, 0x60, 0x18, 0xee, 0xed, 0x71, 0x99, 0xd3, 0x0c, 0x83, 0xf7, 0xf6, 0xf6, 0xcc, 0xc7,
	0x30, 0x9f, 0x6b, 0xa9, 0x74, 0x18, 0xda, 0x47, 0x19, 0x86, 0x3a, 0x5b, 0x6c, 0xd3, 0x4b, 0xb3,
	0x65, 0xfe, 0xa2, 0x96, 0x1b, 0xe4, 0x51, 0x30, 0xc2, 0x52, 0x9f, 0x5c, 0xfb, 0xcf, 0xc1, 0x3c,
	0xa6, 0xf5, 0xe6, 0x4c, 0xba, 0x75, 0xab, 0xcf, 0xc0, 0xdb, 0xa9, 0x59, 0xf7, 0x0a, 0x0c, 0x90,
	0xce, 0x77, 0xf7, 0x12, 0xd9, 0xd2, 0xd4, 0x63, 0xd0, 0xfb, 0xee, 0x5e, 0x22, 0x1e, 0x1b, 0xcb,
	0x46, 0xd3, 0xc8, 0x8d, 0xe6, 0x00, 0x96, 0xcb, 0x06, 0x73, 0xdf, 0x8b, 0x13, 0xe3, 0x3e, 0x18,
	0x13, 0xc4, 0x0d, 0x79, 0x79, 0x6e, 0x0e, 0xac, 0x57, 0x0f, 0x49, 0x94, 0xb7, 0xf4, 0x89, 0x04,
	0x45, 0xfb, 0xdd, 0x97, 0x6b, 0x2a, 0x5f, 0xfa, 0xac, 0x89, 0x7b, 0xf9, 0x26, 0x18, 0xb4, 0xa8,
	0x75, 0x17, 0x18, 0x44, 0xa9, 0x1e, 0x3b, 0x7b, 0x13, 0xce, 0xe0, 0x5c, 0x08, 0xab, 0x5c, 0x61,
	0xee, 0x16, 0x19, 0x9a, 0xfb, 0xe0, 0xb2, 0x29, 0x14, 0xc5, 0x84, 0xa5, 0x52, 0x2a, 0x56, 0xcf,
	0x8a, 0x71, 0xf3, 0x64, 0x56, 0xec, 0x0b, 0x70, 0x81, 0x0c, 0x78, 0x4a, 0x9b, 0xac, 0xd8, 0x30,
	0x09, 0x1d, 0xfb, 0x88, 0xcb, 0x9f, 0xb3, 0x48, 0xb4, 0x9a, 0x35, 0xcc, 0x0a, 0xef, 0x30, 0x82,
	0x5c, 0x0d, 0xb2, 0x5d, 0x9c, 0xd7, 0xd0, 0xcc, 0xd5, 0xb0, 0x9e, 0x99, 0xc9, 0xb1, 0x06, 0xf3,
	0xe7, 0x35, 0xd0, 0xb7, 0xc2, 0xf1, 0xc4, 0xf5, 0xbc, 0x35, 0x11, 0x80, 0x64, 0xdc, 0x48, 0x95,
	0x3a, 0x2d, 0xff, 0x96, 0x97, 0x4c, 0x9b, 0xbb, 0x19, 0x17, 0xdd, 0x07, 0xf5, 0x59, 0xee, 0x03,
	0x29, 0x98, 0x28, 0x7d, 0x63, 0x2d, 0x1c, 0x8d, 0xa6, 0x13, 0x4f, 0x8a, 0xdc, 0xa6, 0x37, 0xd6,
	0xde, 0x23, 0x70, 0xde, 0x8e, 0xd5, 0x54, 0xed, 0x58, 0xe6, 0xf7, 0xc0, 0x32, 0xdd, 0x53, 0x78,
	0x27, 0x9f, 0xc0, 0x57, 0x5a, 0x30, 0xd7, 0xd6, 0x8a, 0xe6, 0x5a, 0xf3, 0x0f, 0xc3, 0x92, 0x52,
	0xff, 0x5a, 0xc8, 0x0d, 0x84, 0x9f, 0x44, 0xe5, 0xef, 0x82, 0x41, 0x95, 0xcb, 0x21, 0x2f, 0xc7,
	0xc7, 0xe2, 0xa6, 0x0e, 0x95, 0x86, 0x94, 0xe2, 0x6d, 0x7e, 0x1f, 0x18, 0xa2, 0x1a, 0xe9, 0x09,
	0x2f, 0x29, 0x80, 0x4a, 0x3b, 0x59, 0x48, 0xad, 0xe2, 0x88, 0xaa, 0x9d, 0xd0, 0x11, 0xf5, 0x9d,
	0xb0, 0xac, 0x36, 0x7e, 0xd2, 0x47, 0xb4, 0x8e, 0x0b, 0xfb, 0x37, 0x7f, 0x57, 0x83, 0xc5, 0x74,
	0x7a, 0xdc, 0xc4, 0xf6, 0x7c, 0x9e, 0x4b, 0xf9, 0x8d, 0x0d, 0x59, 0xd6, 0xa1, 0x9e, 0xd8, 0x8f,
	0xb9, 0x8a, 0xc9, 0xfe, 0x65, 0x5a, 0xa1, 0x18, 0xff, 0x6c, 0x7f, 0x5d, 0x4a, 0xf6, 0xe4, 0xf1,
	0xcd, 0xe6, 0xcf, 0x4a, 0xa3, 0x17, 0x76, 0xa6, 0x6f, 0xe0, 0xcd, 0x75, 0xa6, 0x53, 0xf3, 0x45,
	0x30, 0x92, 0xc8, 0x46, 0x77, 0xcf, 0x24, 0x8c, 0x93, 0xa1, 0x6c, 0x11, 0xd6, 0x39, 0x66, 0x2b,
	0x8c, 0x13, 0x7c, 0x74, 0xc2, 0xbc, 0x5f, 0x1c, 0x08, 0x1e, 0x59, 0x37, 0x54, 0x8b, 0xc9, 0xc5,
	0x62, 0x1c, 0x98, 0x3c, 0x6e, 0x61, 0x35, 0x59, 0x11, 0x3b, 0x87, 0x3f, 0x64, 0xbf, 0xe3, 0x25,
	0x3e, 0x1a, 0xf7, 0x13, 0x2f, 0xcb, 0xf1, 0xa4, 0x0f, 0xf3, 0x87, 0x35, 0xe8, 0x31, 0xb2, 0x34,
	0xcc, 0xf8, 0x0a, 0x0c, 0x1e, 0x62, 0xaf, 0x73, 0x16, 0x96, 0x1e, 0x83, 0x6e, 0x49, 0x3f, 0xba,
	0x82, 0x54, 0xa9, 0x3b, 0x8c, 0x27, 0x34, 0x33, 0x20, 0x77, 0x84, 0x95, 0xa6, 0x01, 0xaa, 0x59,
	0x6d, 0x0d, 0x91, 0xf2, 0xc7, 0xb3, 0xda, 0xcc, 0x6b, 0xa0, 0x8b, 0xb7, 0x31, 0x7d, 0x9f, 0xbf,
	0x13, 0xaa, 0x1a, 0xce, 0xb5, 0xbc, 0xe1, 0xdc, 0xfc, 0x50, 0x58, 0xb3, 0xd3, 0x74, 0xb0, 0x63,
	0x4a, 0x94, 0x98, 0xda, 0x6b, 0x25, 0xa6, 0x76, 0xf3, 0x4f, 0x6a, 0xb0, 0x44, 0x35, 0x7f, 0xe0,
	0x45, 0xc9, 0xd4, 0xf6, 0x3f, 0xe1, 0x06, 0x50, 0xd1, 0xf0, 0xfd, 0xcc, 0xae, 0x27, 0x2e, 0x79,
	0x3d, 0xdb, 0xf7, 0x85, 0x55, 0x0f, 0x33, 0x5d, 0xe1, 0x56, 0x14, 0x4e, 0xf8, 0x2b, 0xb9, 0x6f,
	0xc3, 0xc0, 0x89, 0xc2, 0xc9, 0xd0, 0x4b, 0xdc, 0x2a, 0x03, 0x24, 0xa3, 0xde, 0x48, 0x5c, 0x32,
	0x40, 0xf6, 0x1c, 0xe9, 0x8b, 0xdd, 0x38, 0xb3, 0xd2, 0xa9, 0xf3, 0x06, 0x04, 0x0d, 0x05, 0x91,
	0x55, 0x9c, 0x4a, 0xe6, 0x0f, 0x6a, 0xd0, 0x63, 0x75, 0xa7, 0xf6, 0xc2, 0x6f, 0x62, 0x5f, 0x7c,
	0x38, 0x4d, 0x6b, 0x73, 0x77, 0x6a, 0x47, 0xce, 0xa7, 0x1d, 0x04, 0xf4, 0x15, 0x0d, 0x7a, 0xeb,
	0x76, 0x62, 0x4f, 0x84, 0xd8, 0x3e, 0xa6, 0x91, 0xb7, 0x60, 0x9e, 0xfb, 0x8b, 0x4f, 0x90, 0x7c,
	0x3c, 0x20, 0xd2, 0x34, 0xc1, 0x66, 0x05, 0x16, 0x78, 0xe1, 0x82, 0xda, 0xc4, 0x6b, 0xcd, 0x34,
	0xa6, 0x8c, 0xd6, 0x71, 0x7d, 0xfb, 0x28, 0xb3, 0x9f, 0xf5, 0x05, 0xed, 0x2d, 0x06, 0x17, 0x1a,
	0x6b, 0x16, 0x4f, 0xd5, 0xcc, 0xc5, 0x53, 0xbd, 0x04, 0x83, 0x74, 0x80, 0xe9, 0xd3, 0xce, 0x88,
	0x95, 0x42, 0x42, 0x88, 0xdc, 0xd9, 0x70, 0xcc, 0x3f, 0x0a, 0xa7, 0xd8, 0x6e, 0xd8, 0xa2, 0x2b,
	0xfd, 0xc9, 0x0c, 0xc8, 0x78, 0x26, 0x3d, 0x1e, 0x4e, 0xa8, 0x8c, 0x08, 0x63, 0x1b, 0xdb, 0x8f,
	0x79, 0x2d, 0xe8, 0xf8, 0xe7, 0xcf, 0x20, 0x09, 0x22, 0xfe, 0x8a, 0x09, 0x07, 0x73, 0x42, 0xf3,
	0x27, 0x34, 0x18, 0x70, 0x95, 0xe3, 0xbe, 0xbd, 0xcb, 0x13, 0x49, 0x4f, 0x8f, 0xa6, 0x3e, 0xb9,
	0xbd, 0xec, 0xe0, 0x61, 0xc1, 0x58, 0x7e, 0x8a, 0x63, 0x77, 0xec, 0xe0, 0xa1, 0x1c, 0xdf, 0x81,
	0xb6, 0x47, 0xf9, 0x78, 0xed, 0x30, 0x08, 0x9d, 0x91, 0x18, 0x5f, 0xb0, 0x17, 0xb9, 0xf1, 0x81,
	0xbc, 0x06, 0x5d, 0x0e, 0xc3, 0x39, 0x5d, 0x82, 0x39, 0x2f, 0x18, 0xfa, 0xf6, 0xae, 0x30, 0xe0,
	0x79, 0xc1, 0x7d, 0x7b, 0xd7, 0xfc, 0x23, 0x70, 0x9a, 0xf7, 0x6f, 0x3d, 0x6b, 0xf6, 0x89, 0x42,
	0x4f, 0x52, 0x3e, 0xac, 0xc9, 0x21, 0x71, 0x26, 0xf4, 0x7d, 0x7b, 0xb7, 0xf0, 0xca, 0x4b, 0xd7,
	0xb7, 0x77, 0xd3, 0xe7, 0x1a, 0xde, 0xe5, 0x69, 0x0f, 0x5b, 0xde, 0xe8, 0xe1, 0xfb, 0x13, 0xc1,
	0xad, 0x1f, 0x4d, 0x11, 0x35, 0x97, 0xe1, 0xf4, 0x4e, 0x64, 0x7b, 0x01, 0x37, 0x51, 0x64, 0xe9,
	0x59, 0xe6, 0x3a, 0x9c, 0xb5, 0x6c, 0xcf, 0x7f, 0x64, 0x1f, 0x6d, 0xf9, 0x76, 0xb2, 0x17, 0x46,
	0x63, 0x29, 0x77, 0xeb, 0x39, 0x98, 0x4f, 0x58, 0xb1, 0xe2, 0x28, 0x11, 0x9c, 0xf6, 0xf5, 0x2b,
	0x1a, 0x46, 0x7f, 0x79, 0x52, 0xc5, 0xc6, 0x4b, 0x39, 0x5d, 0x7b, 0x49, 0xf6, 0xc6, 0xf3, 0xae,
	0x7c, 0x22, 0x4a, 0xf6, 0x33, 0xd0, 0xc7, 0x87, 0x55, 0x27, 0xbc, 0xff, 0xfc, 0x38, 0xea, 0x31,
	0xa0, 0x18, 0x13, 0xc5, 0x5e, 0x66, 0x24, 0x4d, 0x11, 0x7b, 0x99, 0x12, 0x5c, 0x00, 0x20, 0x55,
	0xfd, 0x91, 0xed, 0x25, 0x3c, 0x84, 0xb7, 0x83, 0x90, 0x0f, 0x6d, 0x2f, 0x31, 0xff, 0xb3, 0x06,
	0x67, 0xb6, 0x22, 0xef, 0x90, 0x69, 0x7d, 0xb6, 0x63, 0x47, 0x9f, 0x76, 0xd0, 0xe4, 0x73, 0x30,
	0x4f, 0xde, 0xca, 0xbc, 0x6a, 0xd2, 0x47, 0x70, 0x7a, 0x80, 0x5f, 0x81, 0x01, 0xd1, 0x45, 0xac,
	0x57, 0x99, 0x44, 0xe8, 0x21, 0x14, 0xbb, 0xba, 0x81, 0x71, 0x48, 0x4a, 0x6d, 0xd2, 0x6f, 0x57,
	0xcd, 0x4b, 0xf5, 0x61, 0xca, 0xd2, 0x4f, 0x6b, 0x70, 0x7a, 0x6b, 0xba, 0xeb, 0x7b, 0xa3, 0x3f,
	0x78, 0x03, 0x35, 0x7f, 0xae, 0x06, 0x83, 0x5c, 0xf8, 0xc0, 0x69, 0x85, 0x0f, 0xfb, 0x9f, 0x00,
	0xc3, 0xe5, 0x7c, 0xf7, 0x8d, 0x82, 0xef, 0x5e, 0xd5, 0x2b, 0x9a, 0x27, 0xd0, 0x2b, 0xe6, 0xca,
	0xf4, 0x0a, 0xe5, 0x6d, 0xef, 0xd6, 0xec, 0x77, 0xd0, 0xdb, 0xb3, 0xdf, 0x41, 0xcf, 0x3f, 0xfe,
	0x9d, 0x8f, 0x2e, 0x80, 0x62, 0x74, 0xc1, 0xef, 0x6b, 0xa0, 0x4b, 0x53, 0xb9, 0xfb, 0xad, 0x3a,
	0x99, 0xf9, 0xa1, 0xcc, 0x15, 0x86, 0x62, 0xdc, 0x84, 0x33, 0xf8, 0xcb, 0x9c, 0xc2, 0x78, 0x29,
	0x69, 0x6a, 0x2d, 0xd4, 0xd4, 0x16, 0x09, 0xbd, 0x29, 0x8b, 0xee, 0xd8, 0xfc, 0xd5, 0x1a, 0x2c,
	0x4a, 0x79, 0x2a, 0x6b, 0x91, 0xe7, 0xee, 0xa1, 0x3a, 0x6f, 0x42, 0x7f, 0x6c, 0x4f, 0x8a, 0x41,
	0xfc, 0x63, 0x7b, 0x72, 0x3b, 0x4b, 0x51, 0x9d, 0x97, 0x68, 0xa4, 0x97, 0x55, 0xfa, 0x29, 0x15,
	0x6a, 0x4f, 0xb9, 0x75, 0xac, 0xcf, 0x5e, 0xc7, 0x46, 0x6e, 0x1d, 0x15, 0x16, 0x69, 0xe6, 0x58,
	0xa4, 0xfa, 0xd7, 0xbe, 0x8e, 0xfb, 0x85, 0xba, 0xb2, 0x6c, 0xbe, 0x76, 0x69, 0x36, 0xdf, 0x59,
	0x68, 0xd3, 0xb6, 0x4c, 0x43, 0xe9, 0x5a, 0xf8, 0x4d, 0x6d, 0x10, 0x0a, 0x07, 0xcf, 0x5f, 0x09,
	0x40, 0x08, 0xfe, 0x0a, 0xca, 0x3f, 0xd1, 0xe0, 0xd4, 0xad, 0x6c, 0xda, 0xd3, 0xb7, 0xeb, 0xbe,
	0x31, 0x0f, 0xd3, 0x3d, 0x0d, 0xbd, 0xf8, 0x28, 0x66, 0x1a, 0xeb, 0x3e, 0x53, 0x3c, 0xf9, 0xdc,
	0x75, 0x09, 0x86, 0xba, 0xe8, 0x09, 0xde, 0x2d, 0x31, 0x3d, 0x58, 0x90, 0x86, 0xe0, 0xc6, 0xc7,
	0xbf, 0x94, 0xf6, 0x3a, 0xb4, 0xc6, 0x44, 0x5b, 0xfc, 0x95, 0xa4, 0x92, 0xd9, 0xb0, 0x04, 0xb5,
	0xf9, 0x17, 0x6b, 0xd0, 0x17, 0x71, 0x78, 0xbb, 0x22, 0xcd, 0x50, 0xf9, 0x31, 0x40, 0x0a, 0xc4,
	0x93, 0x7f, 0x0c, 0x30, 0xaf, 0xf8, 0xd4, 0x8a, 0x8a, 0x8f, 0x2a, 0xd2, 0xeb, 0x79, 0x91, 0xfe,
	0x2c, 0x0c, 0x04, 0x3a, 0x98, 0x8e, 0x77, 0xdd, 0x88, 0x2b, 0xa5, 0x7d, 0x0e, 0x7d, 0x80, 0x40,
	0xe9, 0x9d, 0xd0, 0xa6, 0xf2, 0x4e, 0x28, 0xdb, 0xf7, 0xf8, 0xc3, 0xd6, 0x9c, 0x03, 0xfb, 0x56,
	0x0b, 0xbf, 0xc9, 0xe0, 0x95, 0x69, 0xb1, 0xc4, 0x80, 0xa9, 0x16, 0xcb, 0x6e, 0xdd, 0xa2, 0xe3,
	0x52, 0xef, 0xf8, 0xb3, 0x2f, 0x1c, 0xb3, 0x99, 0x86, 0x28, 0xbe, 0x07, 0x0b, 0x98, 0x06, 0x22,
	0x48, 0x9d, 0x13, 0x9c, 0x55, 0xe7, 0x01, 0x5f, 0xa8, 0x91, 0x45, 0x52, 0x9b, 0x01, 0xb8, 0xc9,
	0x8a, 0x90, 0x0e, 0xe5, 0xb2, 0xf5, 0xe4, 0x8a, 0xf9, 0x15, 0x5e, 0x72, 0x16, 0x15, 0xda, 0xb6,
	0xba, 0xe3, 0xec, 0xd0, 0x5c, 0xf9, 0x09, 0x0d, 0xc0, 0x72, 0xf7, 0xbd, 0x30, 0xd8, 0xa1, 0x27,
	0x95, 0xf4, 0x87, 0xd9, 0xe7, 0xf0, 0x41, 0x18, 0xb8, 0xfa, 0xb7, 0x19, 0x67, 0xe0, 0x94, 0x0c,
	0xe5, 0x17, 0x7e, 0x5d, 0x33, 0x4e, 0xc1, 0xbc, 0x82, 0xf8, 0xe0, 0x5d, 0xbd, 0x66, 0x9c, 0x83,
	0xd3, 0x32, 0xf0, 0xf6, 0xe3, 0x89, 0xeb, 0xe0, 0x9d, 0x43, 0xaf, 0xe7, 0x6b, 0xe2, 0xea, 0xab,
	0xde, 0x30, 0xce, 0xc0, 0x82, 0x8c, 0xb8, 0x3b, 0xf5, 0x1c, 0x57, 0xff, 0xbd, 0xdf, 0xaf, 0xaf,
	0xfc, 0x8c, 0x06, 0x0b, 0xfc, 0x87, 0x19, 0xc3, 0xc0, 0x4b, 0xc2, 0x88, 0xe7, 0xdf, 0x9f, 0x79,
	0x58, 0x80, 0x8a, 0xee, 0x96, 0x23, 0x3f, 0xf0, 0xdc, 0x47, 0xba, 0x66, 0x3c, 0x05, 0xcb, 0x25,
	0xc8, 0x0f, 0xc3, 0xc8, 0x77, 0xf4, 0x9a, 0x71, 0x01, 0xce, 0x96, 0x60, 0xe9, 0x98, 0xd7, 0xeb,
	0x15, 0x85, 0xd1, 0x14, 0xa1, 0x37, 0x2a, 0xb0, 0x18, 0x51, 0xa2, 0x37, 0x57, 0x7e, 0xac, 0x0b,
	0x20, 0x49, 0x56, 0x36, 0xd3, 0xd9, 0xa7, 0xe8, 0xfa, 0x12, 0x2c, 0xc8, 0x50, 0xdc, 0x6d, 0xba,
	0x86, 0x53, 0x2a, 0x81, 0xb3, 0x28, 0x29, 0xbd, 0x66, 0x9c, 0x06, 0x43, 0xc6, 0x51, 0x62, 0xa0,
	0xee, 0xe2, 0x54, 0xcb, 0x70, 0x32, 0x41, 0xeb, 0xfb, 0xc6, 0x59, 0x58, 0x2a, 0x54, 0xc6, 0x36,
	0xae, 0x7e, 0x50, 0x8e, 0xf2, 0xed, 0x7d, 0xdd, 0xcb, 0x37, 0x43, 0xd7, 0x62, 0xfd, 0x7b, 0xf3,
	0xe3, 0xd8, 0xb2, 0xe3, 0x58, 0x7f, 0x68, 0x3c, 0x0d, 0x17, 0x14, 0xa8, 0x64, 0xbe, 0xde, 0x0a,
	0xbd, 0x20, 0xd1, 0x7d, 0xe3, 0x0a, 0x5c, 0xae, 0x22, 0xb1, 0x5c, 0x3f, 0x1c, 0xd9, 0x89, 0xab,
	0x8f, 0xf3, 0x23, 0xcf, 0xee, 0x63, 0x7a, 0x60, 0x98, 0x70, 0xb1, 0x04, 0x27, 0xdd, 0x85, 0xf4,
	0xd0, 0x78, 0x06, 0x2e, 0x95, 0xd0, 0xc8, 0xb7, 0x0d, 0x7d, 0x62, 0x3c, 0x07, 0x66, 0x09, 0x51,
	0xee, 0xe2, 0xa1, 0x7f, 0x29, 0xbf, 0x3a, 0x58, 0x8b, 0xce, 0xe4, 0x8b, 0x02, 0xc6, 0xf8, 0x1a,
	0xfd, 0xe7, 0x34, 0xe3, 0x8c, 0x3a, 0x65, 0x94, 0x49, 0xa4, 0xff, 0xbc, 0x66, 0x2c, 0xa9, 0x73,
	0xb6, 0x13, 0xd9, 0x13, 0xfd, 0x17, 0x34, 0xe3, 0x19, 0x75, 0x3c, 0xf4, 0x83, 0xb6, 0xdc, 0x70,
	0x79, 0xc7, 0x73, 0x7d, 0x47, 0xff, 0x45, 0xcd, 0xb8, 0x90, 0x32, 0x59, 0x46, 0x24, 0xd6, 0xf6,
	0x9f, 0x17, 0xaa, 0x5e, 0xb7, 0x0f, 0x5d, 0xfd, 0x97, 0x34, 0x63, 0x59, 0x65, 0x06, 0xee, 0x31,
	0xd7, 0xbf, 0xac, 0x19, 0x67, 0x61, 0x51, 0x2d, 0x40, 0x16, 0x3f, 0xfd, 0x97, 0x35, 0xe3, 0x12,
	0x9c, 0x53, 0x9a, 0x52, 0x12, 0xb2, 0xf4, 0xdf, 0x6c, 0x19, 0x17, 0xd3, 0xdd, 0x22, 0x0d, 0x50,
	0xe0, 0xbf, 0xda, 0xca, 0x57, 0xa0, 0x66, 0x38, 0xe9, 0x5f, 0x6b, 0x19, 0xe7, 0xd5, 0xd5, 0xcd,
	0xde, 0x37, 0xd1, 0x7f, 0xab, 0x50, 0xbb, 0x12, 0x40, 0xae, 0xff, 0x97, 0x02, 0x5e, 0xc9, 0x6a,
	0xd2, 0xff, 0x6b, 0x69, 0xeb, 0x59, 0x2e, 0x92, 0xfe, 0xdf, 0x5a, 0xc6, 0x53, 0xa9, 0x9c, 0x10,
	0xcb, 0x20, 0x12, 0x84, 0xf4, 0xdf, 0x2e, 0x14, 0x57, 0x9d, 0x1b, 0xfa, 0xef, 0x14, 0x8a, 0x4b,
	0xde, 0x09, 0xfd, 0xbf, 0xb7, 0x8c, 0x2b, 0x39, 0xc6, 0x2b, 0xde, 0xce, 0xf4, 0xff, 0xd1, 0xca,
	0x2f, 0x79, 0xf1, 0x66, 0xa3, 0x7f, 0xbd, 0x95, 0x5f, 0x72, 0x6e, 0x27, 0xfc, 0x8e, 0xa9, 0x3b,
	0x75, 0xf5, 0x1f, 0x7b, 0x90, 0xaf, 0xa3, 0x68, 0xb0, 0xd2, 0x7f, 0xa9, 0x5d, 0x5c, 0x66, 0xb2,
	0xc2, 0xe8, 0x5f, 0x6e, 0xe7, 0xcb, 0x3f, 0xe0, 0x27, 0xb4, 0xb4, 0x18, 0x7f, 0xab, 0x93, 0xef,
	0x83, 0x20, 0xc2, 0xb9, 0xfe, 0xdb, 0x1d, 0xe3, 0x33, 0x70, 0xa5, 0x0c, 0x2d, 0x5e, 0x74, 0x4c,
	0xd7, 0xfc, 0xef, 0x74, 0xf2, 0x6b, 0xce, 0xfb, 0x78, 0x3b, 0x70, 0xf4, 0x5f, 0x9e, 0xcf, 0x23,
	0x33, 0x93, 0xab, 0xfe, 0x2f, 0xe6, 0xf3, 0xbc, 0x7d, 0x2b, 0x0a, 0x27, 0xfa, 0xaf, 0x14, 0xca,
	0x64, 0x99, 0x47, 0xfa, 0xbf, 0x9c, 0x37, 0x4c, 0x55, 0x10, 0x15, 0x2c, 0xad, 0xfa, 0xbf, 0x9a,
	0x5f, 0x79, 0x87, 0x0c, 0x8e, 0xa9, 0xc9, 0x90, 0x89, 0x3a, 0x19, 0x20, 0x84, 0x73, 0x01, 0x6e,
	0x4d, 0x03, 0x57, 0xd7, 0x56, 0xbe, 0x6c, 0x08, 0x53, 0xf8, 0x56, 0x14, 0x4e, 0xdc, 0x88, 0x4b,
	0xf8, 0xec, 0x38, 0x90, 0xc1, 0xc5, 0x43, 0x4a, 0xc1, 0x6e, 0xda, 0x13, 0x5d, 0x93, 0x8e, 0x21,
	0x05, 0x89, 0xf1, 0xbf, 0x7a, 0xad, 0xaa, 0xe6, 0xcd, 0xf0, 0xd0, 0xd5, 0x1b, 0xc6, 0xb3, 0xf0,
	0x74, 0x19, 0x56, 0x49, 0xb5, 0xd1, 0x9b, 0x55, 0x95, 0x30, 0xdd, 0x4e, 0x9f, 0xab, 0xc2, 0xa2,
	0x78, 0x67, 0x5b, 0xef, 0x5c, 0x19, 0x96, 0x1f, 0x0a, 0x6d, 0xe3, 0x12, 0x9c, 0x2f, 0xc3, 0x0b,
	0x39, 0xd5, 0x91, 0xce, 0x07, 0x85, 0x20, 0x0d, 0x3d, 0xd1, 0xa1, 0x6a, 0x18, 0xaa, 0x18, 0xe8,
	0x56, 0xd5, 0x94, 0x92, 0xe9, 0x3d, 0xe3, 0x32, 0x3c, 0x55, 0xda, 0x1b, 0xfe, 0x76, 0x9a, 0x3e,
	0x90, 0x4e, 0x12, 0x85, 0x22, 0x63, 0x1c, 0x7d, 0x5e, 0x3a, 0xaf, 0x72, 0x0b, 0x96, 0x39, 0x8d,
	0x74, 0xbd, 0x6a, 0xe5, 0x48, 0xe6, 0x2c, 0x54, 0x75, 0x45, 0x48, 0x79, 0xdd, 0xa8, 0xea, 0x8a,
	0x74, 0xe4, 0x9f, 0x32, 0xae, 0xa6, 0xbb, 0x4d, 0x1d, 0x50, 0xee, 0xb9, 0x58, 0x7d, 0xb1, 0xaa,
	0xd3, 0xf2, 0x0b, 0xad, 0xfa, 0x52, 0xd5, 0x1c, 0xa6, 0x0f, 0xa7, 0xea, 0xa7, 0xab, 0xc6, 0x45,
	0xca, 0xcd, 0x19, 0xe9, 0x98, 0x55, 0xd0, 0xd2, 0xb3, 0xa2, 0xfa, 0x72, 0x15, 0x91, 0xf4, 0xc2,
	0xa8, 0x7e, 0xae, 0xaa, 0xc7, 0xf2, 0x83, 0xa2, 0xfa, 0xf9, 0x2a, 0x2a, 0x3c, 0x7a, 0xc5, 0x62,
	0x3c, 0x55, 0xd5, 0x69, 0x3a, 0xa0, 0x2f, 0x54, 0x71, 0x31, 0x3f, 0xa7, 0x2f, 0x56, 0xed, 0x01,
	0x3c, 0xae, 0x2f, 0x55, 0x75, 0x41, 0x39, 0x90, 0x2f, 0x4b, 0xaa, 0x85, 0x4a, 0xa5, 0x9e, 0xa5,
	0x4f, 0x57, 0x71, 0xbb, 0x7a, 0xa4, 0x9a, 0x55, 0xd5, 0xe5, 0x4e, 0xd6, 0x67, 0xaa, 0xaa, 0x53,
	0x42, 0xbb, 0xf4, 0x2b, 0x55, 0x64, 0xea, 0x51, 0xfa, 0x6c, 0x15, 0xd7, 0x8a, 0x17, 0x40, 0xf5,
	0xe7, 0xaa, 0x26, 0x43, 0x56, 0xea, 0xf4, 0xe7, 0x2b, 0x57, 0x8d, 0x29, 0x62, 0xa3, 0x21, 0xb6,
	0xa8, 0x5f, 0x9d, 0x35, 0x46, 0xe9, 0xfc, 0xfe, 0x4c, 0x15, 0x3b, 0xc9, 0xc7, 0xf8, 0x4a, 0x55,
	0x93, 0xb2, 0xb7, 0x5f, 0x7f, 0xa1, 0x72, 0x2d, 0xa5, 0x97, 0xff, 0xf4, 0x17, 0xab, 0x3a, 0x96,
	0xd3, 0x0c, 0x5e, 0xaa, 0xea, 0x98, 0xac, 0x20, 0xbc, 0x6c, 0x3c, 0x0f, 0xcf, 0xcc, 0xde, 0xe7,
	0xf8, 0x03, 0xd4, 0xfa, 0x2b, 0x55, 0x7d, 0x93, 0xbd, 0xae, 0xfa, 0xab, 0x55, 0xd5, 0xe5, 0x62,
	0xbd, 0xf5, 0xd7, 0xaa, 0xd6, 0x72, 0xcd, 0x8e, 0xf1, 0x39, 0x76, 0xfd, 0x5a, 0x95, 0x04, 0x92,
	0x54, 0xef, 0xeb, 0xc6, 0x0a, 0x3c, 0x37, 0x83, 0x46, 0x56, 0xc1, 0x6f, 0x54, 0x6d, 0x33, 0xf2,
	0x1c, 0xe8, 0x37, 0xab, 0x06, 0xa8, 0xe8, 0xe8, 0x9f, 0xad, 0x1a, 0x60, 0x5e, 0x49, 0x7f, 0xbd,
	0x6a, 0xd3, 0x93, 0xb2, 0xfe, 0x86, 0xf1, 0x02, 0x3c, 0x5f, 0xda, 0x9b, 0x12, 0xfd, 0xec, 0xcd,
	0xca, 0x61, 0x16, 0xd5, 0xb4, 0xcf, 0x55, 0x4d, 0x9b, 0xa4, 0xc2, 0xbc, 0x55, 0x25, 0x51, 0x50,
	0x93, 0x79, 0xbb, 0xaa, 0x35, 0xaa, 0x81, 0x37, 0x84, 0x7a, 0x9d, 0xfe, 0xf9, 0xaa, 0xd6, 0x24,
	0xe5, 0xe7, 0x1d, 0xe3, 0x33, 0xf0, 0x6c, 0x75, 0x7d, 0xb2, 0x0e, 0xf4, 0xed, 0x95, 0x47, 0xa4,
	0x50, 0x13, 0xbf, 0x50, 0xc5, 0xd4, 0x92, 0x7f, 0x4e, 0x5f, 0xad, 0x3a, 0xf7, 0xb9, 0x65, 0x48,
	0x5f, 0xab, 0x5a, 0xeb, 0x07, 0x93, 0x51, 0x76, 0x60, 0xaf, 0xaf, 0xfc, 0x90, 0x86, 0x69, 0x23,
	0x3b, 0x6e, 0x14, 0xb1, 0x6b, 0x34, 0xa9, 0x53, 0xec, 0x26, 0x98, 0x07, 0x0a, 0x65, 0x8a, 0xcd,
	0x6b, 0x01, 0xc7, 0xb5, 0x11, 0xad, 0xbc, 0x24, 0x6a, 0x32, 0x35, 0x1c, 0x78, 0x01, 0x27, 0x89,
	0xd2, 0xfa, 0xca, 0x5f, 0xd2, 0xf8, 0x8f, 0xf3, 0x63, 0x2f, 0x4e, 0xc1, 0xfc, 0xc3, 0xf4, 0x4b,
	0xb6, 0x8f, 0x64, 0xc0, 0x8d, 0x60, 0xcf, 0x0e, 0x92, 0xe8, 0x48, 0xd7, 0x50, 0x63, 0xcc, 0x10,
	0xeb, 0xf6, 0xa1, 0xed, 0x47, 0x47, 0x7a, 0x0d, 0x2f, 0x92, 0x19, 0x7c, 0x35, 0x1a, 0x1d, 0xa0,
	0x79, 0x81, 0xdd, 0xa5, 0x33, 0xf0, 0xb6, 0xe7, 0xee, 0x33, 0x7d, 0x8e, 0x5d, 0xca, 0x33, 0xe8,
	0x87, 0xe9, 0xef, 0x72, 0xe8, 0xcd, 0x95, 0xef, 0x84, 0x05, 0x1a, 0xe5, 0x56, 0xe8, 0x7b, 0x89,
	0x37, 0xb2, 0xfd, 0xfb, 0x87, 0x46, 0x0f, 0xda, 0xef, 0xee, 0x6c, 0xdd, 0x7f, 0xf0, 0xde, 0x83,
	0xdb, 0xfa, 0xb7, 0x19, 0x1d, 0x68, 0x3e, 0xdc, 0xd9, 0xba, 0xbf, 0xad, 0x6b, 0xe2, 0xdf, 0x55,
	0xbd, 0x26, 0xfe, 0x5d, 0xd3, 0xeb, 0xe2, 0xdf, 0x75, 0xbd, 0x21, 0xfe, 0xbd, 0xa5, 0x37, 0x57,
	0xfe, 0x3d, 0x26, 0x73, 0xe7, 0x7f, 0x40, 0x92, 0x4f, 0x74, 0x1e, 0x2c, 0xe6, 0x81, 0xed, 0xf4,
	0x12, 0xec, 0x66, 0x78, 0xc8, 0x54, 0x4e, 0x31, 0xd9, 0x65, 0x78, 0x77, 0xd7, 0x1e, 0x3d, 0xd4,
	0x1b, 0xc8, 0x40, 0x25, 0x14, 0xe2, 0x3c, 0x9d, 0x43, 0x55, 0xa5, 0x84, 0x20, 0x53, 0x1c, 0x5b,
	0x55, 0x75, 0x08, 0x51, 0x52, 0xc7, 0xbd, 0x53, 0x42, 0x70, 0x3b, 0x70, 0x84, 0xea, 0xd0, 0xac,
	0x1a, 0x0a, 0x17, 0x5a, 0xed, 0xaa, 0x89, 0x60, 0x78, 0xbd, 0x53, 0xd5, 0x05, 0xb1, 0x51, 0x60,
	0xe5, 0x57, 0x1b, 0xea, 0xf4, 0x92, 0x2a, 0x56, 0xa8, 0x95, 0xc0, 0x62, 0x7a, 0xf3, 0xd3, 0xc7,
	0xb1, 0xc2, 0xa5, 0xaf, 0x6b, 0x85, 0x5e, 0x73, 0x0a, 0x52, 0x9e, 0x4a, 0x16, 0x80, 0xe3, 0xd9,
	0x02, 0xac, 0xb1, 0x05, 0xa8, 0xa3, 0x46, 0x50, 0x42, 0x81, 0xb7, 0xb9, 0x94, 0xac, 0xb8, 0x4e,
	0x9c, 0x4c, 0xac, 0x53, 0xb3, 0xb0, 0x4e, 0x9c, 0xe0, 0x8b, 0xa1, 0x17, 0xd0, 0xf9, 0x3d, 0x87,
	0x5a, 0x6c, 0x59, 0x1d, 0x18, 0xbc, 0x26, 0xe9, 0xbb, 0xad, 0xaa, 0x4e, 0xb1, 0xca, 0xb2, 0x85,
	0x6f, 0x57, 0x75, 0x4a, 0x2c, 0x7c, 0xa7, 0x6a, 0x7a, 0xee, 0x84, 0xbe, 0x1f, 0x3e, 0xd2, 0x01,
	0xa5, 0x53, 0x59, 0x8f, 0xa4, 0x50, 0x2e, 0xbd, 0x5b, 0x55, 0x0b, 0x67, 0x8d, 0x5e, 0xd5, 0x22,
	0x22, 0x6b, 0xf4, 0x8d, 0x57, 0xe0, 0x85, 0xf2, 0x36, 0x98, 0xee, 0xbe, 0xed, 0xfa, 0x7b, 0xea,
	0xa8, 0x06, 0xc6, 0x6b, 0xf0, 0x52, 0x75, 0x81, 0x3b, 0xf8, 0xae, 0xa4, 0x5a, 0x64, 0x7e, 0xe5,
	0x27, 0xb5, 0xf4, 0x97, 0xd0, 0x53, 0x5b, 0xa3, 0xf4, 0xcd, 0xd9, 0x29, 0x07, 0xbd, 0x13, 0x86,
	0x8e, 0xae, 0xe5, 0xa1, 0x1f, 0x32, 0x28, 0x09, 0x2c, 0x09, 0xba, 0x9d, 0xb8, 0xae, 0xaf, 0xd7,
	0x51, 0x1a, 0x4a, 0xe0, 0xf7, 0x3c, 0x5f, 0x6f, 0x18, 0xcb, 0xb0, 0x28, 0x03, 0xef, 0xba, 0xe3,
	0xed, 0x84, 0xb5, 0xd8, 0x44, 0x39, 0x29, 0x61, 0x84, 0xf5, 0x77, 0x6e, 0xe5, 0xc7, 0x35, 0xd9,
	0x31, 0xba, 0x43, 0xaf, 0xb8, 0x2e, 0x3e, 0x54, 0x41, 0xb2, 0x8d, 0x34, 0x87, 0x79, 0x4d, 0xd7,
	0xca, 0xc0, 0xd7, 0x78, 0xcf, 0x73, 0xe0, 0xeb, 0x7a, 0xbd, 0x0c, 0x7c, 0x43, 0x6f, 0x94, 0x81,
	0x6f, 0xea, 0xcd, 0x95, 0xbf, 0xa2, 0xc1, 0xe9, 0xa2, 0x39, 0x2e, 0x3d, 0x96, 0x0a, 0x50, 0xde,
	0xd3, 0x52, 0x1c, 0x9f, 0xe7, 0x52, 0x1c, 0x9f, 0xed, 0xf3, 0x70, 0xa6, 0x88, 0x13, 0x73, 0xce,
	0x8e, 0x83, 0x02, 0x12, 0x67, 0x7e, 0x65, 0xc8, 0x7b, 0x89, 0xec, 0xb2, 0xe9, 0x8e, 0x77, 0x31,
	0x5a, 0x9a, 0x72, 0xf8, 0x9f, 0x7a, 0x58, 0x8e, 0x12, 0xb3, 0xca, 0xce, 0xf7, 0x0a, 0x8a, 0xd5,
	0x88, 0x29, 0x47, 0xbe, 0xae, 0xad, 0xfc, 0xa2, 0x06, 0x7a, 0x3e, 0x45, 0x17, 0x47, 0x92, 0x07,
	0x8a, 0x5a, 0x99, 0x32, 0x56, 0xc0, 0xe1, 0x75, 0xe0, 0xfd, 0x89, 0xae, 0xa1, 0x94, 0x28, 0xa0,
	0x3f, 0xb4, 0xbd, 0x44, 0x34, 0x49, 0xb6, 0x8e, 0x02, 0x09, 0x3f, 0x51, 0x1a, 0xe5, 0x58, 0x2e,
	0xee, 0x9a, 0xe5, 0xad, 0xdf, 0xf2, 0xe2, 0x5d, 0x26, 0xe3, 0xe7, 0x56, 0x76, 0xa0, 0xb7, 0x36,
	0xdd, 0xdb, 0x5b, 0x4d, 0x92, 0x48, 0x6c, 0x13, 0xf9, 0x3b, 0x63, 0x37, 0x19, 0x8a, 0xae, 0x35,
	0x5d, 0x63, 0xbc, 0x2c, 0x83, 0xd1, 0x3b, 0x16, 0xbb, 0x7a, 0x6d, 0xe5, 0x47, 0x6b, 0x30, 0x60,
	0x92, 0x92, 0x36, 0x68, 0xca, 0xcb, 0x2a, 0x48, 0x51, 0x5c, 0x54, 0x8c, 0x24, 0xce, 0x51, 0x71,
	0x51, 0xb1, 0xb7, 0xc2, 0x31, 0xd3, 0x63, 0xc9, 0x53, 0x91, 0xaf, 0x53, 0xfc, 0x8a, 0xa8, 0x5e,
	0x2f, 0x2b, 0x6a, 0xd9, 0x81, 0x13, 0x8e, 0xf5, 0x06, 0xb2, 0x57, 0xa1, 0x51, 0xda, 0x8a, 0xcd,
	0xb2, 0xbe, 0xae, 0x4d, 0xa3, 0x40, 0x9f, 0x23, 0xf1, 0xaa, 0x62, 0xf8, 0xe4, 0xa2, 0x06, 0xdc,
	0x42, 0x6d, 0x27, 0x5f, 0xef, 0xa6, 0x3e, 0x5a, 0xf9, 0x61, 0x4d, 0x04, 0x5c, 0xd2, 0x12, 0xe0,
	0x9c, 0xb0, 0xfe, 0xe7, 0x81, 0xc3, 0x07, 0x61, 0xf2, 0xde, 0xc4, 0x0d, 0xf8, 0xd6, 0x29, 0xa0,
	0x11, 0xa7, 0x95, 0x17, 0xe5, 0x1e, 0x69, 0x3e, 0x33, 0x05, 0xf4, 0x56, 0x14, 0x26, 0xec, 0x64,
	0xaa, 0xaf, 0xfc, 0x21, 0x11, 0xd3, 0xb7, 0x91, 0x7a, 0xb1, 0xb7, 0xc5, 0xcf, 0x99, 0x9f, 0x7f,
	0x58, 0x8e, 0x62, 0x1d, 0xd3, 0xbf, 0x6d, 0x16, 0xc1, 0x77, 0xb9, 0xb1, 0xae, 0xad, 0xfc, 0x09,
	0x0d, 0x06, 0x4c, 0xb1, 0x94, 0xc6, 0xc9, 0x26, 0x5b, 0x05, 0x49, 0xa3, 0x64, 0x93, 0x9d, 0x43,
	0xf2, 0x31, 0x96, 0x14, 0xcb, 0x46, 0x58, 0x82, 0xcc, 0xc6, 0xb7, 0x03, 0x8b, 0x0c, 0x57, 0x18,
	0x1d, 0x9b, 0x96, 0x32, 0x04, 0x1f, 0x5b, 0x25, 0x9a, 0x46, 0xf6, 0xfd, 0x1a, 0x2c, 0x2a, 0x16,
	0xc4, 0x35, 0x7b, 0x1f, 0xc7, 0xc7, 0xc4, 0x51, 0x1e, 0xc1, 0x99, 0xbb, 0x0c, 0x85, 0xf7, 0x00,
	0x2d, 0xdb, 0xb7, 0x12, 0x4a, 0x28, 0x0f, 0xb5, 0xf2, 0x82, 0xbe, 0xbd, 0xcf, 0xb4, 0xf1, 0x26,
	0xa6, 0xae, 0x67, 0x69, 0x55, 0xc4, 0xb0, 0x32, 0x64, 0x88, 0x81, 0x8b, 0x7c, 0x48, 0x2a, 0x46,
	0xb2, 0x69, 0x93, 0xd6, 0xae, 0xa2, 0xb9, 0x68, 0x2e, 0x22, 0xb8, 0x5c, 0x2e, 0x6b, 0x8a, 0x84,
	0x32, 0xb2, 0xbe, 0x82, 0xa1, 0xb3, 0x10, 0xb7, 0x9a, 0x02, 0x97, 0x8e, 0x43, 0x52, 0x37, 0x64,
	0xe4, 0xaa, 0x73, 0x68, 0x07, 0x8a, 0xe9, 0x9d, 0x6f, 0xbb, 0x5c, 0xa3, 0xe9, 0x8f, 0x60, 0xbc,
	0x96, 0xea, 0xbb, 0x15, 0x04, 0xd7, 0x52, 0xbd, 0xa8, 0x82, 0xe0, 0x7a, 0xaa, 0xae, 0x56, 0x10,
	0xdc, 0xd0, 0x61, 0x36, 0xc1, 0x4d, 0xbd, 0x5b, 0x32, 0x94, 0x82, 0x1b, 0x41, 0xef, 0x95, 0xcc,
	0xd2, 0xed, 0xc0, 0xd1, 0x7b, 0x78, 0xb7, 0x57, 0xe1, 0x5b, 0x6e, 0xc4, 0xae, 0xf3, 0x6c, 0x32,
	0x76, 0xdc, 0x98, 0x92, 0x77, 0xf4, 0x45, 0x64, 0x0c, 0x95, 0x90, 0xbb, 0x3b, 0x97, 0x4a, 0xd6,
	0x86, 0xb4, 0xc7, 0xd3, 0xe2, 0x8a, 0x57, 0xc6, 0x06, 0xc8, 0x8d, 0x67, 0xc4, 0x05, 0x51, 0x6e,
	0x9f, 0xcb, 0xc3, 0x65, 0xae, 0x7b, 0xce, 0xe8, 0x1b, 0x1b, 0xc2, 0xd9, 0x73, 0x35, 0x5d, 0x5b,
	0xf9, 0x5f, 0x1a, 0x9c, 0x4d, 0x49, 0x49, 0x8d, 0x95, 0x1c, 0xbe, 0xec, 0x80, 0xad, 0xc4, 0x8a,
	0xf3, 0x80, 0x74, 0xe2, 0x6a, 0xa2, 0x84, 0x30, 0xba, 0xc6, 0xf5, 0xc8, 0x2a, 0x4a, 0x02, 0x6f,
	0xdb, 0x63, 0x0e, 0xd4, 0x6b, 0x68, 0x5d, 0xa8, 0x2e, 0x40, 0x80, 0xb5, 0xa3, 0xad, 0x30, 0xd6,
	0xeb, 0xc6, 0x8b, 0x70, 0xf5, 0x04, 0xb4, 0x96, 0x1d, 0xb0, 0x0b, 0xea, 0xca, 0x8f, 0x6a, 0xd9,
	0xd3, 0x15, 0xa9, 0x4c, 0x10, 0x00, 0x5a, 0x06, 0x32, 0x38, 0x67, 0x9b, 0x8e, 0x50, 0x99, 0xce,
	0x4a, 0xa1, 0x04, 0x29, 0x82, 0x2c, 0xb4, 0x35, 0xae, 0x6a, 0x73, 0xa0, 0xf4, 0xa6, 0x0a, 0xd5,
	0x96, 0x6e, 0x3b, 0xc2, 0xa7, 0xae, 0xcb, 0xc6, 0xca, 0xf7, 0x41, 0x3f, 0xcd, 0xb3, 0x45, 0xe1,
	0xc7, 0xb8, 0x43, 0x81, 0x0c, 0xef, 0x79, 0x4e, 0x2a, 0x82, 0x55, 0x0c, 0xe6, 0x44, 0x0b, 0xa7,
	0xbb, 0x82, 0xe1, 0x19, 0xd5, 0x3c, 0xc6, 0x41, 0xc5, 0xf1, 0xbc, 0x70, 0xbd, 0xbe, 0xf2, 0x3e,
	0x2c, 0xae, 0x4e, 0x93, 0x50, 0x42, 0x93, 0x16, 0x60, 0xc0, 0xe0, 0x5d, 0x06, 0x9c, 0x84, 0x51,
	0xba, 0xde, 0xa7, 0x60, 0x3e, 0x83, 0xdd, 0x0a, 0x99, 0x52, 0x83, 0x2a, 0x78, 0x06, 0xbc, 0xe3,
	0x05, 0x5e, 0x7c, 0xa0, 0xd7, 0x98, 0x8e, 0x6c, 0x14, 0xd3, 0xc0, 0x70, 0x6b, 0x16, 0xc1, 0xd2,
	0x19, 0xc3, 0x74, 0xac, 0x12, 0x82, 0x75, 0x3b, 0xd8, 0x0e, 0xec, 0x04, 0x79, 0xa9, 0x82, 0x84,
	0xf0, 0xd9, 0xd5, 0xbd, 0x84, 0x84, 0x52, 0xc4, 0x70, 0xd8, 0x7f, 0xbc, 0xa6, 0xa6, 0xb4, 0xa5,
	0xda, 0x71, 0x1e, 0x28, 0x7b, 0xc0, 0x0a, 0x38, 0x8a, 0x0e, 0xa0, 0x9b, 0x6c, 0x01, 0x99, 0xc6,
	0x05, 0xd4, 0xf0, 0x0e, 0x5f, 0xc0, 0x2b, 0x26, 0xc3, 0x3a, 0x72, 0x7c, 0x81, 0x06, 0x45, 0x49,
	0xde, 0x6a, 0xd8, 0xc0, 0x8d, 0x57, 0xa0, 0xbd, 0x1d, 0x38, 0x79, 0xca, 0x26, 0x32, 0x77, 0x81,
	0xf2, 0xbe, 0xbd, 0xab, 0xb7, 0x56, 0x7e, 0x49, 0x83, 0x85, 0x55, 0xc7, 0x59, 0x8d, 0xc6, 0x47,
	0xdb, 0xa8, 0x9f, 0xa7, 0x1a, 0x40, 0x01, 0x2a, 0x2b, 0x80, 0x45, 0x24, 0x19, 0x2b, 0xb5, 0x8a,
	0xa2, 0xeb, 0xa4, 0x05, 0xb0, 0x8e, 0x14, 0x91, 0x5b, 0x63, 0xbd, 0x8e, 0x4c, 0x51, 0x44, 0xa5,
	0x5e, 0xa6, 0x06, 0xca, 0xeb, 0x22, 0xc1, 0x26, 0x65, 0x6e, 0x25, 0xe1, 0xbd, 0x70, 0xec, 0xa2,
	0x79, 0xa9, 0x2b, 0x05, 0x43, 0x73, 0xab, 0x55, 0xfa, 0x2d, 0x86, 0xc0, 0x76, 0x90, 0x0c, 0xfe,
	0x90, 0xf2, 0xa7, 0x75, 0xad, 0x80, 0xb1, 0xa6, 0x41, 0x80, 0xec, 0xb4, 0xf2, 0x5d, 0xb0, 0x98,
	0x9d, 0x20, 0x92, 0xb6, 0xc4, 0x96, 0xbd, 0x0c, 0x31, 0x94, 0x98, 0xb9, 0x14, 0x2f, 0xf4, 0x1f,
	0x6d, 0x77, 0x0e, 0x43, 0x9f, 0xae, 0xff, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xbb, 0x58,
	0xab, 0x64, 0xa1, 0x00, 0x00,
}
