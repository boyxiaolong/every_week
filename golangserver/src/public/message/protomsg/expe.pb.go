// Code generated by protoc-gen-go. DO NOT EDIT.
// source: expe.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 状态通知(登录, 变更同步)
type MsgGS2CLPlayerExpeStatusNotice struct {
	HardMode        bool   `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	IsExistReward   bool   `protobuf:"varint,2,opt,name=is_exist_reward,json=isExistReward" json:"is_exist_reward,omitempty"`
	NextRefreshTime uint64 `protobuf:"varint,3,opt,name=next_refresh_time,json=nextRefreshTime" json:"next_refresh_time,omitempty"`
}

func (m *MsgGS2CLPlayerExpeStatusNotice) Reset()                    { *m = MsgGS2CLPlayerExpeStatusNotice{} }
func (m *MsgGS2CLPlayerExpeStatusNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeStatusNotice) ProtoMessage()               {}
func (*MsgGS2CLPlayerExpeStatusNotice) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0} }

func (m *MsgGS2CLPlayerExpeStatusNotice) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeStatusNotice) GetIsExistReward() bool {
	if m != nil {
		return m.IsExistReward
	}
	return false
}

func (m *MsgGS2CLPlayerExpeStatusNotice) GetNextRefreshTime() uint64 {
	if m != nil {
		return m.NextRefreshTime
	}
	return 0
}

// 请求关卡列表
type MsgCL2GSPlayerExpeLevelListRequest struct {
	HardMode bool `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
}

func (m *MsgCL2GSPlayerExpeLevelListRequest) Reset()         { *m = MsgCL2GSPlayerExpeLevelListRequest{} }
func (m *MsgCL2GSPlayerExpeLevelListRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeLevelListRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeLevelListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{1}
}

func (m *MsgCL2GSPlayerExpeLevelListRequest) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

// 响应关卡列表
type MsgGS2CLPlayerExpeLevelListReply struct {
	ErrorCode int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	HardMode  bool                   `protobuf:"varint,2,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelInfo []*PlayerExpeLevelInfo `protobuf:"bytes,3,rep,name=level_info,json=levelInfo" json:"level_info,omitempty"`
}

func (m *MsgGS2CLPlayerExpeLevelListReply) Reset()         { *m = MsgGS2CLPlayerExpeLevelListReply{} }
func (m *MsgGS2CLPlayerExpeLevelListReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeLevelListReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeLevelListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{2}
}

func (m *MsgGS2CLPlayerExpeLevelListReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeLevelListReply) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeLevelListReply) GetLevelInfo() []*PlayerExpeLevelInfo {
	if m != nil {
		return m.LevelInfo
	}
	return nil
}

// 请求领取关卡奖励
type MsgCL2GSPlayerExpeLevelRewardRequest struct {
	HardMode bool   `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelId  uint32 `protobuf:"varint,2,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
}

func (m *MsgCL2GSPlayerExpeLevelRewardRequest) Reset()         { *m = MsgCL2GSPlayerExpeLevelRewardRequest{} }
func (m *MsgCL2GSPlayerExpeLevelRewardRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeLevelRewardRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeLevelRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{3}
}

func (m *MsgCL2GSPlayerExpeLevelRewardRequest) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgCL2GSPlayerExpeLevelRewardRequest) GetLevelId() uint32 {
	if m != nil {
		return m.LevelId
	}
	return 0
}

// 响应领取关卡奖励
type MsgGS2CLPlayerExpeLevelRewardReply struct {
	ErrorCode int32       `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	HardMode  bool        `protobuf:"varint,2,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelId   uint32      `protobuf:"varint,3,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	Reward    []*Resource `protobuf:"bytes,4,rep,name=reward" json:"reward,omitempty"`
}

func (m *MsgGS2CLPlayerExpeLevelRewardReply) Reset()         { *m = MsgGS2CLPlayerExpeLevelRewardReply{} }
func (m *MsgGS2CLPlayerExpeLevelRewardReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeLevelRewardReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeLevelRewardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{4}
}

func (m *MsgGS2CLPlayerExpeLevelRewardReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeLevelRewardReply) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeLevelRewardReply) GetLevelId() uint32 {
	if m != nil {
		return m.LevelId
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeLevelRewardReply) GetReward() []*Resource {
	if m != nil {
		return m.Reward
	}
	return nil
}

// 请求一键领取关卡奖励
type MsgCL2GSPlayerExpeBatchCollectRequest struct {
	HardMode bool `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
}

func (m *MsgCL2GSPlayerExpeBatchCollectRequest) Reset()         { *m = MsgCL2GSPlayerExpeBatchCollectRequest{} }
func (m *MsgCL2GSPlayerExpeBatchCollectRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeBatchCollectRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeBatchCollectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{5}
}

func (m *MsgCL2GSPlayerExpeBatchCollectRequest) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

// 响应一键领取关卡奖励
type MsgGS2CLPlayerExpeBatchCollectReply struct {
	ErrorCode int32       `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	HardMode  bool        `protobuf:"varint,2,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	Reward    []*Resource `protobuf:"bytes,3,rep,name=reward" json:"reward,omitempty"`
}

func (m *MsgGS2CLPlayerExpeBatchCollectReply) Reset()         { *m = MsgGS2CLPlayerExpeBatchCollectReply{} }
func (m *MsgGS2CLPlayerExpeBatchCollectReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeBatchCollectReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeBatchCollectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{6}
}

func (m *MsgGS2CLPlayerExpeBatchCollectReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeBatchCollectReply) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeBatchCollectReply) GetReward() []*Resource {
	if m != nil {
		return m.Reward
	}
	return nil
}

// 关卡挑战结果通知(战斗结束时同步)
type MsgGS2CLPlayerExpeBattleResultNotice struct {
	HardMode      bool        `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelId       uint32      `protobuf:"varint,2,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	IsWin         bool        `protobuf:"varint,3,opt,name=is_win,json=isWin" json:"is_win,omitempty"`
	Star          int32       `protobuf:"varint,4,opt,name=star" json:"star,omitempty"`
	ConditionStar []int32     `protobuf:"varint,5,rep,packed,name=condition_star,json=conditionStar" json:"condition_star,omitempty"`
	IsFirstReward bool        `protobuf:"varint,6,opt,name=is_first_reward,json=isFirstReward" json:"is_first_reward,omitempty"`
	Reward        []*Resource `protobuf:"bytes,7,rep,name=reward" json:"reward,omitempty"`
}

func (m *MsgGS2CLPlayerExpeBattleResultNotice) Reset()         { *m = MsgGS2CLPlayerExpeBattleResultNotice{} }
func (m *MsgGS2CLPlayerExpeBattleResultNotice) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeBattleResultNotice) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeBattleResultNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{7}
}

func (m *MsgGS2CLPlayerExpeBattleResultNotice) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeBattleResultNotice) GetLevelId() uint32 {
	if m != nil {
		return m.LevelId
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeBattleResultNotice) GetIsWin() bool {
	if m != nil {
		return m.IsWin
	}
	return false
}

func (m *MsgGS2CLPlayerExpeBattleResultNotice) GetStar() int32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeBattleResultNotice) GetConditionStar() []int32 {
	if m != nil {
		return m.ConditionStar
	}
	return nil
}

func (m *MsgGS2CLPlayerExpeBattleResultNotice) GetIsFirstReward() bool {
	if m != nil {
		return m.IsFirstReward
	}
	return false
}

func (m *MsgGS2CLPlayerExpeBattleResultNotice) GetReward() []*Resource {
	if m != nil {
		return m.Reward
	}
	return nil
}

// 请求挑战远征关卡
type MsgCL2GSPlayerExpeChallengeLevelRequest struct {
	HardMode  bool        `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelId   uint32      `protobuf:"varint,2,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	ArmyArray []*ArmyData `protobuf:"bytes,3,rep,name=army_array,json=armyArray" json:"army_array,omitempty"`
	HqArmy    *ArmyData   `protobuf:"bytes,4,opt,name=hq_army,json=hqArmy" json:"hq_army,omitempty"`
}

func (m *MsgCL2GSPlayerExpeChallengeLevelRequest) Reset() {
	*m = MsgCL2GSPlayerExpeChallengeLevelRequest{}
}
func (m *MsgCL2GSPlayerExpeChallengeLevelRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeChallengeLevelRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeChallengeLevelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{8}
}

func (m *MsgCL2GSPlayerExpeChallengeLevelRequest) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgCL2GSPlayerExpeChallengeLevelRequest) GetLevelId() uint32 {
	if m != nil {
		return m.LevelId
	}
	return 0
}

func (m *MsgCL2GSPlayerExpeChallengeLevelRequest) GetArmyArray() []*ArmyData {
	if m != nil {
		return m.ArmyArray
	}
	return nil
}

func (m *MsgCL2GSPlayerExpeChallengeLevelRequest) GetHqArmy() *ArmyData {
	if m != nil {
		return m.HqArmy
	}
	return nil
}

// 响应挑战远征关卡
type MsgGS2CLPlayerExpeChallengeLevelReply struct {
	ErrorCode int32       `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	HardMode  bool        `protobuf:"varint,2,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelId   uint32      `protobuf:"varint,3,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	ArmyArray []*ArmyData `protobuf:"bytes,4,rep,name=army_array,json=armyArray" json:"army_array,omitempty"`
	HqArmy    *ArmyData   `protobuf:"bytes,5,opt,name=hq_army,json=hqArmy" json:"hq_army,omitempty"`
	RegionId  uint64      `protobuf:"varint,6,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
}

func (m *MsgGS2CLPlayerExpeChallengeLevelReply) Reset()         { *m = MsgGS2CLPlayerExpeChallengeLevelReply{} }
func (m *MsgGS2CLPlayerExpeChallengeLevelReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeChallengeLevelReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeChallengeLevelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{9}
}

func (m *MsgGS2CLPlayerExpeChallengeLevelReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeChallengeLevelReply) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeChallengeLevelReply) GetLevelId() uint32 {
	if m != nil {
		return m.LevelId
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeChallengeLevelReply) GetArmyArray() []*ArmyData {
	if m != nil {
		return m.ArmyArray
	}
	return nil
}

func (m *MsgGS2CLPlayerExpeChallengeLevelReply) GetHqArmy() *ArmyData {
	if m != nil {
		return m.HqArmy
	}
	return nil
}

func (m *MsgGS2CLPlayerExpeChallengeLevelReply) GetRegionId() uint64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

// 请求退出远征关卡
type MsgCL2GSPlayerExpeExitLevelRequest struct {
}

func (m *MsgCL2GSPlayerExpeExitLevelRequest) Reset()         { *m = MsgCL2GSPlayerExpeExitLevelRequest{} }
func (m *MsgCL2GSPlayerExpeExitLevelRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeExitLevelRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeExitLevelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{10}
}

// 响应退出远征关卡
type MsgGS2CLPlayerExpeExitLevelReply struct {
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLPlayerExpeExitLevelReply) Reset()         { *m = MsgGS2CLPlayerExpeExitLevelReply{} }
func (m *MsgGS2CLPlayerExpeExitLevelReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeExitLevelReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeExitLevelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{11}
}

func (m *MsgGS2CLPlayerExpeExitLevelReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 远征副本就绪
type MsgGS2CLPlayerExpeReadyNotice struct {
}

func (m *MsgGS2CLPlayerExpeReadyNotice) Reset()                    { *m = MsgGS2CLPlayerExpeReadyNotice{} }
func (m *MsgGS2CLPlayerExpeReadyNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeReadyNotice) ProtoMessage()               {}
func (*MsgGS2CLPlayerExpeReadyNotice) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{12} }

// 请求解锁动画列表
type MsgCL2GSPlayerExpeUnlockListRequest struct {
	HardMode bool `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
}

func (m *MsgCL2GSPlayerExpeUnlockListRequest) Reset()         { *m = MsgCL2GSPlayerExpeUnlockListRequest{} }
func (m *MsgCL2GSPlayerExpeUnlockListRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeUnlockListRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeUnlockListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{13}
}

func (m *MsgCL2GSPlayerExpeUnlockListRequest) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

// 响应解锁动画列表
type MsgGS2CLPlayerExpeUnlockListReply struct {
	ErrorCode     int32    `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	HardMode      bool     `protobuf:"varint,2,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	ChapterIdList []uint32 `protobuf:"varint,3,rep,packed,name=chapter_id_list,json=chapterIdList" json:"chapter_id_list,omitempty"`
}

func (m *MsgGS2CLPlayerExpeUnlockListReply) Reset()         { *m = MsgGS2CLPlayerExpeUnlockListReply{} }
func (m *MsgGS2CLPlayerExpeUnlockListReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeUnlockListReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeUnlockListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{14}
}

func (m *MsgGS2CLPlayerExpeUnlockListReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeUnlockListReply) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeUnlockListReply) GetChapterIdList() []uint32 {
	if m != nil {
		return m.ChapterIdList
	}
	return nil
}

// 请求标记已解锁动画
type MsgCL2GSPlayerExpeUnlockAddRequest struct {
	HardMode  bool   `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	ChapterId uint32 `protobuf:"varint,2,opt,name=chapter_id,json=chapterId" json:"chapter_id,omitempty"`
}

func (m *MsgCL2GSPlayerExpeUnlockAddRequest) Reset()         { *m = MsgCL2GSPlayerExpeUnlockAddRequest{} }
func (m *MsgCL2GSPlayerExpeUnlockAddRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeUnlockAddRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeUnlockAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{15}
}

func (m *MsgCL2GSPlayerExpeUnlockAddRequest) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgCL2GSPlayerExpeUnlockAddRequest) GetChapterId() uint32 {
	if m != nil {
		return m.ChapterId
	}
	return 0
}

// 响应标记已解锁动画
type MsgGS2CLPlayerExpeUnlockAddReply struct {
	ErrorCode int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	HardMode  bool   `protobuf:"varint,2,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	ChapterId uint32 `protobuf:"varint,3,opt,name=chapter_id,json=chapterId" json:"chapter_id,omitempty"`
}

func (m *MsgGS2CLPlayerExpeUnlockAddReply) Reset()         { *m = MsgGS2CLPlayerExpeUnlockAddReply{} }
func (m *MsgGS2CLPlayerExpeUnlockAddReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeUnlockAddReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeUnlockAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{16}
}

func (m *MsgGS2CLPlayerExpeUnlockAddReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeUnlockAddReply) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeUnlockAddReply) GetChapterId() uint32 {
	if m != nil {
		return m.ChapterId
	}
	return 0
}

// 刷怪波次信息通知
type MsgGS2CLPlayerExpeRefreshWaveNotice struct {
	WaveInfo []*ExpeWaveInfo `protobuf:"bytes,1,rep,name=wave_info,json=waveInfo" json:"wave_info,omitempty"`
}

func (m *MsgGS2CLPlayerExpeRefreshWaveNotice) Reset()         { *m = MsgGS2CLPlayerExpeRefreshWaveNotice{} }
func (m *MsgGS2CLPlayerExpeRefreshWaveNotice) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeRefreshWaveNotice) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeRefreshWaveNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{17}
}

func (m *MsgGS2CLPlayerExpeRefreshWaveNotice) GetWaveInfo() []*ExpeWaveInfo {
	if m != nil {
		return m.WaveInfo
	}
	return nil
}

// 请求剧情奖励信息列表
type MsgCL2GSPlayerExpeStoryRewardInfoRequest struct {
	HardMode bool `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
}

func (m *MsgCL2GSPlayerExpeStoryRewardInfoRequest) Reset() {
	*m = MsgCL2GSPlayerExpeStoryRewardInfoRequest{}
}
func (m *MsgCL2GSPlayerExpeStoryRewardInfoRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeStoryRewardInfoRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeStoryRewardInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{18}
}

func (m *MsgCL2GSPlayerExpeStoryRewardInfoRequest) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

// 响应剧情奖励信息列表
type MsgGS2CLPlayerExpeStoryRewardInfoReply struct {
	ErrorCode   int32    `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	HardMode    bool     `protobuf:"varint,2,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelIdList []uint32 `protobuf:"varint,3,rep,packed,name=level_id_list,json=levelIdList" json:"level_id_list,omitempty"`
}

func (m *MsgGS2CLPlayerExpeStoryRewardInfoReply) Reset() {
	*m = MsgGS2CLPlayerExpeStoryRewardInfoReply{}
}
func (m *MsgGS2CLPlayerExpeStoryRewardInfoReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeStoryRewardInfoReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeStoryRewardInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{19}
}

func (m *MsgGS2CLPlayerExpeStoryRewardInfoReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeStoryRewardInfoReply) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeStoryRewardInfoReply) GetLevelIdList() []uint32 {
	if m != nil {
		return m.LevelIdList
	}
	return nil
}

// 请求领取剧情奖励
type MsgCL2GSPlayerExpeStoryRewardClaimRequest struct {
	HardMode bool   `protobuf:"varint,1,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelId  uint32 `protobuf:"varint,2,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
}

func (m *MsgCL2GSPlayerExpeStoryRewardClaimRequest) Reset() {
	*m = MsgCL2GSPlayerExpeStoryRewardClaimRequest{}
}
func (m *MsgCL2GSPlayerExpeStoryRewardClaimRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSPlayerExpeStoryRewardClaimRequest) ProtoMessage()    {}
func (*MsgCL2GSPlayerExpeStoryRewardClaimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{20}
}

func (m *MsgCL2GSPlayerExpeStoryRewardClaimRequest) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgCL2GSPlayerExpeStoryRewardClaimRequest) GetLevelId() uint32 {
	if m != nil {
		return m.LevelId
	}
	return 0
}

// 响应领取剧情奖励
type MsgGS2CLPlayerExpeStoryRewardClaimReply struct {
	ErrorCode int32       `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	HardMode  bool        `protobuf:"varint,2,opt,name=hard_mode,json=hardMode" json:"hard_mode,omitempty"`
	LevelId   uint32      `protobuf:"varint,3,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	Reward    []*Resource `protobuf:"bytes,4,rep,name=reward" json:"reward,omitempty"`
}

func (m *MsgGS2CLPlayerExpeStoryRewardClaimReply) Reset() {
	*m = MsgGS2CLPlayerExpeStoryRewardClaimReply{}
}
func (m *MsgGS2CLPlayerExpeStoryRewardClaimReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPlayerExpeStoryRewardClaimReply) ProtoMessage()    {}
func (*MsgGS2CLPlayerExpeStoryRewardClaimReply) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{21}
}

func (m *MsgGS2CLPlayerExpeStoryRewardClaimReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeStoryRewardClaimReply) GetHardMode() bool {
	if m != nil {
		return m.HardMode
	}
	return false
}

func (m *MsgGS2CLPlayerExpeStoryRewardClaimReply) GetLevelId() uint32 {
	if m != nil {
		return m.LevelId
	}
	return 0
}

func (m *MsgGS2CLPlayerExpeStoryRewardClaimReply) GetReward() []*Resource {
	if m != nil {
		return m.Reward
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgGS2CLPlayerExpeStatusNotice)(nil), "protomsg.MsgGS2CLPlayerExpeStatusNotice")
	proto.RegisterType((*MsgCL2GSPlayerExpeLevelListRequest)(nil), "protomsg.MsgCL2GSPlayerExpeLevelListRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeLevelListReply)(nil), "protomsg.MsgGS2CLPlayerExpeLevelListReply")
	proto.RegisterType((*MsgCL2GSPlayerExpeLevelRewardRequest)(nil), "protomsg.MsgCL2GSPlayerExpeLevelRewardRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeLevelRewardReply)(nil), "protomsg.MsgGS2CLPlayerExpeLevelRewardReply")
	proto.RegisterType((*MsgCL2GSPlayerExpeBatchCollectRequest)(nil), "protomsg.MsgCL2GSPlayerExpeBatchCollectRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeBatchCollectReply)(nil), "protomsg.MsgGS2CLPlayerExpeBatchCollectReply")
	proto.RegisterType((*MsgGS2CLPlayerExpeBattleResultNotice)(nil), "protomsg.MsgGS2CLPlayerExpeBattleResultNotice")
	proto.RegisterType((*MsgCL2GSPlayerExpeChallengeLevelRequest)(nil), "protomsg.MsgCL2GSPlayerExpeChallengeLevelRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeChallengeLevelReply)(nil), "protomsg.MsgGS2CLPlayerExpeChallengeLevelReply")
	proto.RegisterType((*MsgCL2GSPlayerExpeExitLevelRequest)(nil), "protomsg.MsgCL2GSPlayerExpeExitLevelRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeExitLevelReply)(nil), "protomsg.MsgGS2CLPlayerExpeExitLevelReply")
	proto.RegisterType((*MsgGS2CLPlayerExpeReadyNotice)(nil), "protomsg.MsgGS2CLPlayerExpeReadyNotice")
	proto.RegisterType((*MsgCL2GSPlayerExpeUnlockListRequest)(nil), "protomsg.MsgCL2GSPlayerExpeUnlockListRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeUnlockListReply)(nil), "protomsg.MsgGS2CLPlayerExpeUnlockListReply")
	proto.RegisterType((*MsgCL2GSPlayerExpeUnlockAddRequest)(nil), "protomsg.MsgCL2GSPlayerExpeUnlockAddRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeUnlockAddReply)(nil), "protomsg.MsgGS2CLPlayerExpeUnlockAddReply")
	proto.RegisterType((*MsgGS2CLPlayerExpeRefreshWaveNotice)(nil), "protomsg.MsgGS2CLPlayerExpeRefreshWaveNotice")
	proto.RegisterType((*MsgCL2GSPlayerExpeStoryRewardInfoRequest)(nil), "protomsg.MsgCL2GSPlayerExpeStoryRewardInfoRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeStoryRewardInfoReply)(nil), "protomsg.MsgGS2CLPlayerExpeStoryRewardInfoReply")
	proto.RegisterType((*MsgCL2GSPlayerExpeStoryRewardClaimRequest)(nil), "protomsg.MsgCL2GSPlayerExpeStoryRewardClaimRequest")
	proto.RegisterType((*MsgGS2CLPlayerExpeStoryRewardClaimReply)(nil), "protomsg.MsgGS2CLPlayerExpeStoryRewardClaimReply")
}

func init() { proto.RegisterFile("expe.proto", fileDescriptor15) }

var fileDescriptor15 = []byte{
	// 809 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4d, 0x6f, 0xf3, 0x44,
	0x10, 0x96, 0x9b, 0x8f, 0x26, 0x53, 0x85, 0x82, 0x45, 0x51, 0x28, 0x0a, 0x84, 0xa5, 0x2d, 0xa1,
	0x48, 0x95, 0x68, 0xaf, 0x5c, 0xd2, 0xb4, 0x54, 0x95, 0x52, 0x84, 0x36, 0xa0, 0x4a, 0x1c, 0x30,
	0x8b, 0xbd, 0x49, 0x56, 0xd8, 0xde, 0x74, 0x77, 0xd3, 0x24, 0x07, 0x6e, 0x48, 0x70, 0xe1, 0xc0,
	0x9d, 0x3b, 0x17, 0xfe, 0x04, 0xbf, 0x8b, 0x0b, 0xda, 0xb5, 0x5d, 0x3b, 0xb1, 0xdb, 0xe4, 0x55,
	0xf4, 0x4a, 0xef, 0xa9, 0xdb, 0xf1, 0x64, 0x9e, 0x79, 0x9e, 0xf9, 0xd8, 0x05, 0xa0, 0xf3, 0x09,
	0x3d, 0x9b, 0x08, 0xae, 0xb8, 0x5d, 0x33, 0x7f, 0x02, 0x39, 0x3a, 0x3c, 0x08, 0xe4, 0xc8, 0x71,
	0x79, 0x10, 0xf0, 0xd0, 0x49, 0x1d, 0x0e, 0xdf, 0xcd, 0x98, 0x03, 0x32, 0x89, 0xad, 0x6f, 0xa7,
	0xd6, 0xc8, 0x82, 0xfe, 0xb4, 0xe0, 0xc3, 0x3b, 0x39, 0xba, 0x19, 0x9c, 0xf7, 0xfa, 0xdf, 0xf8,
	0x64, 0x41, 0xc5, 0xf5, 0x7c, 0x42, 0x07, 0x8a, 0xa8, 0xa9, 0xfc, 0x9a, 0x2b, 0xe6, 0x52, 0xfb,
	0x03, 0xa8, 0x8f, 0x89, 0xf0, 0x9c, 0x80, 0x7b, 0xb4, 0x69, 0xb5, 0xad, 0x4e, 0x0d, 0xd7, 0xb4,
	0xe1, 0x8e, 0x7b, 0xd4, 0x3e, 0x81, 0x7d, 0x26, 0x1d, 0x3a, 0x67, 0x52, 0x39, 0x82, 0xce, 0x88,
	0xf0, 0x9a, 0x3b, 0xc6, 0xa5, 0xc1, 0xe4, 0xb5, 0xb6, 0x62, 0x63, 0xb4, 0x4f, 0xe1, 0x9d, 0x90,
	0xce, 0xb5, 0xcf, 0x50, 0x50, 0x39, 0x76, 0x14, 0x0b, 0x68, 0xb3, 0xd4, 0xb6, 0x3a, 0x65, 0xbc,
	0xaf, 0x3f, 0xe0, 0xc8, 0xfe, 0x2d, 0x0b, 0x28, 0xea, 0x02, 0xba, 0x93, 0xa3, 0x5e, 0xff, 0xfc,
	0x66, 0x90, 0xa6, 0xd4, 0xa7, 0x8f, 0xd4, 0xef, 0x9b, 0x80, 0x0f, 0x53, 0x2a, 0xd5, 0x8b, 0x69,
	0xa1, 0xbf, 0x2c, 0x68, 0xe7, 0x69, 0x65, 0x62, 0x4c, 0xfc, 0x85, 0xdd, 0x02, 0xa0, 0x42, 0x70,
	0xe1, 0xb8, 0x49, 0x88, 0x0a, 0xae, 0x1b, 0x4b, 0x4f, 0x53, 0x5b, 0x02, 0xd8, 0x59, 0xe1, 0xfd,
	0x25, 0x80, 0xaf, 0xa3, 0x39, 0x2c, 0x1c, 0xf2, 0x66, 0xa9, 0x5d, 0xea, 0xec, 0x9d, 0xb7, 0xce,
	0x92, 0xaa, 0x9c, 0xad, 0x60, 0xde, 0x86, 0x43, 0x8e, 0xeb, 0x7e, 0x72, 0x44, 0x3f, 0xc0, 0xd1,
	0x33, 0x0c, 0x23, 0xb9, 0x36, 0xe1, 0x68, 0xbf, 0x0f, 0xb5, 0x38, 0x85, 0x48, 0xf3, 0x06, 0xde,
	0x8d, 0x10, 0x3c, 0xf4, 0xb7, 0x65, 0x24, 0x2c, 0xa2, 0x9f, 0x00, 0x6c, 0x2b, 0x40, 0x16, 0xbd,
	0xb4, 0x84, 0x6e, 0x9f, 0x42, 0x35, 0x6e, 0x85, 0xb2, 0xd1, 0xc5, 0x4e, 0x75, 0xc1, 0x54, 0xf2,
	0xa9, 0x70, 0x29, 0x8e, 0x3d, 0xd0, 0x15, 0x1c, 0xe7, 0x95, 0xb8, 0x24, 0xca, 0x1d, 0xf7, 0xb8,
	0xef, 0x53, 0x77, 0xb3, 0x72, 0xff, 0x61, 0xc1, 0x27, 0x79, 0xbe, 0xcb, 0x61, 0xb6, 0x25, 0x9c,
	0xb2, 0x2a, 0xad, 0x65, 0xf5, 0xeb, 0x8e, 0x29, 0x70, 0x3e, 0x1f, 0xe5, 0x53, 0x4c, 0xe5, 0xd4,
	0x57, 0x9b, 0xcc, 0xd6, 0xf3, 0x05, 0xb6, 0x0f, 0xa0, 0xca, 0xa4, 0x33, 0x63, 0xa1, 0xd1, 0xbe,
	0x86, 0x2b, 0x4c, 0xde, 0xb3, 0xd0, 0xb6, 0xa1, 0x2c, 0x15, 0x11, 0xcd, 0xb2, 0x61, 0x66, 0xce,
	0xf6, 0x31, 0xbc, 0xe5, 0xf2, 0xd0, 0x63, 0x8a, 0xf1, 0xd0, 0x31, 0x5f, 0x2b, 0xed, 0x52, 0xa7,
	0x82, 0x1b, 0x4f, 0xd6, 0x81, 0x76, 0x8b, 0x06, 0x79, 0xc8, 0x44, 0x3a, 0xc8, 0xd5, 0x64, 0x90,
	0xbf, 0xd2, 0xd6, 0xa7, 0x41, 0x4e, 0x64, 0xd8, 0x5d, 0x2b, 0xc3, 0xbf, 0x16, 0x7c, 0x9a, 0xaf,
	0x6e, 0x6f, 0x4c, 0x7c, 0x9f, 0x86, 0xa3, 0xa4, 0x1f, 0xb7, 0x6a, 0x75, 0xfb, 0x0b, 0x00, 0x22,
	0x82, 0x85, 0x43, 0x84, 0x20, 0x8b, 0x7c, 0x69, 0xba, 0x22, 0x58, 0x5c, 0x11, 0x45, 0x70, 0x5d,
	0x7b, 0x75, 0xb5, 0x93, 0xfd, 0x39, 0xec, 0x8e, 0x1f, 0x1c, 0xfd, 0xbf, 0x11, 0xaa, 0xd8, 0xbf,
	0x3a, 0x7e, 0xd0, 0x67, 0xf4, 0x9f, 0x65, 0x3a, 0x74, 0xa5, 0x94, 0xab, 0x1c, 0x5e, 0xe3, 0x34,
	0x2d, 0x13, 0x2c, 0xbf, 0x22, 0xc1, 0xca, 0x3a, 0x82, 0x3a, 0x2f, 0x41, 0x47, 0xba, 0x39, 0x58,
	0x54, 0xf2, 0x32, 0xae, 0x45, 0x86, 0x5b, 0x0f, 0x1d, 0x15, 0xad, 0xe2, 0xeb, 0x39, 0x53, 0xd9,
	0xda, 0xa1, 0x6e, 0xd1, 0xb2, 0xcd, 0x78, 0xad, 0x57, 0x07, 0x7d, 0x04, 0xad, 0x7c, 0x08, 0x4c,
	0x89, 0xb7, 0x88, 0x26, 0x05, 0x5d, 0x9a, 0x09, 0x5f, 0xc9, 0xe4, 0xbb, 0xd0, 0xe7, 0xee, 0xcf,
	0x1b, 0xdf, 0x0a, 0xbf, 0x59, 0xf0, 0x71, 0x1e, 0x25, 0x1b, 0x64, 0xdb, 0x3a, 0x9e, 0xc0, 0xbe,
	0x3b, 0x26, 0x13, 0x45, 0x85, 0xc3, 0x3c, 0xc7, 0x67, 0x52, 0x99, 0x96, 0x6c, 0xe0, 0x46, 0x6c,
	0xbe, 0xf5, 0x34, 0x10, 0xfa, 0xb1, 0x48, 0xd7, 0x28, 0x91, 0xae, 0xb7, 0xd9, 0xfa, 0x6f, 0x01,
	0xa4, 0x50, 0xf1, 0x54, 0xd4, 0x9f, 0x50, 0xd0, 0x2f, 0x45, 0x35, 0xc9, 0x20, 0x6c, 0xcb, 0x74,
	0x19, 0xbe, 0xb4, 0x0a, 0xff, 0x7d, 0xd1, 0x42, 0x8e, 0x2f, 0xf9, 0x7b, 0xf2, 0x48, 0xe3, 0xfd,
	0x77, 0x01, 0xf5, 0x19, 0x79, 0xa4, 0xd1, 0x2d, 0x6a, 0x99, 0xde, 0x7e, 0x2f, 0xed, 0x55, 0xfd,
	0x1b, 0xed, 0x6c, 0xae, 0xcf, 0xda, 0x2c, 0x3e, 0xa1, 0x1b, 0xe8, 0xe4, 0xc5, 0x1b, 0x28, 0x2e,
	0x16, 0xd1, 0x8e, 0x32, 0xee, 0x9b, 0xf4, 0xc3, 0xef, 0x16, 0x9c, 0x14, 0x3d, 0x7e, 0x56, 0x22,
	0x6d, 0x2b, 0x15, 0x82, 0x46, 0x32, 0xdc, 0xd9, 0x96, 0xd8, 0x8b, 0x27, 0xdc, 0x34, 0x84, 0x0b,
	0x9f, 0xbd, 0xc8, 0xa9, 0xe7, 0x13, 0x16, 0x6c, 0xfb, 0x2c, 0xf8, 0x27, 0xda, 0xc7, 0xcf, 0xf3,
	0x8d, 0x51, 0xde, 0x8c, 0xb7, 0xc1, 0x4f, 0x55, 0xf3, 0xe9, 0xe2, 0xff, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x81, 0xa9, 0x87, 0xd1, 0xf9, 0x0a, 0x00, 0x00,
}
