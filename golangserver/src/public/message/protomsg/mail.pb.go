// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mail.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MsgGS2CLMailIDListNotice struct {
	Id []uint64 `protobuf:"varint,1,rep,packed,name=id" json:"id,omitempty"`
}

func (m *MsgGS2CLMailIDListNotice) Reset()                    { *m = MsgGS2CLMailIDListNotice{} }
func (m *MsgGS2CLMailIDListNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLMailIDListNotice) ProtoMessage()               {}
func (*MsgGS2CLMailIDListNotice) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{0} }

func (m *MsgGS2CLMailIDListNotice) GetId() []uint64 {
	if m != nil {
		return m.Id
	}
	return nil
}

type MsgCL2GSMailListRequest struct {
	Id []uint64 `protobuf:"varint,1,rep,packed,name=id" json:"id,omitempty"`
}

func (m *MsgCL2GSMailListRequest) Reset()                    { *m = MsgCL2GSMailListRequest{} }
func (m *MsgCL2GSMailListRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSMailListRequest) ProtoMessage()               {}
func (*MsgCL2GSMailListRequest) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{1} }

func (m *MsgCL2GSMailListRequest) GetId() []uint64 {
	if m != nil {
		return m.Id
	}
	return nil
}

type MsgGS2CLMailListReply struct {
	Mail      []*MailInfo `protobuf:"bytes,1,rep,name=mail" json:"mail,omitempty"`
	ErrorCode int32       `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLMailListReply) Reset()                    { *m = MsgGS2CLMailListReply{} }
func (m *MsgGS2CLMailListReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLMailListReply) ProtoMessage()               {}
func (*MsgGS2CLMailListReply) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{2} }

func (m *MsgGS2CLMailListReply) GetMail() []*MailInfo {
	if m != nil {
		return m.Mail
	}
	return nil
}

func (m *MsgGS2CLMailListReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type MsgGS2CLMailNewNotice struct {
	Mail *MailInfo `protobuf:"bytes,1,opt,name=mail" json:"mail,omitempty"`
}

func (m *MsgGS2CLMailNewNotice) Reset()                    { *m = MsgGS2CLMailNewNotice{} }
func (m *MsgGS2CLMailNewNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLMailNewNotice) ProtoMessage()               {}
func (*MsgGS2CLMailNewNotice) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{3} }

func (m *MsgGS2CLMailNewNotice) GetMail() *MailInfo {
	if m != nil {
		return m.Mail
	}
	return nil
}

type MsgCL2GSMailOperatorRequest struct {
	Id       []uint64 `protobuf:"varint,1,rep,packed,name=id" json:"id,omitempty"`
	ReadFlag uint32   `protobuf:"varint,2,opt,name=read_flag,json=readFlag" json:"read_flag,omitempty"`
}

func (m *MsgCL2GSMailOperatorRequest) Reset()                    { *m = MsgCL2GSMailOperatorRequest{} }
func (m *MsgCL2GSMailOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSMailOperatorRequest) ProtoMessage()               {}
func (*MsgCL2GSMailOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{4} }

func (m *MsgCL2GSMailOperatorRequest) GetId() []uint64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MsgCL2GSMailOperatorRequest) GetReadFlag() uint32 {
	if m != nil {
		return m.ReadFlag
	}
	return 0
}

type MsgGS2CLMailOperatorReply struct {
	SuccessIds []uint64     `protobuf:"varint,1,rep,packed,name=success_ids,json=successIds" json:"success_ids,omitempty"`
	FailIds    []uint64     `protobuf:"varint,2,rep,packed,name=fail_ids,json=failIds" json:"fail_ids,omitempty"`
	ReadFlag   uint32       `protobuf:"varint,3,opt,name=read_flag,json=readFlag" json:"read_flag,omitempty"`
	Set        *ResourceSet `protobuf:"bytes,4,opt,name=set" json:"set,omitempty"`
	ErrorCode  int32        `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLMailOperatorReply) Reset()                    { *m = MsgGS2CLMailOperatorReply{} }
func (m *MsgGS2CLMailOperatorReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLMailOperatorReply) ProtoMessage()               {}
func (*MsgGS2CLMailOperatorReply) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{5} }

func (m *MsgGS2CLMailOperatorReply) GetSuccessIds() []uint64 {
	if m != nil {
		return m.SuccessIds
	}
	return nil
}

func (m *MsgGS2CLMailOperatorReply) GetFailIds() []uint64 {
	if m != nil {
		return m.FailIds
	}
	return nil
}

func (m *MsgGS2CLMailOperatorReply) GetReadFlag() uint32 {
	if m != nil {
		return m.ReadFlag
	}
	return 0
}

func (m *MsgGS2CLMailOperatorReply) GetSet() *ResourceSet {
	if m != nil {
		return m.Set
	}
	return nil
}

func (m *MsgGS2CLMailOperatorReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 发送私人邮件
type MsgCL2GSMailSendPrivateRequest struct {
	ReceiveId uint64 `protobuf:"varint,1,opt,name=receive_id,json=receiveId" json:"receive_id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *MsgCL2GSMailSendPrivateRequest) Reset()                    { *m = MsgCL2GSMailSendPrivateRequest{} }
func (m *MsgCL2GSMailSendPrivateRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSMailSendPrivateRequest) ProtoMessage()               {}
func (*MsgCL2GSMailSendPrivateRequest) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{6} }

func (m *MsgCL2GSMailSendPrivateRequest) GetReceiveId() uint64 {
	if m != nil {
		return m.ReceiveId
	}
	return 0
}

func (m *MsgCL2GSMailSendPrivateRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgCL2GSMailSendPrivateRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type MsgGS2CLMailSendPrivateReply struct {
	ErrorCode int32 `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLMailSendPrivateReply) Reset()                    { *m = MsgGS2CLMailSendPrivateReply{} }
func (m *MsgGS2CLMailSendPrivateReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLMailSendPrivateReply) ProtoMessage()               {}
func (*MsgGS2CLMailSendPrivateReply) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{7} }

func (m *MsgGS2CLMailSendPrivateReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type MsgGS2CLKingMailRefreshNotice struct {
	KingMailRefreshTime int64 `protobuf:"varint,1,opt,name=king_mail_refresh_time,json=kingMailRefreshTime" json:"king_mail_refresh_time,omitempty"`
}

func (m *MsgGS2CLKingMailRefreshNotice) Reset()                    { *m = MsgGS2CLKingMailRefreshNotice{} }
func (m *MsgGS2CLKingMailRefreshNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLKingMailRefreshNotice) ProtoMessage()               {}
func (*MsgGS2CLKingMailRefreshNotice) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{8} }

func (m *MsgGS2CLKingMailRefreshNotice) GetKingMailRefreshTime() int64 {
	if m != nil {
		return m.KingMailRefreshTime
	}
	return 0
}

// 发送王国邮件
type MsgCL2GSMailSendKingRequest struct {
	Title   string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *MsgCL2GSMailSendKingRequest) Reset()                    { *m = MsgCL2GSMailSendKingRequest{} }
func (m *MsgCL2GSMailSendKingRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSMailSendKingRequest) ProtoMessage()               {}
func (*MsgCL2GSMailSendKingRequest) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{9} }

func (m *MsgCL2GSMailSendKingRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgCL2GSMailSendKingRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type MsgGS2CLMailSendKingReply struct {
	ErrorCode int32 `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLMailSendKingReply) Reset()                    { *m = MsgGS2CLMailSendKingReply{} }
func (m *MsgGS2CLMailSendKingReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLMailSendKingReply) ProtoMessage()               {}
func (*MsgGS2CLMailSendKingReply) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{10} }

func (m *MsgGS2CLMailSendKingReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgGS2CLMailIDListNotice)(nil), "protomsg.MsgGS2CLMailIDListNotice")
	proto.RegisterType((*MsgCL2GSMailListRequest)(nil), "protomsg.MsgCL2GSMailListRequest")
	proto.RegisterType((*MsgGS2CLMailListReply)(nil), "protomsg.MsgGS2CLMailListReply")
	proto.RegisterType((*MsgGS2CLMailNewNotice)(nil), "protomsg.MsgGS2CLMailNewNotice")
	proto.RegisterType((*MsgCL2GSMailOperatorRequest)(nil), "protomsg.MsgCL2GSMailOperatorRequest")
	proto.RegisterType((*MsgGS2CLMailOperatorReply)(nil), "protomsg.MsgGS2CLMailOperatorReply")
	proto.RegisterType((*MsgCL2GSMailSendPrivateRequest)(nil), "protomsg.MsgCL2GSMailSendPrivateRequest")
	proto.RegisterType((*MsgGS2CLMailSendPrivateReply)(nil), "protomsg.MsgGS2CLMailSendPrivateReply")
	proto.RegisterType((*MsgGS2CLKingMailRefreshNotice)(nil), "protomsg.MsgGS2CLKingMailRefreshNotice")
	proto.RegisterType((*MsgCL2GSMailSendKingRequest)(nil), "protomsg.MsgCL2GSMailSendKingRequest")
	proto.RegisterType((*MsgGS2CLMailSendKingReply)(nil), "protomsg.MsgGS2CLMailSendKingReply")
}

func init() { proto.RegisterFile("mail.proto", fileDescriptor27) }

var fileDescriptor27 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x55, 0xda, 0x2e, 0xdb, 0xcc, 0x0a, 0x84, 0x0c, 0x85, 0xec, 0x2e, 0x85, 0x2a, 0x07, 0x28,
	0x1c, 0x7a, 0xe8, 0xde, 0x90, 0x10, 0x87, 0x22, 0x56, 0x85, 0x76, 0x41, 0xee, 0x9e, 0x89, 0x82,
	0x3d, 0x35, 0xd6, 0x26, 0x71, 0xb1, 0xdd, 0x45, 0xfc, 0x1b, 0x1f, 0x87, 0xec, 0x24, 0x4a, 0x22,
	0x04, 0x15, 0xa7, 0x68, 0x66, 0x9e, 0xdf, 0xbc, 0xf7, 0x32, 0x00, 0x79, 0x2a, 0xb3, 0xd9, 0x4e,
	0x2b, 0xab, 0xc8, 0xd0, 0x7f, 0x72, 0x23, 0xce, 0x46, 0xb9, 0x11, 0x09, 0x53, 0x79, 0xae, 0x8a,
	0xa4, 0x01, 0x9c, 0xdd, 0x6f, 0xda, 0x65, 0x27, 0x7e, 0x05, 0xd1, 0xda, 0x88, 0xcb, 0xcd, 0x7c,
	0xb1, 0x5a, 0xa7, 0x32, 0x5b, 0xbe, 0x5b, 0x49, 0x63, 0xaf, 0x94, 0x95, 0x0c, 0xc9, 0x3d, 0xe8,
	0x49, 0x1e, 0x05, 0x93, 0xfe, 0x74, 0x40, 0x7b, 0x92, 0xc7, 0x2f, 0xe1, 0xf1, 0xda, 0x88, 0xc5,
	0x6a, 0x7e, 0xb9, 0x71, 0x58, 0x87, 0xa4, 0xf8, 0x7d, 0x8f, 0xc6, 0xfe, 0x01, 0xfd, 0x02, 0xa3,
	0x36, 0x6d, 0x09, 0xdd, 0x65, 0x3f, 0xc9, 0x73, 0x18, 0x38, 0x3d, 0x1e, 0x7a, 0x32, 0x27, 0xb3,
	0x5a, 0xf1, 0xcc, 0x6f, 0x2f, 0xb6, 0x8a, 0xfa, 0x39, 0x19, 0x03, 0xa0, 0xd6, 0x4a, 0x27, 0x4c,
	0x71, 0x8c, 0xd8, 0x24, 0x98, 0x1e, 0xd1, 0xd0, 0x77, 0x16, 0x8a, 0x63, 0xfc, 0xb6, 0xcb, 0x7f,
	0x85, 0x3f, 0x2a, 0xcd, 0x0d, 0x7f, 0xf0, 0x2f, 0xfe, 0xf8, 0x03, 0x9c, 0xb7, 0xbd, 0x7c, 0xda,
	0xa1, 0x4e, 0xad, 0xd2, 0x7f, 0xf1, 0x43, 0xce, 0x21, 0xd4, 0x98, 0xf2, 0x64, 0x9b, 0xa5, 0x22,
	0xea, 0x4d, 0x82, 0xe9, 0x5d, 0x3a, 0x74, 0x8d, 0xf7, 0x59, 0x2a, 0xe2, 0x5f, 0x01, 0x9c, 0xb6,
	0xd5, 0x34, 0x64, 0xce, 0xf1, 0x33, 0x38, 0x31, 0x7b, 0xc6, 0xd0, 0x98, 0x44, 0x72, 0x53, 0x71,
	0x42, 0xd5, 0x5a, 0x72, 0x43, 0x4e, 0x61, 0xb8, 0x4d, 0x65, 0xe6, 0xa7, 0x3d, 0x3f, 0x3d, 0x76,
	0xb5, 0x1b, 0x75, 0xd6, 0xf6, 0xbb, 0x6b, 0xc9, 0x0b, 0xe8, 0x1b, 0xb4, 0xd1, 0xc0, 0x3b, 0x1d,
	0x35, 0x4e, 0x29, 0x1a, 0xb5, 0xd7, 0x0c, 0x37, 0x68, 0xa9, 0x43, 0x1c, 0xca, 0x52, 0xc1, 0xd3,
	0x76, 0x14, 0x1b, 0x2c, 0xf8, 0x67, 0x2d, 0x6f, 0x53, 0x8b, 0x75, 0x1a, 0x63, 0x00, 0x8d, 0x0c,
	0xe5, 0x2d, 0x26, 0x3e, 0x95, 0x60, 0x3a, 0xa0, 0x61, 0xd5, 0x59, 0x72, 0xf2, 0x10, 0x8e, 0xac,
	0xb4, 0x19, 0xfa, 0x60, 0x42, 0x5a, 0x16, 0x24, 0x82, 0x63, 0xa6, 0x0a, 0x8b, 0x85, 0xf5, 0xca,
	0x43, 0x5a, 0x97, 0xf1, 0x1b, 0x78, 0xd2, 0x8e, 0xab, 0xb3, 0xd0, 0x25, 0x76, 0x40, 0xef, 0x35,
	0x8c, 0xeb, 0xe7, 0x1f, 0x65, 0x21, 0x1c, 0x05, 0xc5, 0xad, 0x46, 0xf3, 0xad, 0xba, 0x81, 0x0b,
	0x78, 0x74, 0x23, 0x0b, 0xe1, 0x0f, 0x3f, 0xd1, 0xe5, 0x28, 0xb1, 0x32, 0x47, 0x2f, 0xbd, 0x4f,
	0x1f, 0xdc, 0x74, 0x9f, 0x5d, 0xcb, 0x1c, 0xe3, 0x75, 0xf7, 0x20, 0x9c, 0x28, 0xc7, 0x5e, 0x47,
	0xf0, 0xbf, 0x1e, 0x5f, 0x77, 0x4f, 0xa2, 0xa1, 0x3b, 0x6c, 0xf0, 0xeb, 0x1d, 0xff, 0x2b, 0x2f,
	0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x33, 0x74, 0x87, 0xdb, 0x03, 0x00, 0x00,
}
