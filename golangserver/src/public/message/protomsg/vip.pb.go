// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vip.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 玩家vip信息
type MsgGS2CLVipInfoNotice struct {
	VipLevel   uint32 `protobuf:"varint,1,opt,name=vip_level,json=vipLevel" json:"vip_level,omitempty"`
	LoginDays  uint32 `protobuf:"varint,2,opt,name=login_days,json=loginDays" json:"login_days,omitempty"`
	ExpReward  bool   `protobuf:"varint,3,opt,name=exp_reward,json=expReward" json:"exp_reward,omitempty"`
	GiftReward bool   `protobuf:"varint,4,opt,name=gift_reward,json=giftReward" json:"gift_reward,omitempty"`
}

func (m *MsgGS2CLVipInfoNotice) Reset()                    { *m = MsgGS2CLVipInfoNotice{} }
func (m *MsgGS2CLVipInfoNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLVipInfoNotice) ProtoMessage()               {}
func (*MsgGS2CLVipInfoNotice) Descriptor() ([]byte, []int) { return fileDescriptor77, []int{0} }

func (m *MsgGS2CLVipInfoNotice) GetVipLevel() uint32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *MsgGS2CLVipInfoNotice) GetLoginDays() uint32 {
	if m != nil {
		return m.LoginDays
	}
	return 0
}

func (m *MsgGS2CLVipInfoNotice) GetExpReward() bool {
	if m != nil {
		return m.ExpReward
	}
	return false
}

func (m *MsgGS2CLVipInfoNotice) GetGiftReward() bool {
	if m != nil {
		return m.GiftReward
	}
	return false
}

// 领取vip经验请求
type MsgCL2GSGetVipExpRequest struct {
	VipLevel uint32 `protobuf:"varint,1,opt,name=vip_level,json=vipLevel" json:"vip_level,omitempty"`
}

func (m *MsgCL2GSGetVipExpRequest) Reset()                    { *m = MsgCL2GSGetVipExpRequest{} }
func (m *MsgCL2GSGetVipExpRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSGetVipExpRequest) ProtoMessage()               {}
func (*MsgCL2GSGetVipExpRequest) Descriptor() ([]byte, []int) { return fileDescriptor77, []int{1} }

func (m *MsgCL2GSGetVipExpRequest) GetVipLevel() uint32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

// 领取vip经验响应
type MsgGS2CLGetVipExpReply struct {
	VipLevel  uint32 `protobuf:"varint,1,opt,name=vip_level,json=vipLevel" json:"vip_level,omitempty"`
	AddExp    uint32 `protobuf:"varint,2,opt,name=add_exp,json=addExp" json:"add_exp,omitempty"`
	ErrorCode int32  `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLGetVipExpReply) Reset()                    { *m = MsgGS2CLGetVipExpReply{} }
func (m *MsgGS2CLGetVipExpReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLGetVipExpReply) ProtoMessage()               {}
func (*MsgGS2CLGetVipExpReply) Descriptor() ([]byte, []int) { return fileDescriptor77, []int{2} }

func (m *MsgGS2CLGetVipExpReply) GetVipLevel() uint32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *MsgGS2CLGetVipExpReply) GetAddExp() uint32 {
	if m != nil {
		return m.AddExp
	}
	return 0
}

func (m *MsgGS2CLGetVipExpReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 领取vip礼包请求
type MsgCL2GSGetVipGiftRequest struct {
	VipLevel uint32 `protobuf:"varint,1,opt,name=vip_level,json=vipLevel" json:"vip_level,omitempty"`
}

func (m *MsgCL2GSGetVipGiftRequest) Reset()                    { *m = MsgCL2GSGetVipGiftRequest{} }
func (m *MsgCL2GSGetVipGiftRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSGetVipGiftRequest) ProtoMessage()               {}
func (*MsgCL2GSGetVipGiftRequest) Descriptor() ([]byte, []int) { return fileDescriptor77, []int{3} }

func (m *MsgCL2GSGetVipGiftRequest) GetVipLevel() uint32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

// 领取vip礼包响应
type MsgGS2CLGetVipGiftReply struct {
	VipLevel  uint32       `protobuf:"varint,1,opt,name=vip_level,json=vipLevel" json:"vip_level,omitempty"`
	Reward    *ResourceSet `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	ErrorCode int32        `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLGetVipGiftReply) Reset()                    { *m = MsgGS2CLGetVipGiftReply{} }
func (m *MsgGS2CLGetVipGiftReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLGetVipGiftReply) ProtoMessage()               {}
func (*MsgGS2CLGetVipGiftReply) Descriptor() ([]byte, []int) { return fileDescriptor77, []int{4} }

func (m *MsgGS2CLGetVipGiftReply) GetVipLevel() uint32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *MsgGS2CLGetVipGiftReply) GetReward() *ResourceSet {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *MsgGS2CLGetVipGiftReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgGS2CLVipInfoNotice)(nil), "protomsg.MsgGS2CLVipInfoNotice")
	proto.RegisterType((*MsgCL2GSGetVipExpRequest)(nil), "protomsg.MsgCL2GSGetVipExpRequest")
	proto.RegisterType((*MsgGS2CLGetVipExpReply)(nil), "protomsg.MsgGS2CLGetVipExpReply")
	proto.RegisterType((*MsgCL2GSGetVipGiftRequest)(nil), "protomsg.MsgCL2GSGetVipGiftRequest")
	proto.RegisterType((*MsgGS2CLGetVipGiftReply)(nil), "protomsg.MsgGS2CLGetVipGiftReply")
}

func init() { proto.RegisterFile("vip.proto", fileDescriptor77) }

var fileDescriptor77 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x4f, 0x4b, 0xc3, 0x30,
	0x18, 0xc6, 0x89, 0x7f, 0xe6, 0xfa, 0x0e, 0x41, 0x0a, 0x73, 0x55, 0x11, 0x47, 0x4f, 0xbb, 0xb8,
	0xc3, 0x3c, 0xe8, 0x7d, 0x8e, 0x22, 0x6c, 0x1e, 0x32, 0xd8, 0x35, 0xd4, 0xe6, 0x5d, 0x08, 0xb4,
	0x4b, 0x4c, 0xb2, 0xd9, 0xdd, 0xfd, 0x06, 0x7e, 0x61, 0x69, 0xd6, 0x82, 0xbb, 0x6c, 0x9e, 0x42,
	0x9e, 0xe7, 0x7d, 0xc2, 0xf3, 0xcb, 0x0b, 0xc1, 0x46, 0xea, 0xa1, 0x36, 0xca, 0xa9, 0xb0, 0xed,
	0x8f, 0xc2, 0x8a, 0xdb, 0xab, 0xc2, 0x0a, 0x96, 0xa9, 0xa2, 0x50, 0xab, 0x9d, 0x17, 0xff, 0x10,
	0xe8, 0xce, 0xac, 0x48, 0xe6, 0xa3, 0xf1, 0x74, 0x21, 0xf5, 0xdb, 0x6a, 0xa9, 0xde, 0x95, 0x93,
	0x19, 0x86, 0x77, 0xfe, 0x09, 0x96, 0xe3, 0x06, 0xf3, 0x88, 0xf4, 0xc9, 0xe0, 0x92, 0xb6, 0x37,
	0x52, 0x4f, 0xab, 0x7b, 0x78, 0x0f, 0x90, 0x2b, 0x21, 0x57, 0x8c, 0xa7, 0x5b, 0x1b, 0x9d, 0x78,
	0x37, 0xf0, 0xca, 0x6b, 0xba, 0xb5, 0x95, 0x8d, 0xa5, 0x66, 0x06, 0xbf, 0x52, 0xc3, 0xa3, 0xd3,
	0x3e, 0x19, 0xb4, 0x69, 0x80, 0xa5, 0xa6, 0x5e, 0x08, 0x1f, 0xa0, 0x23, 0xe4, 0xd2, 0x35, 0xfe,
	0x99, 0xf7, 0xa1, 0x92, 0x76, 0x03, 0xf1, 0x33, 0x44, 0x33, 0x2b, 0xc6, 0xd3, 0x51, 0x32, 0x4f,
	0xd0, 0x2d, 0xa4, 0x9e, 0x54, 0xd9, 0xcf, 0x35, 0x5a, 0x77, 0xb0, 0x57, 0x5c, 0xc0, 0x75, 0x43,
	0xf3, 0x27, 0xa8, 0xf3, 0xed, 0x61, 0x9c, 0x1e, 0x5c, 0xa4, 0x9c, 0x33, 0x2c, 0x75, 0xcd, 0xd2,
	0x4a, 0x39, 0x9f, 0x94, 0xda, 0x83, 0x18, 0xa3, 0x0c, 0xcb, 0x14, 0xc7, 0x28, 0xeb, 0x93, 0xc1,
	0x39, 0x0d, 0xbc, 0x32, 0x56, 0x1c, 0xe3, 0x17, 0xb8, 0xd9, 0xef, 0x99, 0x78, 0x86, 0x7f, 0x14,
	0xfd, 0x26, 0xd0, 0xdb, 0x6f, 0xba, 0x8b, 0x1e, 0xad, 0xfa, 0x08, 0xad, 0xfa, 0xdb, 0xaa, 0xa6,
	0x9d, 0x51, 0x77, 0xd8, 0x6c, 0x77, 0x48, 0xd1, 0xaa, 0xb5, 0xc9, 0x70, 0x8e, 0x8e, 0xd6, 0x43,
	0x47, 0x00, 0x3e, 0x5a, 0x3e, 0xfc, 0xf4, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x90, 0xbd, 0x88,
	0x2e, 0x02, 0x00, 0x00,
}
