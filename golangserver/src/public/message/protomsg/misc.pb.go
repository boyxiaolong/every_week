// Code generated by protoc-gen-go. DO NOT EDIT.
// source: misc.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UsPlayerStatus int32

const (
	UsPlayerStatus_kPsOffline      UsPlayerStatus = 0
	UsPlayerStatus_kPsOnline       UsPlayerStatus = 1
	UsPlayerStatus_kPsOfflineCache UsPlayerStatus = 2
)

var UsPlayerStatus_name = map[int32]string{
	0: "kPsOffline",
	1: "kPsOnline",
	2: "kPsOfflineCache",
}
var UsPlayerStatus_value = map[string]int32{
	"kPsOffline":      0,
	"kPsOnline":       1,
	"kPsOfflineCache": 2,
}

func (x UsPlayerStatus) String() string {
	return proto.EnumName(UsPlayerStatus_name, int32(x))
}
func (UsPlayerStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor34, []int{0} }

//
type KickoutReason int32

const (
	KickoutReason_kKickoutReason_Normal               KickoutReason = 0
	KickoutReason_kKickoutReason_DuplicateLogin       KickoutReason = 1
	KickoutReason_kKickoutReason_LoginFail            KickoutReason = 2
	KickoutReason_kKickoutReason_DataServerDisconnect KickoutReason = 3
	KickoutReason_kKickoutReason_UserServerDisconnect KickoutReason = 4
	KickoutReason_kKickoutReason_ServerShutDown       KickoutReason = 5
	KickoutReason_kKickoutReason_ServerRemove         KickoutReason = 6
	KickoutReason_kKickoutReason_KeepLiveTimeout      KickoutReason = 7
	KickoutReason_kKickoutReason_BanAccount           KickoutReason = 8
	KickoutReason_kKickoutReason_AntiIndulgence       KickoutReason = 9
	KickoutReason_kKickoutReason_InvalidMessage       KickoutReason = 10
	KickoutReason_kKickoutReason_FloodMessage         KickoutReason = 11
	KickoutReason_kKickoutReason_InvalidFirstMessage  KickoutReason = 12
	KickoutReason_kKickoutReason_Emigration           KickoutReason = 13
	KickoutReason_kKickoutReason_GM                   KickoutReason = 14
)

var KickoutReason_name = map[int32]string{
	0:  "kKickoutReason_Normal",
	1:  "kKickoutReason_DuplicateLogin",
	2:  "kKickoutReason_LoginFail",
	3:  "kKickoutReason_DataServerDisconnect",
	4:  "kKickoutReason_UserServerDisconnect",
	5:  "kKickoutReason_ServerShutDown",
	6:  "kKickoutReason_ServerRemove",
	7:  "kKickoutReason_KeepLiveTimeout",
	8:  "kKickoutReason_BanAccount",
	9:  "kKickoutReason_AntiIndulgence",
	10: "kKickoutReason_InvalidMessage",
	11: "kKickoutReason_FloodMessage",
	12: "kKickoutReason_InvalidFirstMessage",
	13: "kKickoutReason_Emigration",
	14: "kKickoutReason_GM",
}
var KickoutReason_value = map[string]int32{
	"kKickoutReason_Normal":               0,
	"kKickoutReason_DuplicateLogin":       1,
	"kKickoutReason_LoginFail":            2,
	"kKickoutReason_DataServerDisconnect": 3,
	"kKickoutReason_UserServerDisconnect": 4,
	"kKickoutReason_ServerShutDown":       5,
	"kKickoutReason_ServerRemove":         6,
	"kKickoutReason_KeepLiveTimeout":      7,
	"kKickoutReason_BanAccount":           8,
	"kKickoutReason_AntiIndulgence":       9,
	"kKickoutReason_InvalidMessage":       10,
	"kKickoutReason_FloodMessage":         11,
	"kKickoutReason_InvalidFirstMessage":  12,
	"kKickoutReason_Emigration":           13,
	"kKickoutReason_GM":                   14,
}

func (x KickoutReason) String() string {
	return proto.EnumName(KickoutReason_name, int32(x))
}
func (KickoutReason) EnumDescriptor() ([]byte, []int) { return fileDescriptor34, []int{1} }

// ////////////////////////////////////////////////////////////////////////
// /  客户端大型分包消息 开始
// ////////////////////////////////////////////////////////////////////////
type MsgGS2CLBigPackage struct {
	SessionId uint32 `protobuf:"varint,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	PackCount uint32 `protobuf:"varint,2,opt,name=pack_count,json=packCount" json:"pack_count,omitempty"`
	PackIdx   uint32 `protobuf:"varint,3,opt,name=pack_idx,json=packIdx" json:"pack_idx,omitempty"`
	MsgType   uint32 `protobuf:"varint,4,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	Content   []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *MsgGS2CLBigPackage) Reset()                    { *m = MsgGS2CLBigPackage{} }
func (m *MsgGS2CLBigPackage) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLBigPackage) ProtoMessage()               {}
func (*MsgGS2CLBigPackage) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{0} }

func (m *MsgGS2CLBigPackage) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *MsgGS2CLBigPackage) GetPackCount() uint32 {
	if m != nil {
		return m.PackCount
	}
	return 0
}

func (m *MsgGS2CLBigPackage) GetPackIdx() uint32 {
	if m != nil {
		return m.PackIdx
	}
	return 0
}

func (m *MsgGS2CLBigPackage) GetMsgType() uint32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *MsgGS2CLBigPackage) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 客户端向登录服务器请求登录(CL->LS)
type MsgCL2LSLoginRequest struct {
	Account       uint64 `protobuf:"varint,3,opt,name=account" json:"account,omitempty"`
	WebSession    string `protobuf:"bytes,4,opt,name=web_session,json=webSession" json:"web_session,omitempty"`
	StrMacAddress string `protobuf:"bytes,5,opt,name=strMacAddress" json:"strMacAddress,omitempty"`
	Language      uint32 `protobuf:"varint,6,opt,name=language" json:"language,omitempty"`
	AreaId        uint32 `protobuf:"varint,7,opt,name=area_id,json=areaId" json:"area_id,omitempty"`
	GameId        string `protobuf:"bytes,8,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	CampId        uint32 `protobuf:"varint,9,opt,name=camp_id,json=campId" json:"camp_id,omitempty"`
	Udid          string `protobuf:"bytes,10,opt,name=udid" json:"udid,omitempty"`
}

func (m *MsgCL2LSLoginRequest) Reset()                    { *m = MsgCL2LSLoginRequest{} }
func (m *MsgCL2LSLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2LSLoginRequest) ProtoMessage()               {}
func (*MsgCL2LSLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{1} }

func (m *MsgCL2LSLoginRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *MsgCL2LSLoginRequest) GetWebSession() string {
	if m != nil {
		return m.WebSession
	}
	return ""
}

func (m *MsgCL2LSLoginRequest) GetStrMacAddress() string {
	if m != nil {
		return m.StrMacAddress
	}
	return ""
}

func (m *MsgCL2LSLoginRequest) GetLanguage() uint32 {
	if m != nil {
		return m.Language
	}
	return 0
}

func (m *MsgCL2LSLoginRequest) GetAreaId() uint32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *MsgCL2LSLoginRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *MsgCL2LSLoginRequest) GetCampId() uint32 {
	if m != nil {
		return m.CampId
	}
	return 0
}

func (m *MsgCL2LSLoginRequest) GetUdid() string {
	if m != nil {
		return m.Udid
	}
	return ""
}

// 客户端向登录服务器请求登录回复(LS->CL)
type MsgLS2CLLoginReply struct {
	PlayerId      uint64      `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	NetAddress    *NetAddress `protobuf:"bytes,2,opt,name=net_address,json=netAddress" json:"net_address,omitempty"`
	LoginSession  string      `protobuf:"bytes,3,opt,name=login_session,json=loginSession" json:"login_session,omitempty"`
	ServerVersion string      `protobuf:"bytes,4,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
	KingdomId     uint32      `protobuf:"varint,5,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
	ErrorCode     int32       `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgLS2CLLoginReply) Reset()                    { *m = MsgLS2CLLoginReply{} }
func (m *MsgLS2CLLoginReply) String() string            { return proto.CompactTextString(m) }
func (*MsgLS2CLLoginReply) ProtoMessage()               {}
func (*MsgLS2CLLoginReply) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{2} }

func (m *MsgLS2CLLoginReply) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MsgLS2CLLoginReply) GetNetAddress() *NetAddress {
	if m != nil {
		return m.NetAddress
	}
	return nil
}

func (m *MsgLS2CLLoginReply) GetLoginSession() string {
	if m != nil {
		return m.LoginSession
	}
	return ""
}

func (m *MsgLS2CLLoginReply) GetServerVersion() string {
	if m != nil {
		return m.ServerVersion
	}
	return ""
}

func (m *MsgLS2CLLoginReply) GetKingdomId() uint32 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

func (m *MsgLS2CLLoginReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 客户端向游戏服务器请求登录(CL->GS)
type MsgCL2GSLoginRequest struct {
	PlayerId      uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Account       uint64 `protobuf:"varint,2,opt,name=account" json:"account,omitempty"`
	LoginSession  string `protobuf:"bytes,3,opt,name=login_session,json=loginSession" json:"login_session,omitempty"`
	Certification bool   `protobuf:"varint,5,opt,name=certification" json:"certification,omitempty"`
	Adult         bool   `protobuf:"varint,6,opt,name=adult" json:"adult,omitempty"`
	ConfigVersion uint32 `protobuf:"varint,8,opt,name=config_version,json=configVersion" json:"config_version,omitempty"`
	Udid          string `protobuf:"bytes,9,opt,name=udid" json:"udid,omitempty"`
	ClientVersion string `protobuf:"bytes,10,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
}

func (m *MsgCL2GSLoginRequest) Reset()                    { *m = MsgCL2GSLoginRequest{} }
func (m *MsgCL2GSLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSLoginRequest) ProtoMessage()               {}
func (*MsgCL2GSLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{3} }

func (m *MsgCL2GSLoginRequest) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MsgCL2GSLoginRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *MsgCL2GSLoginRequest) GetLoginSession() string {
	if m != nil {
		return m.LoginSession
	}
	return ""
}

func (m *MsgCL2GSLoginRequest) GetCertification() bool {
	if m != nil {
		return m.Certification
	}
	return false
}

func (m *MsgCL2GSLoginRequest) GetAdult() bool {
	if m != nil {
		return m.Adult
	}
	return false
}

func (m *MsgCL2GSLoginRequest) GetConfigVersion() uint32 {
	if m != nil {
		return m.ConfigVersion
	}
	return 0
}

func (m *MsgCL2GSLoginRequest) GetUdid() string {
	if m != nil {
		return m.Udid
	}
	return ""
}

func (m *MsgCL2GSLoginRequest) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

// 客户端向游戏服务器请求登录回复(GS->CL)
type MsgGS2CLLoginReply struct {
	ServerVersion string `protobuf:"bytes,3,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
	ErrorCode     int32  `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLLoginReply) Reset()                    { *m = MsgGS2CLLoginReply{} }
func (m *MsgGS2CLLoginReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLLoginReply) ProtoMessage()               {}
func (*MsgGS2CLLoginReply) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{4} }

func (m *MsgGS2CLLoginReply) GetServerVersion() string {
	if m != nil {
		return m.ServerVersion
	}
	return ""
}

func (m *MsgGS2CLLoginReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 客户端进入游戏(CL->GS)
type MsgCL2GSEnterGameRequest struct {
	Mac string `protobuf:"bytes,1,opt,name=mac" json:"mac,omitempty"`
}

func (m *MsgCL2GSEnterGameRequest) Reset()                    { *m = MsgCL2GSEnterGameRequest{} }
func (m *MsgCL2GSEnterGameRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSEnterGameRequest) ProtoMessage()               {}
func (*MsgCL2GSEnterGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{5} }

func (m *MsgCL2GSEnterGameRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

// 客户端进入游戏回复(GS->CL)
type MsgGS2CLEnterGameReply struct {
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLEnterGameReply) Reset()                    { *m = MsgGS2CLEnterGameReply{} }
func (m *MsgGS2CLEnterGameReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLEnterGameReply) ProtoMessage()               {}
func (*MsgGS2CLEnterGameReply) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{6} }

func (m *MsgGS2CLEnterGameReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 通知客户端是新玩家(GS->CL)
type MsgGS2CLNewPlayerNotice struct {
}

func (m *MsgGS2CLNewPlayerNotice) Reset()                    { *m = MsgGS2CLNewPlayerNotice{} }
func (m *MsgGS2CLNewPlayerNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLNewPlayerNotice) ProtoMessage()               {}
func (*MsgGS2CLNewPlayerNotice) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{7} }

type MsgGS2CLPrepareShutdownNotice struct {
	WaitSeconds uint32 `protobuf:"varint,1,opt,name=wait_seconds,json=waitSeconds" json:"wait_seconds,omitempty"`
}

func (m *MsgGS2CLPrepareShutdownNotice) Reset()                    { *m = MsgGS2CLPrepareShutdownNotice{} }
func (m *MsgGS2CLPrepareShutdownNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLPrepareShutdownNotice) ProtoMessage()               {}
func (*MsgGS2CLPrepareShutdownNotice) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{8} }

func (m *MsgGS2CLPrepareShutdownNotice) GetWaitSeconds() uint32 {
	if m != nil {
		return m.WaitSeconds
	}
	return 0
}

type MsgGS2CLKickoutNotice struct {
	Reason KickoutReason `protobuf:"varint,1,opt,name=reason,enum=protomsg.KickoutReason" json:"reason,omitempty"`
}

func (m *MsgGS2CLKickoutNotice) Reset()                    { *m = MsgGS2CLKickoutNotice{} }
func (m *MsgGS2CLKickoutNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLKickoutNotice) ProtoMessage()               {}
func (*MsgGS2CLKickoutNotice) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{9} }

func (m *MsgGS2CLKickoutNotice) GetReason() KickoutReason {
	if m != nil {
		return m.Reason
	}
	return KickoutReason_kKickoutReason_Normal
}

// PM命令
type MsgCL2GSPMCommandRequest struct {
	Command string `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
}

func (m *MsgCL2GSPMCommandRequest) Reset()                    { *m = MsgCL2GSPMCommandRequest{} }
func (m *MsgCL2GSPMCommandRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSPMCommandRequest) ProtoMessage()               {}
func (*MsgCL2GSPMCommandRequest) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{10} }

func (m *MsgCL2GSPMCommandRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type MsgGS2CLPMCommandReply struct {
	ErrorCode int32 `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLPMCommandReply) Reset()                    { *m = MsgGS2CLPMCommandReply{} }
func (m *MsgGS2CLPMCommandReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLPMCommandReply) ProtoMessage()               {}
func (*MsgGS2CLPMCommandReply) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{11} }

func (m *MsgGS2CLPMCommandReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgGS2CLBigPackage)(nil), "protomsg.MsgGS2CLBigPackage")
	proto.RegisterType((*MsgCL2LSLoginRequest)(nil), "protomsg.MsgCL2LSLoginRequest")
	proto.RegisterType((*MsgLS2CLLoginReply)(nil), "protomsg.MsgLS2CLLoginReply")
	proto.RegisterType((*MsgCL2GSLoginRequest)(nil), "protomsg.MsgCL2GSLoginRequest")
	proto.RegisterType((*MsgGS2CLLoginReply)(nil), "protomsg.MsgGS2CLLoginReply")
	proto.RegisterType((*MsgCL2GSEnterGameRequest)(nil), "protomsg.MsgCL2GSEnterGameRequest")
	proto.RegisterType((*MsgGS2CLEnterGameReply)(nil), "protomsg.MsgGS2CLEnterGameReply")
	proto.RegisterType((*MsgGS2CLNewPlayerNotice)(nil), "protomsg.MsgGS2CLNewPlayerNotice")
	proto.RegisterType((*MsgGS2CLPrepareShutdownNotice)(nil), "protomsg.MsgGS2CLPrepareShutdownNotice")
	proto.RegisterType((*MsgGS2CLKickoutNotice)(nil), "protomsg.MsgGS2CLKickoutNotice")
	proto.RegisterType((*MsgCL2GSPMCommandRequest)(nil), "protomsg.MsgCL2GSPMCommandRequest")
	proto.RegisterType((*MsgGS2CLPMCommandReply)(nil), "protomsg.MsgGS2CLPMCommandReply")
	proto.RegisterEnum("protomsg.UsPlayerStatus", UsPlayerStatus_name, UsPlayerStatus_value)
	proto.RegisterEnum("protomsg.KickoutReason", KickoutReason_name, KickoutReason_value)
}

func init() { proto.RegisterFile("misc.proto", fileDescriptor34) }

var fileDescriptor34 = []byte{
	// 942 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdf, 0x52, 0x1b, 0xb7,
	0x17, 0x8e, 0xc1, 0x18, 0xfb, 0x80, 0xf9, 0xed, 0x4f, 0x85, 0xb2, 0x24, 0xa5, 0x21, 0x4e, 0xda,
	0x32, 0x99, 0x0e, 0x9d, 0xa1, 0xed, 0xf4, 0x1a, 0x4c, 0xa0, 0x9e, 0xd8, 0x94, 0x59, 0x27, 0xbd,
	0xe8, 0x8d, 0x47, 0x68, 0x0f, 0x1b, 0x8d, 0x77, 0xa5, 0xad, 0xa4, 0xc5, 0xe1, 0x11, 0x7a, 0xd7,
	0x67, 0xe8, 0x23, 0xf6, 0x09, 0x3a, 0x92, 0x76, 0xfd, 0x0f, 0x37, 0xd3, 0x2b, 0xef, 0xf9, 0xbe,
	0xef, 0x48, 0xe7, 0x7c, 0xe7, 0x58, 0x00, 0x19, 0xd7, 0xec, 0x24, 0x57, 0xd2, 0x48, 0xd2, 0x74,
	0x3f, 0x99, 0x4e, 0x9e, 0x06, 0x99, 0x4e, 0x46, 0x4c, 0x66, 0x99, 0x14, 0x9e, 0xeb, 0xfc, 0x55,
	0x03, 0x32, 0xd0, 0xc9, 0xd5, 0xf0, 0xb4, 0xdb, 0x3f, 0xe7, 0xc9, 0x0d, 0x65, 0x63, 0x9a, 0x20,
	0x39, 0x04, 0xd0, 0xa8, 0x35, 0x97, 0x62, 0xc4, 0xe3, 0xb0, 0x76, 0x54, 0x3b, 0x6e, 0x47, 0xad,
	0x12, 0xe9, 0xc5, 0x96, 0xce, 0x29, 0x1b, 0x8f, 0x98, 0x2c, 0x84, 0x09, 0xd7, 0x3c, 0x6d, 0x91,
	0xae, 0x05, 0xc8, 0x01, 0x34, 0x1d, 0xcd, 0xe3, 0x8f, 0xe1, 0xba, 0x23, 0x37, 0x6d, 0xdc, 0x8b,
	0x3f, 0x5a, 0xca, 0xd6, 0x60, 0x1e, 0x72, 0x0c, 0xeb, 0x9e, 0xca, 0x74, 0xf2, 0xee, 0x21, 0x47,
	0x12, 0xc2, 0x26, 0x93, 0xc2, 0xa0, 0x30, 0xe1, 0xc6, 0x51, 0xed, 0x78, 0x3b, 0xaa, 0xc2, 0xce,
	0xdf, 0x35, 0xd8, 0x1d, 0xe8, 0xa4, 0xdb, 0x3f, 0xed, 0x0f, 0xfb, 0x32, 0xe1, 0x22, 0xc2, 0xdf,
	0x0b, 0xd4, 0xc6, 0xa6, 0x50, 0xe6, 0x8b, 0xb0, 0xf7, 0xd4, 0xa3, 0x2a, 0x24, 0xcf, 0x61, 0x6b,
	0x82, 0xb7, 0xa3, 0xb2, 0x64, 0x77, 0x55, 0x2b, 0x82, 0x09, 0xde, 0x0e, 0x3d, 0x42, 0x5e, 0x41,
	0x5b, 0x1b, 0x35, 0xa0, 0xec, 0x2c, 0x8e, 0x15, 0x6a, 0xed, 0xee, 0x6c, 0x45, 0x8b, 0x20, 0x79,
	0x0a, 0xcd, 0x94, 0x8a, 0xa4, 0xa0, 0x09, 0x86, 0x0d, 0x57, 0xee, 0x34, 0x26, 0xfb, 0xb0, 0x49,
	0x15, 0x52, 0x6b, 0xd0, 0xa6, 0xa3, 0x1a, 0x36, 0xec, 0xc5, 0x96, 0x48, 0x68, 0x86, 0x96, 0x68,
	0xba, 0x43, 0x1b, 0x36, 0xf4, 0x04, 0xa3, 0x59, 0x6e, 0x89, 0x96, 0xcf, 0xb0, 0x61, 0x2f, 0x26,
	0x04, 0xea, 0x45, 0xcc, 0xe3, 0x10, 0x9c, 0xdc, 0x7d, 0xdb, 0xa6, 0xed, 0x64, 0xfa, 0x76, 0x32,
	0x65, 0xd3, 0x79, 0xfa, 0x40, 0x9e, 0x41, 0x2b, 0x4f, 0xe9, 0x03, 0xaa, 0x6a, 0x30, 0xf5, 0xa8,
	0xe9, 0x81, 0x5e, 0x4c, 0x7e, 0x84, 0x2d, 0x81, 0x66, 0x44, 0xcb, 0x96, 0xec, 0x60, 0xb6, 0x4e,
	0x77, 0x4f, 0xaa, 0xf9, 0x9f, 0x5c, 0xa3, 0x29, 0x3b, 0x8b, 0x40, 0x4c, 0xbf, 0xc9, 0x4b, 0x68,
	0xa7, 0xf6, 0x86, 0xa9, 0x5d, 0xeb, 0xae, 0x8e, 0x6d, 0x07, 0x56, 0x86, 0x7d, 0x05, 0x3b, 0x1a,
	0xd5, 0x3d, 0xaa, 0xd1, 0x3d, 0xaa, 0x39, 0x53, 0xdb, 0x1e, 0xfd, 0xd5, 0x83, 0x76, 0x35, 0xc6,
	0x5c, 0x24, 0xb1, 0xcc, 0x6c, 0x81, 0x1b, 0x7e, 0x35, 0x4a, 0xc4, 0x6f, 0x0e, 0x2a, 0x25, 0xd5,
	0x88, 0xc9, 0x18, 0x43, 0x76, 0x54, 0x3b, 0xde, 0x88, 0x5a, 0x0e, 0xe9, 0xca, 0x18, 0x3b, 0x7f,
	0xae, 0x55, 0x93, 0xbe, 0x5a, 0x9c, 0xf4, 0x27, 0xdb, 0x9e, 0x5b, 0x83, 0xb5, 0xc5, 0x35, 0xf8,
	0x4f, 0x9d, 0xbd, 0x82, 0x36, 0x43, 0x65, 0xf8, 0x1d, 0x67, 0xd4, 0x58, 0x91, 0xad, 0xba, 0x19,
	0x2d, 0x82, 0x64, 0x17, 0x36, 0x68, 0x5c, 0xa4, 0xc6, 0xed, 0x41, 0x33, 0xf2, 0x81, 0x75, 0x85,
	0x49, 0x71, 0xc7, 0x93, 0xa9, 0x2b, 0x4d, 0xd7, 0x72, 0xdb, 0xa3, 0x95, 0x2b, 0xd5, 0x80, 0x5b,
	0xb3, 0x01, 0xbb, 0xd4, 0x94, 0xa3, 0x30, 0xd3, 0x54, 0x3f, 0xfe, 0xb6, 0x47, 0xcb, 0xd4, 0xce,
	0x6f, 0xb3, 0x3f, 0xe8, 0xdc, 0x1a, 0x3c, 0x9e, 0xc6, 0xfa, 0xbf, 0x4c, 0xe3, 0x53, 0x76, 0x7f,
	0x0b, 0x61, 0xe5, 0xf6, 0x1b, 0x61, 0x50, 0x5d, 0xd1, 0x0c, 0x2b, 0xc7, 0x03, 0x58, 0xcf, 0x28,
	0x73, 0x5e, 0xb7, 0x22, 0xfb, 0xd9, 0xf9, 0x09, 0x3e, 0xaf, 0x2a, 0x99, 0x53, 0xdb, 0x6a, 0x16,
	0xaf, 0xa9, 0x2d, 0x5f, 0x73, 0x00, 0xfb, 0x55, 0xe2, 0x35, 0x4e, 0x6e, 0xdc, 0xd8, 0xae, 0xa5,
	0xe1, 0x0c, 0x3b, 0xe7, 0x70, 0x58, 0x51, 0x37, 0x0a, 0x73, 0xaa, 0x70, 0xf8, 0xa1, 0x30, 0xb1,
	0x9c, 0x08, 0x2f, 0x20, 0x2f, 0x60, 0x7b, 0x42, 0xb9, 0x19, 0x69, 0x64, 0x52, 0xc4, 0xba, 0x7c,
	0x8b, 0xb6, 0x2c, 0x36, 0xf4, 0x50, 0xe7, 0x67, 0xd8, 0xab, 0xce, 0x78, 0xcb, 0xd9, 0x58, 0x16,
	0xa6, 0xcc, 0xfd, 0x0e, 0x1a, 0x0a, 0xa9, 0x96, 0xc2, 0x65, 0xed, 0x9c, 0xee, 0xcf, 0xfe, 0x09,
	0xa5, 0x30, 0x72, 0x74, 0x54, 0xca, 0x3a, 0x3f, 0xcc, 0xfc, 0xb8, 0x19, 0x74, 0x65, 0x96, 0x51,
	0x11, 0xcf, 0xbd, 0x35, 0xcc, 0x23, 0xa5, 0x27, 0x55, 0x38, 0xef, 0xcb, 0x5c, 0xd6, 0x63, 0x5f,
	0x96, 0xed, 0x7f, 0x7d, 0x01, 0x3b, 0xef, 0xb5, 0xb7, 0x63, 0x68, 0xa8, 0x29, 0x34, 0xd9, 0x01,
	0x18, 0xdf, 0xe8, 0x5f, 0xee, 0xee, 0x52, 0x2e, 0x30, 0x78, 0x42, 0xda, 0xd0, 0xb2, 0xb1, 0x70,
	0x61, 0x8d, 0x7c, 0x06, 0xff, 0x9b, 0xd1, 0x5d, 0xca, 0x3e, 0x60, 0xb0, 0xf6, 0xfa, 0x8f, 0x3a,
	0xb4, 0x17, 0xda, 0x21, 0x07, 0xb0, 0x37, 0x5e, 0x40, 0x46, 0xd7, 0x52, 0x65, 0x34, 0x0d, 0x9e,
	0x90, 0x17, 0x70, 0xb8, 0x44, 0x5d, 0x14, 0x79, 0x6a, 0x77, 0x1c, 0xdd, 0x76, 0x05, 0x35, 0xf2,
	0x05, 0x84, 0x4b, 0x12, 0xc7, 0x5c, 0x52, 0x9e, 0x06, 0x6b, 0xe4, 0x1b, 0x78, 0xb9, 0x7c, 0x00,
	0x35, 0x74, 0xe8, 0xb6, 0xee, 0x82, 0x6b, 0x26, 0x85, 0x40, 0x66, 0x82, 0xf5, 0x15, 0xc2, 0xf7,
	0x1a, 0xd5, 0x23, 0x61, 0x7d, 0x45, 0x49, 0x5e, 0x64, 0x17, 0xe1, 0x42, 0x4e, 0x44, 0xb0, 0x41,
	0x9e, 0xc3, 0xb3, 0x95, 0x92, 0x08, 0x33, 0x79, 0x8f, 0x41, 0x83, 0x74, 0xe0, 0xcb, 0x25, 0xc1,
	0x5b, 0xc4, 0xbc, 0xcf, 0xef, 0xf1, 0x1d, 0xcf, 0x50, 0x16, 0x26, 0xd8, 0x24, 0x87, 0x70, 0xb0,
	0xa4, 0x39, 0xa7, 0xe2, 0xcc, 0x3f, 0x14, 0x41, 0x73, 0x45, 0x19, 0x67, 0xc2, 0xf0, 0x9e, 0x88,
	0x8b, 0x34, 0x41, 0xc1, 0x30, 0x68, 0xad, 0x90, 0xf4, 0xc4, 0x3d, 0x4d, 0x79, 0x3c, 0x40, 0xad,
	0x69, 0x82, 0x01, 0xac, 0xa8, 0xf4, 0x32, 0x95, 0x72, 0x2a, 0xd8, 0x22, 0x5f, 0x43, 0x67, 0xf5,
	0x19, 0x97, 0x5c, 0x69, 0x53, 0xe9, 0xb6, 0x57, 0x54, 0xfb, 0x26, 0xe3, 0x89, 0x72, 0x6f, 0x51,
	0xd0, 0x26, 0x7b, 0xf0, 0xff, 0x25, 0xfa, 0x6a, 0x10, 0xec, 0xdc, 0x36, 0xdc, 0x82, 0x7f, 0xff,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x92, 0x78, 0x50, 0x09, 0xff, 0x07, 0x00, 0x00,
}
