// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kingdom_list.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type KingdomListItem struct {
	KingdomId     uint32        `protobuf:"varint,1,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
	OriginTime    int64         `protobuf:"varint,2,opt,name=origin_time,json=originTime" json:"origin_time,omitempty"`
	NewFlag       bool          `protobuf:"varint,3,opt,name=new_flag,json=newFlag" json:"new_flag,omitempty"`
	HeadFlag      bool          `protobuf:"varint,4,opt,name=head_flag,json=headFlag" json:"head_flag,omitempty"`
	SettleFlag    bool          `protobuf:"varint,6,opt,name=settle_flag,json=settleFlag" json:"settle_flag,omitempty"`
	KingdomStatus KingdomStatus `protobuf:"varint,7,opt,name=kingdom_status,json=kingdomStatus,enum=protomsg.KingdomStatus" json:"kingdom_status,omitempty"`
}

func (m *KingdomListItem) Reset()                    { *m = KingdomListItem{} }
func (m *KingdomListItem) String() string            { return proto.CompactTextString(m) }
func (*KingdomListItem) ProtoMessage()               {}
func (*KingdomListItem) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{0} }

func (m *KingdomListItem) GetKingdomId() uint32 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

func (m *KingdomListItem) GetOriginTime() int64 {
	if m != nil {
		return m.OriginTime
	}
	return 0
}

func (m *KingdomListItem) GetNewFlag() bool {
	if m != nil {
		return m.NewFlag
	}
	return false
}

func (m *KingdomListItem) GetHeadFlag() bool {
	if m != nil {
		return m.HeadFlag
	}
	return false
}

func (m *KingdomListItem) GetSettleFlag() bool {
	if m != nil {
		return m.SettleFlag
	}
	return false
}

func (m *KingdomListItem) GetKingdomStatus() KingdomStatus {
	if m != nil {
		return m.KingdomStatus
	}
	return KingdomStatus_kKingdomStatusNull
}

// CL->GS 请求王国列表
type MsgCL2GSKingdomListInfoRequest struct {
}

func (m *MsgCL2GSKingdomListInfoRequest) Reset()                    { *m = MsgCL2GSKingdomListInfoRequest{} }
func (m *MsgCL2GSKingdomListInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSKingdomListInfoRequest) ProtoMessage()               {}
func (*MsgCL2GSKingdomListInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{1} }

// GS->CL 响应王国列表
type MsgGS2CLKingdomListInfoReply struct {
	ErrorCode    int32              `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	KingdomItems []*KingdomListItem `protobuf:"bytes,2,rep,name=kingdom_items,json=kingdomItems" json:"kingdom_items,omitempty"`
}

func (m *MsgGS2CLKingdomListInfoReply) Reset()                    { *m = MsgGS2CLKingdomListInfoReply{} }
func (m *MsgGS2CLKingdomListInfoReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLKingdomListInfoReply) ProtoMessage()               {}
func (*MsgGS2CLKingdomListInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{2} }

func (m *MsgGS2CLKingdomListInfoReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MsgGS2CLKingdomListInfoReply) GetKingdomItems() []*KingdomListItem {
	if m != nil {
		return m.KingdomItems
	}
	return nil
}

func init() {
	proto.RegisterType((*KingdomListItem)(nil), "protomsg.KingdomListItem")
	proto.RegisterType((*MsgCL2GSKingdomListInfoRequest)(nil), "protomsg.MsgCL2GSKingdomListInfoRequest")
	proto.RegisterType((*MsgGS2CLKingdomListInfoReply)(nil), "protomsg.MsgGS2CLKingdomListInfoReply")
}

func init() { proto.RegisterFile("kingdom_list.proto", fileDescriptor24) }

var fileDescriptor24 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xbd, 0x6e, 0xf2, 0x30,
	0x14, 0x86, 0x15, 0xf8, 0x3e, 0x08, 0x87, 0x42, 0x2b, 0x2f, 0x0d, 0xfd, 0xc3, 0x62, 0xca, 0xc4,
	0x90, 0xee, 0x2c, 0x48, 0x45, 0xa8, 0xb0, 0x98, 0xee, 0x51, 0x8a, 0x0f, 0xae, 0x45, 0x6c, 0xd3,
	0xd8, 0x08, 0x75, 0xe8, 0x0d, 0xf7, 0x2a, 0x2a, 0x6c, 0x52, 0x21, 0x31, 0x59, 0x7e, 0x9f, 0xd7,
	0xd6, 0x39, 0x0f, 0x90, 0xad, 0xd4, 0x82, 0x1b, 0x95, 0x97, 0xd2, 0xba, 0xf1, 0xae, 0x32, 0xce,
	0x90, 0xd8, 0x1f, 0xca, 0x8a, 0xbb, 0x1b, 0x65, 0x45, 0xbe, 0x36, 0x4a, 0x19, 0x1d, 0xd8, 0xe8,
	0x27, 0x82, 0xeb, 0xd7, 0xf0, 0x64, 0x21, 0xad, 0x9b, 0x3b, 0x54, 0xe4, 0x11, 0xa0, 0xfe, 0x45,
	0xf2, 0x24, 0xa2, 0x51, 0xda, 0x63, 0x9d, 0x53, 0x32, 0xe7, 0x64, 0x08, 0x5d, 0x53, 0x49, 0x21,
	0x75, 0xee, 0xa4, 0xc2, 0xa4, 0x41, 0xa3, 0xb4, 0xc9, 0x20, 0x44, 0x6f, 0x52, 0x21, 0x19, 0x40,
	0xac, 0xf1, 0x90, 0x6f, 0xca, 0x42, 0x24, 0x4d, 0x1a, 0xa5, 0x31, 0x6b, 0x6b, 0x3c, 0xbc, 0x94,
	0x85, 0x20, 0xf7, 0xd0, 0xf9, 0xc0, 0x82, 0x07, 0xf6, 0xcf, 0xb3, 0xf8, 0x18, 0x78, 0x38, 0x84,
	0xae, 0x45, 0xe7, 0x4a, 0x0c, 0xb8, 0xe5, 0x31, 0x84, 0xc8, 0x17, 0x26, 0xd0, 0xaf, 0x07, 0xb3,
	0xae, 0x70, 0x7b, 0x9b, 0xb4, 0x69, 0x94, 0xf6, 0xb3, 0xdb, 0x71, 0xbd, 0xe1, 0xf8, 0xb4, 0xcb,
	0xca, 0x63, 0xd6, 0xdb, 0x9e, 0x5f, 0x47, 0x14, 0x9e, 0x96, 0x56, 0x4c, 0x17, 0xd9, 0x6c, 0x75,
	0xbe, 0xb3, 0xde, 0x18, 0x86, 0x9f, 0x7b, 0xb4, 0x6e, 0xf4, 0x0d, 0x0f, 0x4b, 0x2b, 0x66, 0xab,
	0x6c, 0xba, 0xb8, 0x68, 0xec, 0xca, 0xaf, 0xa3, 0x1a, 0xac, 0x2a, 0x53, 0xe5, 0x6b, 0xc3, 0xd1,
	0xab, 0xf9, 0xcf, 0x3a, 0x3e, 0x99, 0x1a, 0x8e, 0x64, 0x02, 0xbd, 0x3f, 0x73, 0x0e, 0x95, 0x4d,
	0x1a, 0xb4, 0x99, 0x76, 0xb3, 0xc1, 0xc5, 0x7c, 0xb5, 0x6b, 0x76, 0x55, 0x7b, 0x3d, 0xd6, 0xdf,
	0x5b, 0xbe, 0xf7, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x5d, 0xbd, 0x3f, 0x39, 0xc6, 0x01, 0x00,
	0x00,
}
