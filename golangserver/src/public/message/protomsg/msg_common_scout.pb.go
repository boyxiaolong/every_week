// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_common_scout.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ScoutCommandStatus int32

const (
	ScoutCommandStatus_kScoutCommandStatus_None       ScoutCommandStatus = 0
	ScoutCommandStatus_kScoutCommandStatus_Moving     ScoutCommandStatus = 1
	ScoutCommandStatus_kScoutCommandStatus_Moveback   ScoutCommandStatus = 2
	ScoutCommandStatus_kScoutCommandStatus_DoScout    ScoutCommandStatus = 3
	ScoutCommandStatus_kScoutCommandStatus_EndCommand ScoutCommandStatus = 4
	ScoutCommandStatus_kScoutCommandStatus_Visiting   ScoutCommandStatus = 5
	ScoutCommandStatus_kScoutCommandStatus_Station    ScoutCommandStatus = 6
)

var ScoutCommandStatus_name = map[int32]string{
	0: "kScoutCommandStatus_None",
	1: "kScoutCommandStatus_Moving",
	2: "kScoutCommandStatus_Moveback",
	3: "kScoutCommandStatus_DoScout",
	4: "kScoutCommandStatus_EndCommand",
	5: "kScoutCommandStatus_Visiting",
	6: "kScoutCommandStatus_Station",
}
var ScoutCommandStatus_value = map[string]int32{
	"kScoutCommandStatus_None":       0,
	"kScoutCommandStatus_Moving":     1,
	"kScoutCommandStatus_Moveback":   2,
	"kScoutCommandStatus_DoScout":    3,
	"kScoutCommandStatus_EndCommand": 4,
	"kScoutCommandStatus_Visiting":   5,
	"kScoutCommandStatus_Station":    6,
}

func (x ScoutCommandStatus) String() string {
	return proto.EnumName(ScoutCommandStatus_name, int32(x))
}
func (ScoutCommandStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor55, []int{0} }

type ScoutCommandTarget int32

const (
	ScoutCommandTarget_kScoutCommandTarget_None        ScoutCommandTarget = 0
	ScoutCommandTarget_kScoutCommandTarget_MoveBack    ScoutCommandTarget = 1
	ScoutCommandTarget_kScoutCommandTarget_DoScout     ScoutCommandTarget = 2
	ScoutCommandTarget_kScoutCommandTarget_Explore     ScoutCommandTarget = 3
	ScoutCommandTarget_kScoutCommandTarget_Visit       ScoutCommandTarget = 4
	ScoutCommandTarget_kScoutCommandTarget_AutoExplore ScoutCommandTarget = 5
)

var ScoutCommandTarget_name = map[int32]string{
	0: "kScoutCommandTarget_None",
	1: "kScoutCommandTarget_MoveBack",
	2: "kScoutCommandTarget_DoScout",
	3: "kScoutCommandTarget_Explore",
	4: "kScoutCommandTarget_Visit",
	5: "kScoutCommandTarget_AutoExplore",
}
var ScoutCommandTarget_value = map[string]int32{
	"kScoutCommandTarget_None":        0,
	"kScoutCommandTarget_MoveBack":    1,
	"kScoutCommandTarget_DoScout":     2,
	"kScoutCommandTarget_Explore":     3,
	"kScoutCommandTarget_Visit":       4,
	"kScoutCommandTarget_AutoExplore": 5,
}

func (x ScoutCommandTarget) String() string {
	return proto.EnumName(ScoutCommandTarget_name, int32(x))
}
func (ScoutCommandTarget) EnumDescriptor() ([]byte, []int) { return fileDescriptor55, []int{1} }

// 开启迷雾类型
type MistOpenType int32

const (
	MistOpenType_kMistOpenType_Scout    MistOpenType = 0
	MistOpenType_kMistOpenType_Item     MistOpenType = 1
	MistOpenType_kMistOpenType_Building MistOpenType = 2
	MistOpenType_kMistOpenType_Other    MistOpenType = 3
)

var MistOpenType_name = map[int32]string{
	0: "kMistOpenType_Scout",
	1: "kMistOpenType_Item",
	2: "kMistOpenType_Building",
	3: "kMistOpenType_Other",
}
var MistOpenType_value = map[string]int32{
	"kMistOpenType_Scout":    0,
	"kMistOpenType_Item":     1,
	"kMistOpenType_Building": 2,
	"kMistOpenType_Other":    3,
}

func (x MistOpenType) String() string {
	return proto.EnumName(MistOpenType_name, int32(x))
}
func (MistOpenType) EnumDescriptor() ([]byte, []int) { return fileDescriptor55, []int{2} }

type ScoutHp struct {
	CurrentHp uint64 `protobuf:"varint,1,opt,name=current_hp,json=currentHp" json:"current_hp,omitempty"`
	TotalHp   uint64 `protobuf:"varint,2,opt,name=total_hp,json=totalHp" json:"total_hp,omitempty"`
}

func (m *ScoutHp) Reset()                    { *m = ScoutHp{} }
func (m *ScoutHp) String() string            { return proto.CompactTextString(m) }
func (*ScoutHp) ProtoMessage()               {}
func (*ScoutHp) Descriptor() ([]byte, []int) { return fileDescriptor55, []int{0} }

func (m *ScoutHp) GetCurrentHp() uint64 {
	if m != nil {
		return m.CurrentHp
	}
	return 0
}

func (m *ScoutHp) GetTotalHp() uint64 {
	if m != nil {
		return m.TotalHp
	}
	return 0
}

type ScoutArmyData struct {
	Hero1          *HeroInfo          `protobuf:"bytes,1,opt,name=hero1" json:"hero1,omitempty"`
	Hero2          *HeroInfo          `protobuf:"bytes,2,opt,name=hero2" json:"hero2,omitempty"`
	Troops         []*TroopData       `protobuf:"bytes,3,rep,name=troops" json:"troops,omitempty"`
	Leader         *EntityOwnerData   `protobuf:"bytes,4,opt,name=leader" json:"leader,omitempty"`
	ArmyTotalCount uint64             `protobuf:"varint,5,opt,name=army_total_count,json=armyTotalCount" json:"army_total_count,omitempty"`
	DefendInfo     *DefendMarchesInfo `protobuf:"bytes,6,opt,name=defend_info,json=defendInfo" json:"defend_info,omitempty"`
}

func (m *ScoutArmyData) Reset()                    { *m = ScoutArmyData{} }
func (m *ScoutArmyData) String() string            { return proto.CompactTextString(m) }
func (*ScoutArmyData) ProtoMessage()               {}
func (*ScoutArmyData) Descriptor() ([]byte, []int) { return fileDescriptor55, []int{1} }

func (m *ScoutArmyData) GetHero1() *HeroInfo {
	if m != nil {
		return m.Hero1
	}
	return nil
}

func (m *ScoutArmyData) GetHero2() *HeroInfo {
	if m != nil {
		return m.Hero2
	}
	return nil
}

func (m *ScoutArmyData) GetTroops() []*TroopData {
	if m != nil {
		return m.Troops
	}
	return nil
}

func (m *ScoutArmyData) GetLeader() *EntityOwnerData {
	if m != nil {
		return m.Leader
	}
	return nil
}

func (m *ScoutArmyData) GetArmyTotalCount() uint64 {
	if m != nil {
		return m.ArmyTotalCount
	}
	return 0
}

func (m *ScoutArmyData) GetDefendInfo() *DefendMarchesInfo {
	if m != nil {
		return m.DefendInfo
	}
	return nil
}

// 主堡
type ScoutExtraCastle struct {
	CityWallHp      *ScoutHp       `protobuf:"bytes,1,opt,name=city_wall_hp,json=cityWallHp" json:"city_wall_hp,omitempty"`
	March           *ScoutArmyData `protobuf:"bytes,2,opt,name=march" json:"march,omitempty"`
	GuildMarch      *ScoutArmyData `protobuf:"bytes,3,opt,name=guild_march,json=guildMarch" json:"guild_march,omitempty"`
	Resource        *ResourceSet   `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	WatchTowerHp    *ScoutHp       `protobuf:"bytes,5,opt,name=watch_tower_hp,json=watchTowerHp" json:"watch_tower_hp,omitempty"`
	WatchTowerLevel uint32         `protobuf:"varint,6,opt,name=watch_tower_level,json=watchTowerLevel" json:"watch_tower_level,omitempty"`
}

func (m *ScoutExtraCastle) Reset()                    { *m = ScoutExtraCastle{} }
func (m *ScoutExtraCastle) String() string            { return proto.CompactTextString(m) }
func (*ScoutExtraCastle) ProtoMessage()               {}
func (*ScoutExtraCastle) Descriptor() ([]byte, []int) { return fileDescriptor55, []int{2} }

func (m *ScoutExtraCastle) GetCityWallHp() *ScoutHp {
	if m != nil {
		return m.CityWallHp
	}
	return nil
}

func (m *ScoutExtraCastle) GetMarch() *ScoutArmyData {
	if m != nil {
		return m.March
	}
	return nil
}

func (m *ScoutExtraCastle) GetGuildMarch() *ScoutArmyData {
	if m != nil {
		return m.GuildMarch
	}
	return nil
}

func (m *ScoutExtraCastle) GetResource() *ResourceSet {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *ScoutExtraCastle) GetWatchTowerHp() *ScoutHp {
	if m != nil {
		return m.WatchTowerHp
	}
	return nil
}

func (m *ScoutExtraCastle) GetWatchTowerLevel() uint32 {
	if m != nil {
		return m.WatchTowerLevel
	}
	return 0
}

type ScoutParams struct {
	VisitTime int64 `protobuf:"varint,1,opt,name=visit_time,json=visitTime" json:"visit_time,omitempty"`
}

func (m *ScoutParams) Reset()                    { *m = ScoutParams{} }
func (m *ScoutParams) String() string            { return proto.CompactTextString(m) }
func (*ScoutParams) ProtoMessage()               {}
func (*ScoutParams) Descriptor() ([]byte, []int) { return fileDescriptor55, []int{3} }

func (m *ScoutParams) GetVisitTime() int64 {
	if m != nil {
		return m.VisitTime
	}
	return 0
}

type ScoutCommand struct {
	Position      *Vector2D          `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	TargetType    ScoutCommandTarget `protobuf:"varint,3,opt,name=target_type,json=targetType,enum=protomsg.ScoutCommandTarget" json:"target_type,omitempty"`
	TargetId      uint64             `protobuf:"varint,4,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Route         []*Vector2D        `protobuf:"bytes,5,rep,name=route" json:"route,omitempty"`
	Params        *ScoutParams       `protobuf:"bytes,6,opt,name=params" json:"params,omitempty"`
	CommandStatus ScoutCommandStatus `protobuf:"varint,99,opt,name=command_status,json=commandStatus,enum=protomsg.ScoutCommandStatus" json:"command_status,omitempty"`
}

func (m *ScoutCommand) Reset()                    { *m = ScoutCommand{} }
func (m *ScoutCommand) String() string            { return proto.CompactTextString(m) }
func (*ScoutCommand) ProtoMessage()               {}
func (*ScoutCommand) Descriptor() ([]byte, []int) { return fileDescriptor55, []int{4} }

func (m *ScoutCommand) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *ScoutCommand) GetTargetType() ScoutCommandTarget {
	if m != nil {
		return m.TargetType
	}
	return ScoutCommandTarget_kScoutCommandTarget_None
}

func (m *ScoutCommand) GetTargetId() uint64 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *ScoutCommand) GetRoute() []*Vector2D {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *ScoutCommand) GetParams() *ScoutParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *ScoutCommand) GetCommandStatus() ScoutCommandStatus {
	if m != nil {
		return m.CommandStatus
	}
	return ScoutCommandStatus_kScoutCommandStatus_None
}

type ScoutData struct {
	ScoutIndex uint32        `protobuf:"varint,1,opt,name=scout_index,json=scoutIndex" json:"scout_index,omitempty"`
	EntityId   uint64        `protobuf:"varint,3,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Position   *Vector2D     `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`
	Command    *ScoutCommand `protobuf:"bytes,10,opt,name=command" json:"command,omitempty"`
}

func (m *ScoutData) Reset()                    { *m = ScoutData{} }
func (m *ScoutData) String() string            { return proto.CompactTextString(m) }
func (*ScoutData) ProtoMessage()               {}
func (*ScoutData) Descriptor() ([]byte, []int) { return fileDescriptor55, []int{5} }

func (m *ScoutData) GetScoutIndex() uint32 {
	if m != nil {
		return m.ScoutIndex
	}
	return 0
}

func (m *ScoutData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *ScoutData) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *ScoutData) GetCommand() *ScoutCommand {
	if m != nil {
		return m.Command
	}
	return nil
}

func init() {
	proto.RegisterType((*ScoutHp)(nil), "protomsg.ScoutHp")
	proto.RegisterType((*ScoutArmyData)(nil), "protomsg.ScoutArmyData")
	proto.RegisterType((*ScoutExtraCastle)(nil), "protomsg.ScoutExtraCastle")
	proto.RegisterType((*ScoutParams)(nil), "protomsg.ScoutParams")
	proto.RegisterType((*ScoutCommand)(nil), "protomsg.ScoutCommand")
	proto.RegisterType((*ScoutData)(nil), "protomsg.ScoutData")
	proto.RegisterEnum("protomsg.ScoutCommandStatus", ScoutCommandStatus_name, ScoutCommandStatus_value)
	proto.RegisterEnum("protomsg.ScoutCommandTarget", ScoutCommandTarget_name, ScoutCommandTarget_value)
	proto.RegisterEnum("protomsg.MistOpenType", MistOpenType_name, MistOpenType_value)
}

func init() { proto.RegisterFile("msg_common_scout.proto", fileDescriptor55) }

var fileDescriptor55 = []byte{
	// 840 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xc7, 0x23, 0x51, 0x92, 0xe5, 0xa1, 0xed, 0x32, 0x9b, 0xc6, 0xa1, 0x3f, 0x12, 0x1b, 0xea,
	0xc5, 0x70, 0x1b, 0xa3, 0x56, 0x0e, 0xed, 0xa1, 0x3d, 0x24, 0xb2, 0x01, 0x09, 0xa8, 0xeb, 0x62,
	0x2d, 0xb4, 0x47, 0x62, 0x43, 0xae, 0x25, 0xc2, 0xe4, 0x2e, 0xb1, 0x5c, 0x5a, 0xd6, 0x33, 0xe5,
	0x05, 0xfa, 0x08, 0x7d, 0x86, 0x3e, 0x4b, 0x0f, 0xc5, 0xce, 0x92, 0x96, 0xac, 0x0f, 0x23, 0x27,
	0x89, 0xff, 0xf9, 0xed, 0xcc, 0xfc, 0x87, 0xb3, 0x84, 0xdd, 0x34, 0x1f, 0x05, 0xa1, 0x4c, 0x53,
	0x29, 0x82, 0x3c, 0x94, 0x85, 0x3e, 0xcb, 0x94, 0xd4, 0x92, 0xb4, 0xf1, 0x27, 0xcd, 0x47, 0xfb,
	0xdf, 0xce, 0x11, 0x29, 0xcb, 0x6c, 0x7c, 0xdf, 0x9b, 0xa9, 0x56, 0xe9, 0xf4, 0x60, 0xe3, 0xc6,
	0x24, 0xe8, 0x67, 0xe4, 0x2d, 0x40, 0x58, 0x28, 0xc5, 0x85, 0x0e, 0xc6, 0x99, 0x5f, 0x3b, 0xae,
	0x9d, 0x34, 0xe8, 0x66, 0xa9, 0xf4, 0x33, 0xb2, 0x07, 0x6d, 0x2d, 0x35, 0x4b, 0x4c, 0xb0, 0x8e,
	0xc1, 0x0d, 0x7c, 0xee, 0x67, 0x9d, 0x2f, 0x75, 0xd8, 0xc6, 0x2c, 0x1f, 0x55, 0x3a, 0xbd, 0x60,
	0x9a, 0x91, 0x13, 0x68, 0x8e, 0xb9, 0x92, 0xe7, 0x98, 0xc6, 0xed, 0x92, 0xb3, 0xaa, 0xb1, 0xb3,
	0x3e, 0x57, 0x72, 0x20, 0x6e, 0x25, 0xb5, 0x40, 0x45, 0x76, 0x31, 0xe7, 0x33, 0x64, 0x97, 0x7c,
	0x0f, 0x2d, 0xad, 0xa4, 0xcc, 0x72, 0xdf, 0x39, 0x76, 0x4e, 0xdc, 0xee, 0xab, 0x19, 0x3a, 0x34,
	0xba, 0x29, 0x4c, 0x4b, 0x84, 0x9c, 0x43, 0x2b, 0xe1, 0x2c, 0xe2, 0xca, 0x6f, 0x60, 0xde, 0xbd,
	0x19, 0x7c, 0x29, 0x74, 0xac, 0xa7, 0xd7, 0x13, 0xc1, 0x95, 0x3d, 0x62, 0x41, 0x72, 0x02, 0x1e,
	0x53, 0xe9, 0x34, 0xb0, 0x2e, 0x43, 0x59, 0x08, 0xed, 0x37, 0xd1, 0xe8, 0x8e, 0xd1, 0x87, 0x46,
	0xee, 0x19, 0x95, 0xfc, 0x02, 0x6e, 0xc4, 0x6f, 0xb9, 0x88, 0x82, 0x58, 0xdc, 0x4a, 0xbf, 0x85,
	0x15, 0x0e, 0x66, 0x15, 0x2e, 0x30, 0x78, 0xc5, 0x54, 0x38, 0xe6, 0x39, 0x5a, 0x00, 0xcb, 0x9b,
	0xff, 0x9d, 0x7f, 0xea, 0xe0, 0xe1, 0xb4, 0x2e, 0x1f, 0xb4, 0x62, 0x3d, 0x96, 0xeb, 0x84, 0x93,
	0x0f, 0xb0, 0x15, 0xc6, 0x7a, 0x1a, 0x4c, 0x58, 0x92, 0x54, 0xe3, 0x77, 0xbb, 0x2f, 0x67, 0x39,
	0xcb, 0xb7, 0x44, 0xc1, 0x60, 0x7f, 0xb1, 0x24, 0xe9, 0x67, 0xe4, 0x3d, 0x34, 0x53, 0x53, 0xa4,
	0x9c, 0xdd, 0x9b, 0x05, 0xba, 0x7a, 0x1b, 0xd4, 0x52, 0xe4, 0x67, 0x70, 0x47, 0x45, 0x9c, 0x44,
	0x81, 0x3d, 0xe4, 0x3c, 0x7f, 0x08, 0x90, 0x45, 0x13, 0xe4, 0x1c, 0xda, 0x8a, 0xe7, 0xb2, 0x50,
	0x21, 0x2f, 0xe7, 0xf9, 0x7a, 0x76, 0x8c, 0x96, 0x91, 0x1b, 0xae, 0xe9, 0x23, 0x46, 0x7e, 0x82,
	0x9d, 0x09, 0xd3, 0xe1, 0x38, 0xd0, 0x72, 0xc2, 0x95, 0xb1, 0xd4, 0x5c, 0x67, 0x69, 0x0b, 0xc1,
	0xa1, 0xe1, 0xfa, 0x19, 0x39, 0x85, 0x97, 0xf3, 0x07, 0x13, 0x7e, 0xcf, 0x13, 0x1c, 0xf1, 0x36,
	0xfd, 0x66, 0x06, 0xfe, 0x66, 0xe4, 0xce, 0x0f, 0xe0, 0x62, 0x92, 0x3f, 0x98, 0x62, 0x69, 0x6e,
	0x36, 0xf8, 0x3e, 0xce, 0x63, 0x1d, 0xe8, 0x38, 0xe5, 0x38, 0x42, 0x87, 0x6e, 0xa2, 0x32, 0x8c,
	0x53, 0xde, 0xf9, 0xbb, 0x0e, 0x5b, 0x88, 0xf7, 0x64, 0x9a, 0x32, 0x11, 0x91, 0x33, 0x68, 0x67,
	0x32, 0x8f, 0x75, 0x2c, 0xc5, 0xf2, 0xfa, 0xdd, 0xf3, 0x50, 0x4b, 0xd5, 0x8d, 0xe8, 0x23, 0x43,
	0x7e, 0x05, 0x57, 0x33, 0x35, 0xe2, 0x3a, 0xd0, 0xd3, 0x8c, 0xe3, 0x00, 0x77, 0xba, 0x87, 0x0b,
	0x86, 0xca, 0xe4, 0x43, 0x04, 0x29, 0xd8, 0x03, 0xc3, 0x69, 0xc6, 0xc9, 0x01, 0x6c, 0x96, 0xc7,
	0xe3, 0x08, 0xc7, 0xd8, 0xa0, 0x6d, 0x2b, 0x0c, 0x22, 0x73, 0x0f, 0x94, 0x2c, 0x34, 0xf7, 0x9b,
	0xb8, 0xdc, 0xab, 0x1a, 0xb1, 0x00, 0x79, 0x0f, 0xad, 0x0c, 0xfd, 0x96, 0x8b, 0xf7, 0x7a, 0xa1,
	0x01, 0x3b, 0x0c, 0x5a, 0x42, 0xa4, 0x07, 0x3b, 0xa1, 0x6d, 0x29, 0xc8, 0x35, 0xd3, 0x45, 0xee,
	0x87, 0xcf, 0xf5, 0x7d, 0x83, 0x0c, 0xdd, 0x0e, 0xe7, 0x1f, 0x3b, 0x5f, 0x6a, 0xb0, 0x89, 0x14,
	0xde, 0xee, 0x23, 0x70, 0xf1, 0xab, 0x13, 0xc4, 0x22, 0xe2, 0x0f, 0x38, 0xe8, 0x6d, 0x0a, 0x28,
	0x0d, 0x8c, 0x62, 0x9c, 0x72, 0xbc, 0x65, 0xc6, 0xa9, 0x63, 0x9d, 0x5a, 0x61, 0xf0, 0x74, 0xea,
	0x8d, 0xaf, 0x98, 0xfa, 0x8f, 0xb0, 0x51, 0x36, 0xe3, 0x03, 0xe2, 0xbb, 0xab, 0x3b, 0xa7, 0x15,
	0x76, 0xfa, 0x5f, 0x0d, 0xc8, 0xb2, 0x27, 0x72, 0x08, 0xfe, 0xdd, 0xb2, 0x1c, 0xfc, 0x2e, 0x05,
	0xf7, 0x5e, 0x90, 0x77, 0xb0, 0xbf, 0x2a, 0x7a, 0x25, 0xef, 0x63, 0x31, 0xf2, 0x6a, 0xe4, 0x18,
	0x0e, 0xd7, 0xc4, 0xf9, 0x67, 0x16, 0xde, 0x79, 0x75, 0x72, 0x04, 0x07, 0xab, 0x88, 0x0b, 0x89,
	0xa2, 0xe7, 0x90, 0x0e, 0xbc, 0x5b, 0x05, 0x5c, 0x8a, 0xa8, 0x14, 0xbc, 0xc6, 0xba, 0x32, 0x7f,
	0x9a, 0x2d, 0x36, 0x8d, 0x34, 0xd7, 0x95, 0x31, 0x3f, 0xb1, 0x14, 0x5e, 0xeb, 0xf4, 0xdf, 0x05,
	0xfb, 0x76, 0x15, 0x97, 0xec, 0x5b, 0xb9, 0xb2, 0xbf, 0x58, 0xb7, 0x8c, 0x1a, 0x7b, 0x9f, 0x8c,
	0xbd, 0xda, 0x52, 0xdd, 0x92, 0xa8, 0xec, 0xd5, 0xd7, 0x01, 0x97, 0x0f, 0x59, 0x22, 0x15, 0xf7,
	0x1c, 0xf2, 0x16, 0xf6, 0x56, 0x01, 0xe8, 0xcd, 0x6b, 0x90, 0xef, 0xe0, 0x68, 0x55, 0xf8, 0x63,
	0xa1, 0x65, 0x95, 0xa3, 0x79, 0xaa, 0x61, 0xeb, 0x2a, 0xce, 0xf5, 0x75, 0xc6, 0x05, 0x5e, 0xaa,
	0x37, 0xf0, 0xea, 0x6e, 0x5e, 0x08, 0x6c, 0x37, 0x2f, 0xc8, 0x2e, 0x90, 0xa7, 0x81, 0x81, 0xe6,
	0xa9, 0x57, 0x23, 0xfb, 0xb0, 0xfb, 0x54, 0xff, 0x64, 0xbe, 0x73, 0x66, 0xb4, 0xf5, 0xe5, 0x64,
	0xd7, 0x7a, 0xcc, 0x95, 0xe7, 0x7c, 0x6e, 0xe1, 0xc6, 0x7d, 0xf8, 0x3f, 0x00, 0x00, 0xff, 0xff,
	0x28, 0xfb, 0x99, 0x05, 0x79, 0x07, 0x00, 0x00,
}
