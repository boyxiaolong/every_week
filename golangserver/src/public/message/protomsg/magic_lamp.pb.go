// Code generated by protoc-gen-go. DO NOT EDIT.
// source: magic_lamp.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MsgGS2CLMagicLampNotice struct {
	Type     MagicLampType        `protobuf:"varint,1,opt,name=type,enum=protomsg.MagicLampType" json:"type,omitempty"`
	Level    MagicLampLevel       `protobuf:"varint,2,opt,name=level,enum=protomsg.MagicLampLevel" json:"level,omitempty"`
	Content  *google_protobuf.Any `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	RegionId uint64               `protobuf:"varint,4,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
}

func (m *MsgGS2CLMagicLampNotice) Reset()                    { *m = MsgGS2CLMagicLampNotice{} }
func (m *MsgGS2CLMagicLampNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLMagicLampNotice) ProtoMessage()               {}
func (*MsgGS2CLMagicLampNotice) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{0} }

func (m *MsgGS2CLMagicLampNotice) GetType() MagicLampType {
	if m != nil {
		return m.Type
	}
	return MagicLampType_kMagicLampType_None
}

func (m *MsgGS2CLMagicLampNotice) GetLevel() MagicLampLevel {
	if m != nil {
		return m.Level
	}
	return MagicLampLevel_kMagicLampLevel_None
}

func (m *MsgGS2CLMagicLampNotice) GetContent() *google_protobuf.Any {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MsgGS2CLMagicLampNotice) GetRegionId() uint64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgGS2CLMagicLampNotice)(nil), "protomsg.MsgGS2CLMagicLampNotice")
}

func init() { proto.RegisterFile("magic_lamp.proto", fileDescriptor26) }

var fileDescriptor26 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x4d, 0x4c, 0xcf,
	0x4c, 0x8e, 0xcf, 0x49, 0xcc, 0x2d, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53,
	0xb9, 0xc5, 0xe9, 0x52, 0xd2, 0xb9, 0xc5, 0xe9, 0xf1, 0xc9, 0xf9, 0xb9, 0xb9, 0xf9, 0x79, 0xf1,
	0xe8, 0xca, 0xa4, 0x24, 0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xbc, 0xa4, 0xd2, 0x34,
	0xfd, 0xc4, 0xbc, 0x4a, 0x88, 0x94, 0xd2, 0x61, 0x46, 0x2e, 0x71, 0xdf, 0xe2, 0x74, 0xf7, 0x60,
	0x23, 0x67, 0x1f, 0x5f, 0x90, 0x3e, 0x9f, 0xc4, 0xdc, 0x02, 0xbf, 0xfc, 0x92, 0xcc, 0xe4, 0x54,
	0x21, 0x6d, 0x2e, 0x96, 0x92, 0xca, 0x82, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x3e, 0x23, 0x71,
	0x3d, 0x98, 0x65, 0x7a, 0x70, 0x85, 0x21, 0x95, 0x05, 0xa9, 0x41, 0x60, 0x45, 0x42, 0x7a, 0x5c,
	0xac, 0x39, 0xa9, 0x65, 0xa9, 0x39, 0x12, 0x4c, 0x60, 0xd5, 0x12, 0x58, 0x54, 0xfb, 0x80, 0xe4,
	0x83, 0x20, 0xca, 0x84, 0xf4, 0xb8, 0xd8, 0x93, 0xf3, 0xf3, 0x4a, 0x52, 0xf3, 0x4a, 0x24, 0x98,
	0x15, 0x18, 0x35, 0xb8, 0x8d, 0x44, 0xf4, 0x20, 0xae, 0xd4, 0x83, 0xb9, 0x52, 0xcf, 0x31, 0xaf,
	0x32, 0x08, 0xa6, 0x48, 0x48, 0x9a, 0x8b, 0xb3, 0x28, 0x35, 0x3d, 0x33, 0x3f, 0x2f, 0x3e, 0x33,
	0x45, 0x82, 0x45, 0x81, 0x51, 0x83, 0x25, 0x88, 0x03, 0x22, 0xe0, 0x99, 0x92, 0xc4, 0x06, 0xd6,
	0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x04, 0xc2, 0x67, 0x22, 0x01, 0x00, 0x00,
}
