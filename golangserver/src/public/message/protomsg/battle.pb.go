// Code generated by protoc-gen-go. DO NOT EDIT.
// source: battle.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 主动技能释放
type MsgCL2GSSkillCastRequest struct {
	MarchIndex     uint32    `protobuf:"varint,1,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
	SkillGroupId   uint32    `protobuf:"varint,2,opt,name=skill_group_id,json=skillGroupId" json:"skill_group_id,omitempty"`
	TargetEntityId uint64    `protobuf:"varint,3,opt,name=target_entity_id,json=targetEntityId" json:"target_entity_id,omitempty"`
	TarPos         *Vector2D `protobuf:"bytes,4,opt,name=tar_pos,json=tarPos" json:"tar_pos,omitempty"`
	RegionId       uint64    `protobuf:"varint,5,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
}

func (m *MsgCL2GSSkillCastRequest) Reset()                    { *m = MsgCL2GSSkillCastRequest{} }
func (m *MsgCL2GSSkillCastRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSSkillCastRequest) ProtoMessage()               {}
func (*MsgCL2GSSkillCastRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *MsgCL2GSSkillCastRequest) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

func (m *MsgCL2GSSkillCastRequest) GetSkillGroupId() uint32 {
	if m != nil {
		return m.SkillGroupId
	}
	return 0
}

func (m *MsgCL2GSSkillCastRequest) GetTargetEntityId() uint64 {
	if m != nil {
		return m.TargetEntityId
	}
	return 0
}

func (m *MsgCL2GSSkillCastRequest) GetTarPos() *Vector2D {
	if m != nil {
		return m.TarPos
	}
	return nil
}

func (m *MsgCL2GSSkillCastRequest) GetRegionId() uint64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

type MsgGS2CLSkillCastReply struct {
	RegionId  uint64 `protobuf:"varint,1,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	ErrorCode int32  `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLSkillCastReply) Reset()                    { *m = MsgGS2CLSkillCastReply{} }
func (m *MsgGS2CLSkillCastReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLSkillCastReply) ProtoMessage()               {}
func (*MsgGS2CLSkillCastReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *MsgGS2CLSkillCastReply) GetRegionId() uint64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

func (m *MsgGS2CLSkillCastReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 战斗回合结束以后的entity数据
type BattleEntityRoundEndData struct {
	EntityId   uint64 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	IsDead     bool   `protobuf:"varint,2,opt,name=is_dead,json=isDead" json:"is_dead,omitempty"`
	RemainRage int32  `protobuf:"varint,3,opt,name=remain_rage,json=remainRage" json:"remain_rage,omitempty"`
}

func (m *BattleEntityRoundEndData) Reset()                    { *m = BattleEntityRoundEndData{} }
func (m *BattleEntityRoundEndData) String() string            { return proto.CompactTextString(m) }
func (*BattleEntityRoundEndData) ProtoMessage()               {}
func (*BattleEntityRoundEndData) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *BattleEntityRoundEndData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *BattleEntityRoundEndData) GetIsDead() bool {
	if m != nil {
		return m.IsDead
	}
	return false
}

func (m *BattleEntityRoundEndData) GetRemainRage() int32 {
	if m != nil {
		return m.RemainRage
	}
	return 0
}

// 同步主动技能即时数据
type MsgGS2CLBattleDirectDataSyn struct {
	SkillResults   *SkillResult `protobuf:"bytes,1,opt,name=skill_results,json=skillResults" json:"skill_results,omitempty"`
	SkillGroupId   uint32       `protobuf:"varint,2,opt,name=skill_group_id,json=skillGroupId" json:"skill_group_id,omitempty"`
	TargetEntityId uint64       `protobuf:"varint,3,opt,name=target_entity_id,json=targetEntityId" json:"target_entity_id,omitempty"`
	TarPos         *Vector2D    `protobuf:"bytes,4,opt,name=tar_pos,json=tarPos" json:"tar_pos,omitempty"`
	// special
	// 冲锋的位置
	AssaultPos *Vector2D                   `protobuf:"bytes,10,opt,name=assault_pos,json=assaultPos" json:"assault_pos,omitempty"`
	EntityData []*BattleEntityRoundEndData `protobuf:"bytes,100,rep,name=entity_data,json=entityData" json:"entity_data,omitempty"`
}

func (m *MsgGS2CLBattleDirectDataSyn) Reset()                    { *m = MsgGS2CLBattleDirectDataSyn{} }
func (m *MsgGS2CLBattleDirectDataSyn) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLBattleDirectDataSyn) ProtoMessage()               {}
func (*MsgGS2CLBattleDirectDataSyn) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *MsgGS2CLBattleDirectDataSyn) GetSkillResults() *SkillResult {
	if m != nil {
		return m.SkillResults
	}
	return nil
}

func (m *MsgGS2CLBattleDirectDataSyn) GetSkillGroupId() uint32 {
	if m != nil {
		return m.SkillGroupId
	}
	return 0
}

func (m *MsgGS2CLBattleDirectDataSyn) GetTargetEntityId() uint64 {
	if m != nil {
		return m.TargetEntityId
	}
	return 0
}

func (m *MsgGS2CLBattleDirectDataSyn) GetTarPos() *Vector2D {
	if m != nil {
		return m.TarPos
	}
	return nil
}

func (m *MsgGS2CLBattleDirectDataSyn) GetAssaultPos() *Vector2D {
	if m != nil {
		return m.AssaultPos
	}
	return nil
}

func (m *MsgGS2CLBattleDirectDataSyn) GetEntityData() []*BattleEntityRoundEndData {
	if m != nil {
		return m.EntityData
	}
	return nil
}

// 同步回合数据
type MsgGS2CLBattleRoundDataSyn struct {
	SkillResults []*SkillResult              `protobuf:"bytes,1,rep,name=skill_results,json=skillResults" json:"skill_results,omitempty"`
	SrcDead      bool                        `protobuf:"varint,5,opt,name=src_dead,json=srcDead" json:"src_dead,omitempty"`
	RemainRage   int32                       `protobuf:"varint,6,opt,name=remain_rage,json=remainRage" json:"remain_rage,omitempty"`
	EntityData   []*BattleEntityRoundEndData `protobuf:"bytes,100,rep,name=entity_data,json=entityData" json:"entity_data,omitempty"`
}

func (m *MsgGS2CLBattleRoundDataSyn) Reset()                    { *m = MsgGS2CLBattleRoundDataSyn{} }
func (m *MsgGS2CLBattleRoundDataSyn) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLBattleRoundDataSyn) ProtoMessage()               {}
func (*MsgGS2CLBattleRoundDataSyn) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *MsgGS2CLBattleRoundDataSyn) GetSkillResults() []*SkillResult {
	if m != nil {
		return m.SkillResults
	}
	return nil
}

func (m *MsgGS2CLBattleRoundDataSyn) GetSrcDead() bool {
	if m != nil {
		return m.SrcDead
	}
	return false
}

func (m *MsgGS2CLBattleRoundDataSyn) GetRemainRage() int32 {
	if m != nil {
		return m.RemainRage
	}
	return 0
}

func (m *MsgGS2CLBattleRoundDataSyn) GetEntityData() []*BattleEntityRoundEndData {
	if m != nil {
		return m.EntityData
	}
	return nil
}

// 立即同步战斗状态
type MsgGS2CLBattleStatusChangeSyn struct {
	EntityId       uint64 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	IsBattle       bool   `protobuf:"varint,2,opt,name=is_battle,json=isBattle" json:"is_battle,omitempty"`
	TargetEntityId uint64 `protobuf:"varint,3,opt,name=target_entity_id,json=targetEntityId" json:"target_entity_id,omitempty"`
}

func (m *MsgGS2CLBattleStatusChangeSyn) Reset()                    { *m = MsgGS2CLBattleStatusChangeSyn{} }
func (m *MsgGS2CLBattleStatusChangeSyn) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLBattleStatusChangeSyn) ProtoMessage()               {}
func (*MsgGS2CLBattleStatusChangeSyn) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *MsgGS2CLBattleStatusChangeSyn) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MsgGS2CLBattleStatusChangeSyn) GetIsBattle() bool {
	if m != nil {
		return m.IsBattle
	}
	return false
}

func (m *MsgGS2CLBattleStatusChangeSyn) GetTargetEntityId() uint64 {
	if m != nil {
		return m.TargetEntityId
	}
	return 0
}

// 立即同步战斗目标
type MsgGS2CLBattleTargetChangeSyn struct {
	EntityId       uint64 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	TargetEntityId uint64 `protobuf:"varint,2,opt,name=target_entity_id,json=targetEntityId" json:"target_entity_id,omitempty"`
}

func (m *MsgGS2CLBattleTargetChangeSyn) Reset()                    { *m = MsgGS2CLBattleTargetChangeSyn{} }
func (m *MsgGS2CLBattleTargetChangeSyn) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLBattleTargetChangeSyn) ProtoMessage()               {}
func (*MsgGS2CLBattleTargetChangeSyn) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

func (m *MsgGS2CLBattleTargetChangeSyn) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MsgGS2CLBattleTargetChangeSyn) GetTargetEntityId() uint64 {
	if m != nil {
		return m.TargetEntityId
	}
	return 0
}

// 立即同步黏住状态
type MsgGS2CLBattleStickEnemy struct {
	EntityId       uint64 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	TargetEntityId uint64 `protobuf:"varint,2,opt,name=target_entity_id,json=targetEntityId" json:"target_entity_id,omitempty"`
	IsStick        bool   `protobuf:"varint,3,opt,name=is_stick,json=isStick" json:"is_stick,omitempty"`
}

func (m *MsgGS2CLBattleStickEnemy) Reset()                    { *m = MsgGS2CLBattleStickEnemy{} }
func (m *MsgGS2CLBattleStickEnemy) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLBattleStickEnemy) ProtoMessage()               {}
func (*MsgGS2CLBattleStickEnemy) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

func (m *MsgGS2CLBattleStickEnemy) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MsgGS2CLBattleStickEnemy) GetTargetEntityId() uint64 {
	if m != nil {
		return m.TargetEntityId
	}
	return 0
}

func (m *MsgGS2CLBattleStickEnemy) GetIsStick() bool {
	if m != nil {
		return m.IsStick
	}
	return false
}

// 立即同步跳跃
type MsgGS2CLBattleStickJump struct {
	EntityId       uint64    `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	TargetEntityId uint64    `protobuf:"varint,2,opt,name=target_entity_id,json=targetEntityId" json:"target_entity_id,omitempty"`
	CurPos         *Vector2D `protobuf:"bytes,3,opt,name=cur_pos,json=curPos" json:"cur_pos,omitempty"`
	TarPos         *Vector2D `protobuf:"bytes,4,opt,name=tar_pos,json=tarPos" json:"tar_pos,omitempty"`
}

func (m *MsgGS2CLBattleStickJump) Reset()                    { *m = MsgGS2CLBattleStickJump{} }
func (m *MsgGS2CLBattleStickJump) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLBattleStickJump) ProtoMessage()               {}
func (*MsgGS2CLBattleStickJump) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

func (m *MsgGS2CLBattleStickJump) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MsgGS2CLBattleStickJump) GetTargetEntityId() uint64 {
	if m != nil {
		return m.TargetEntityId
	}
	return 0
}

func (m *MsgGS2CLBattleStickJump) GetCurPos() *Vector2D {
	if m != nil {
		return m.CurPos
	}
	return nil
}

func (m *MsgGS2CLBattleStickJump) GetTarPos() *Vector2D {
	if m != nil {
		return m.TarPos
	}
	return nil
}

// 准备释放技能
type MsgGS2CLBattlePrepareUseSkill struct {
	EnitityId uint64 `protobuf:"varint,1,opt,name=enitity_id,json=enitityId" json:"enitity_id,omitempty"`
	HeroId    uint32 `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	SkillId   uint32 `protobuf:"varint,3,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
}

func (m *MsgGS2CLBattlePrepareUseSkill) Reset()                    { *m = MsgGS2CLBattlePrepareUseSkill{} }
func (m *MsgGS2CLBattlePrepareUseSkill) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLBattlePrepareUseSkill) ProtoMessage()               {}
func (*MsgGS2CLBattlePrepareUseSkill) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

func (m *MsgGS2CLBattlePrepareUseSkill) GetEnitityId() uint64 {
	if m != nil {
		return m.EnitityId
	}
	return 0
}

func (m *MsgGS2CLBattlePrepareUseSkill) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *MsgGS2CLBattlePrepareUseSkill) GetSkillId() uint32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

// 请求战斗日志
type MsgCL2GSGetBattleDetailLogRequest struct {
	ReportSimple []*BattleDetailLogSimple `protobuf:"bytes,1,rep,name=report_simple,json=reportSimple" json:"report_simple,omitempty"`
}

func (m *MsgCL2GSGetBattleDetailLogRequest) Reset()         { *m = MsgCL2GSGetBattleDetailLogRequest{} }
func (m *MsgCL2GSGetBattleDetailLogRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSGetBattleDetailLogRequest) ProtoMessage()    {}
func (*MsgCL2GSGetBattleDetailLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{10}
}

func (m *MsgCL2GSGetBattleDetailLogRequest) GetReportSimple() []*BattleDetailLogSimple {
	if m != nil {
		return m.ReportSimple
	}
	return nil
}

// 响应战斗日志
type MsgGS2CLGetBattleDetailLogReply struct {
	AllLog    [][]byte `protobuf:"bytes,1,rep,name=all_log,json=allLog,proto3" json:"all_log,omitempty"`
	ErrorCode int32    `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLGetBattleDetailLogReply) Reset()         { *m = MsgGS2CLGetBattleDetailLogReply{} }
func (m *MsgGS2CLGetBattleDetailLogReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLGetBattleDetailLogReply) ProtoMessage()    {}
func (*MsgGS2CLGetBattleDetailLogReply) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{11}
}

func (m *MsgGS2CLGetBattleDetailLogReply) GetAllLog() [][]byte {
	if m != nil {
		return m.AllLog
	}
	return nil
}

func (m *MsgGS2CLGetBattleDetailLogReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 请求战斗邮件缓存
type MsgCL2GSGetBattleMailCacheRequest struct {
	Url string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (m *MsgCL2GSGetBattleMailCacheRequest) Reset()         { *m = MsgCL2GSGetBattleMailCacheRequest{} }
func (m *MsgCL2GSGetBattleMailCacheRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSGetBattleMailCacheRequest) ProtoMessage()    {}
func (*MsgCL2GSGetBattleMailCacheRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{12}
}

func (m *MsgCL2GSGetBattleMailCacheRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// 响应战斗邮件缓存
type MsgGS2CLGetBattleMailCacheReply struct {
	BattleMail []byte `protobuf:"bytes,1,opt,name=battle_mail,json=battleMail,proto3" json:"battle_mail,omitempty"`
	Url        string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	ErrorCode  int32  `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLGetBattleMailCacheReply) Reset()         { *m = MsgGS2CLGetBattleMailCacheReply{} }
func (m *MsgGS2CLGetBattleMailCacheReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLGetBattleMailCacheReply) ProtoMessage()    {}
func (*MsgGS2CLGetBattleMailCacheReply) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{13}
}

func (m *MsgGS2CLGetBattleMailCacheReply) GetBattleMail() []byte {
	if m != nil {
		return m.BattleMail
	}
	return nil
}

func (m *MsgGS2CLGetBattleMailCacheReply) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *MsgGS2CLGetBattleMailCacheReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 进入战斗同步(注意是首次进入战斗).目前只有city类型的才会同步这个包
type MsgGS2CLEnterBattleSyn struct {
	EntityId   uint64       `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	InitTroops []*TroopData `protobuf:"bytes,2,rep,name=init_troops,json=initTroops" json:"init_troops,omitempty"`
}

func (m *MsgGS2CLEnterBattleSyn) Reset()                    { *m = MsgGS2CLEnterBattleSyn{} }
func (m *MsgGS2CLEnterBattleSyn) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLEnterBattleSyn) ProtoMessage()               {}
func (*MsgGS2CLEnterBattleSyn) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

func (m *MsgGS2CLEnterBattleSyn) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *MsgGS2CLEnterBattleSyn) GetInitTroops() []*TroopData {
	if m != nil {
		return m.InitTroops
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgCL2GSSkillCastRequest)(nil), "protomsg.MsgCL2GSSkillCastRequest")
	proto.RegisterType((*MsgGS2CLSkillCastReply)(nil), "protomsg.MsgGS2CLSkillCastReply")
	proto.RegisterType((*BattleEntityRoundEndData)(nil), "protomsg.BattleEntityRoundEndData")
	proto.RegisterType((*MsgGS2CLBattleDirectDataSyn)(nil), "protomsg.MsgGS2CLBattleDirectDataSyn")
	proto.RegisterType((*MsgGS2CLBattleRoundDataSyn)(nil), "protomsg.MsgGS2CLBattleRoundDataSyn")
	proto.RegisterType((*MsgGS2CLBattleStatusChangeSyn)(nil), "protomsg.MsgGS2CLBattleStatusChangeSyn")
	proto.RegisterType((*MsgGS2CLBattleTargetChangeSyn)(nil), "protomsg.MsgGS2CLBattleTargetChangeSyn")
	proto.RegisterType((*MsgGS2CLBattleStickEnemy)(nil), "protomsg.MsgGS2CLBattleStickEnemy")
	proto.RegisterType((*MsgGS2CLBattleStickJump)(nil), "protomsg.MsgGS2CLBattleStickJump")
	proto.RegisterType((*MsgGS2CLBattlePrepareUseSkill)(nil), "protomsg.MsgGS2CLBattlePrepareUseSkill")
	proto.RegisterType((*MsgCL2GSGetBattleDetailLogRequest)(nil), "protomsg.MsgCL2GSGetBattleDetailLogRequest")
	proto.RegisterType((*MsgGS2CLGetBattleDetailLogReply)(nil), "protomsg.MsgGS2CLGetBattleDetailLogReply")
	proto.RegisterType((*MsgCL2GSGetBattleMailCacheRequest)(nil), "protomsg.MsgCL2GSGetBattleMailCacheRequest")
	proto.RegisterType((*MsgGS2CLGetBattleMailCacheReply)(nil), "protomsg.MsgGS2CLGetBattleMailCacheReply")
	proto.RegisterType((*MsgGS2CLEnterBattleSyn)(nil), "protomsg.MsgGS2CLEnterBattleSyn")
}

func init() { proto.RegisterFile("battle.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xcb, 0x6a, 0xf3, 0x46,
	0x14, 0x46, 0xf6, 0xef, 0xdb, 0x91, 0xfd, 0x13, 0xd4, 0x8b, 0xd5, 0x84, 0x60, 0x57, 0x74, 0x61,
	0x08, 0x64, 0xe1, 0xb4, 0x9b, 0x2e, 0x6b, 0x1b, 0xe3, 0x92, 0x40, 0x18, 0xa7, 0x8b, 0xae, 0xc4,
	0x44, 0x3a, 0x95, 0x87, 0x48, 0x1a, 0x65, 0x66, 0x54, 0x6a, 0xe8, 0xae, 0x6f, 0xd5, 0xa7, 0xe8,
	0xa6, 0x8b, 0xbe, 0x4d, 0x99, 0x19, 0x39, 0xbe, 0xd4, 0xb9, 0x14, 0x02, 0xff, 0x4a, 0x9a, 0x6f,
	0xce, 0xed, 0x3b, 0xb7, 0x81, 0xee, 0x3d, 0x55, 0x2a, 0xc5, 0xcb, 0x42, 0x70, 0xc5, 0xbd, 0xb6,
	0xf9, 0x64, 0x32, 0x39, 0xfd, 0x3c, 0x93, 0x49, 0x18, 0xf1, 0x2c, 0xe3, 0x79, 0x98, 0xd1, 0xc2,
	0xde, 0x9f, 0x9e, 0x6c, 0xd1, 0x0a, 0xe9, 0xef, 0xc8, 0xed, 0x9a, 0x0a, 0xfe, 0x76, 0xc0, 0xbf,
	0x91, 0xc9, 0xe4, 0x7a, 0x3c, 0x5f, 0x2e, 0x1f, 0x58, 0x9a, 0x4e, 0xa8, 0x54, 0x04, 0x1f, 0x4b,
	0x94, 0xca, 0x1b, 0x80, 0x9b, 0x51, 0x11, 0xad, 0x42, 0x96, 0xc7, 0xf8, 0x9b, 0xef, 0x0c, 0x9d,
	0x51, 0x8f, 0x80, 0x81, 0x16, 0x1a, 0xf1, 0xbe, 0x81, 0x8f, 0x52, 0x2b, 0x85, 0x89, 0xe0, 0x65,
	0x11, 0xb2, 0xd8, 0xaf, 0x19, 0x99, 0xae, 0x41, 0xe7, 0x1a, 0x5c, 0xc4, 0xde, 0x08, 0x4e, 0x14,
	0x15, 0x09, 0xaa, 0x10, 0x73, 0xc5, 0xd4, 0x5a, 0xcb, 0xd5, 0x87, 0xce, 0xe8, 0x03, 0xf9, 0x68,
	0xf1, 0x99, 0x81, 0x17, 0xb1, 0x77, 0x01, 0x2d, 0x45, 0x45, 0x58, 0x70, 0xe9, 0x7f, 0x18, 0x3a,
	0x23, 0x77, 0xec, 0x5d, 0x6e, 0xa8, 0x5e, 0xfe, 0x8a, 0x91, 0xe2, 0x62, 0x1c, 0x93, 0xa6, 0xa2,
	0xe2, 0x96, 0x4b, 0xef, 0x0c, 0x3a, 0x02, 0x13, 0xc6, 0x73, 0x6d, 0xaf, 0x61, 0xec, 0xb5, 0x2d,
	0xb0, 0x88, 0x83, 0x3b, 0xf8, 0xf2, 0x46, 0x26, 0xf3, 0xe5, 0x78, 0x72, 0xbd, 0x43, 0xab, 0x48,
	0xd7, 0xfb, 0x6a, 0xce, 0xbe, 0x9a, 0x77, 0x0e, 0x80, 0x42, 0x70, 0x11, 0x46, 0x3c, 0x46, 0x3f,
	0x1a, 0x3a, 0xa3, 0x06, 0xe9, 0x18, 0x64, 0xc2, 0x63, 0x0c, 0x1e, 0xc1, 0xff, 0xc1, 0x64, 0xcf,
	0x46, 0x4c, 0x78, 0x99, 0xc7, 0xb3, 0x3c, 0x9e, 0x52, 0x45, 0xb5, 0xdd, 0x2d, 0xbd, 0xca, 0x2e,
	0x6e, 0x88, 0xf5, 0xa1, 0xc5, 0x64, 0x18, 0x23, 0xb5, 0x19, 0x6a, 0x93, 0x26, 0x93, 0x53, 0xa4,
	0xb1, 0x4e, 0xb1, 0xc0, 0x8c, 0xb2, 0x3c, 0x14, 0x34, 0x41, 0x93, 0x96, 0x06, 0x01, 0x0b, 0x11,
	0x9a, 0x60, 0xf0, 0x57, 0x0d, 0xce, 0x36, 0x4c, 0xac, 0xef, 0x29, 0x13, 0x18, 0x29, 0xed, 0x73,
	0xb9, 0xce, 0xbd, 0xef, 0xa1, 0x67, 0x4b, 0x20, 0x50, 0x96, 0xa9, 0x92, 0xc6, 0xb5, 0x3b, 0xfe,
	0x62, 0x9b, 0x38, 0xc3, 0x9f, 0x98, 0xdb, 0xaa, 0x30, 0xf6, 0x20, 0x3f, 0x6d, 0xf9, 0xae, 0xc0,
	0xa5, 0x52, 0xd2, 0x32, 0x55, 0x46, 0x01, 0x9e, 0x55, 0x80, 0x4a, 0x4c, 0x2b, 0x4d, 0xc0, 0xad,
	0x82, 0x88, 0xa9, 0xa2, 0x7e, 0x3c, 0xac, 0x8f, 0xdc, 0x71, 0xb0, 0x55, 0x7a, 0xae, 0x3a, 0x04,
	0xac, 0x9a, 0xfe, 0x0f, 0xfe, 0x71, 0xe0, 0x74, 0x3f, 0xa5, 0x46, 0xf4, 0x85, 0x8c, 0xd6, 0xdf,
	0x9a, 0xd1, 0xaf, 0xa0, 0x2d, 0x45, 0x64, 0x0b, 0xdd, 0x30, 0x85, 0x6e, 0x49, 0x11, 0x1d, 0xab,
	0x74, 0xf3, 0xb0, 0xd2, 0xef, 0xc3, 0xed, 0x0f, 0x07, 0xce, 0xf7, 0xb9, 0x2d, 0x15, 0x55, 0xa5,
	0x9c, 0xac, 0x68, 0x9e, 0xa0, 0xa6, 0xf7, 0x62, 0x9f, 0x9e, 0x41, 0x87, 0xc9, 0x6a, 0x43, 0x54,
	0x9d, 0xda, 0x66, 0xd2, 0x1a, 0x7a, 0x7b, 0x23, 0x04, 0xbf, 0x1c, 0x06, 0x71, 0x67, 0xee, 0xdf,
	0x18, 0xc4, 0x31, 0x3f, 0xb5, 0xa3, 0x7e, 0x7e, 0x37, 0xcb, 0x6b, 0x8f, 0x2c, 0x8b, 0x1e, 0x66,
	0x39, 0x66, 0xeb, 0x77, 0x72, 0xa1, 0x2b, 0xca, 0x64, 0x28, 0xb5, 0x5d, 0x43, 0xb6, 0x4d, 0x5a,
	0x4c, 0x1a, 0x37, 0xc1, 0x9f, 0x0e, 0xf4, 0x8f, 0xb8, 0xff, 0xb1, 0xcc, 0x8a, 0xf7, 0xf2, 0x7e,
	0x01, 0xad, 0xa8, 0xb4, 0x13, 0x55, 0x7f, 0x7e, 0xa2, 0xa2, 0xd2, 0x4c, 0xd4, 0xff, 0x19, 0xbf,
	0x40, 0x1c, 0x96, 0xe8, 0x56, 0x60, 0x41, 0x05, 0xfe, 0x24, 0xd1, 0xb4, 0xb7, 0x59, 0x85, 0x39,
	0xdb, 0xa7, 0xd0, 0xa9, 0x10, 0xbb, 0xd1, 0x56, 0x28, 0xf8, 0x76, 0x69, 0x34, 0xf5, 0xd1, 0x26,
	0xcc, 0x8e, 0x4f, 0xd5, 0x1d, 0x3d, 0xd2, 0x32, 0xe7, 0x45, 0x1c, 0x30, 0xf8, 0x7a, 0xf3, 0xd6,
	0xcc, 0x51, 0x55, 0xdb, 0x0c, 0x15, 0x65, 0xe9, 0x35, 0x4f, 0x36, 0x8f, 0xce, 0x14, 0x7a, 0x02,
	0x0b, 0x2e, 0x54, 0x28, 0x59, 0x56, 0xa4, 0x58, 0x8d, 0xdf, 0xe0, 0x70, 0x10, 0x9e, 0x14, 0x97,
	0x46, 0x8c, 0x74, 0xad, 0x96, 0x3d, 0x05, 0x3f, 0xc3, 0x60, 0x43, 0xef, 0x98, 0x2b, 0xfd, 0x10,
	0xf4, 0xa1, 0x45, 0xd3, 0x34, 0x4c, 0x79, 0x62, 0x5c, 0x74, 0x49, 0x93, 0xa6, 0xfa, 0xf6, 0xb5,
	0x47, 0xe0, 0xbb, 0x23, 0x2c, 0x6e, 0x28, 0x4b, 0x27, 0x34, 0x5a, 0xe1, 0x86, 0xc5, 0x09, 0xd4,
	0x4b, 0x91, 0x9a, 0xd4, 0x74, 0x88, 0xfe, 0x0d, 0xe4, 0x91, 0x88, 0x76, 0xd4, 0x74, 0x44, 0x03,
	0x70, 0xed, 0xe8, 0x85, 0x19, 0x65, 0xa9, 0xc9, 0x79, 0x97, 0xc0, 0xfd, 0x93, 0xe8, 0x7f, 0xad,
	0xbe, 0x16, 0xeb, 0xc3, 0xf6, 0x19, 0x9c, 0xe5, 0x0a, 0x45, 0xd5, 0xa6, 0xaf, 0x4d, 0xe0, 0xb7,
	0xe0, 0xb2, 0x9c, 0xa9, 0x50, 0x09, 0xce, 0x0b, 0xe9, 0xd7, 0x4c, 0x05, 0x3e, 0xdb, 0x56, 0xe0,
	0x4e, 0xe3, 0x76, 0xf7, 0x68, 0x39, 0x73, 0x94, 0xf7, 0x4d, 0x73, 0x7f, 0xf5, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x86, 0x88, 0xb8, 0xa7, 0xad, 0x08, 0x00, 0x00,
}
