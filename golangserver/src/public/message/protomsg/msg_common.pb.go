// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_common.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CurrencyType int32

const (
	CurrencyType_kCurrencyTypeNone          CurrencyType = 0
	CurrencyType_kCurrencyTypeEmoney        CurrencyType = 1
	CurrencyType_kCurrencyTypeOil           CurrencyType = 2
	CurrencyType_kCurrencyTypeFood          CurrencyType = 3
	CurrencyType_kCurrencyTypeWood          CurrencyType = 4
	CurrencyType_kCurrencyTypeSteel         CurrencyType = 5
	CurrencyType_kCurrencyTypeBuildingCost  CurrencyType = 6
	CurrencyType_kCurrencyTypePersonalPoint CurrencyType = 7
	CurrencyType_kCurrencyTypeExpeCoin      CurrencyType = 8
	CurrencyType_kCurrencyTypeVipExp        CurrencyType = 9
	CurrencyType_kCurrencyTypeHeroToken     CurrencyType = 10
	CurrencyType_kCurrencyTypeReputation    CurrencyType = 11
	CurrencyType_kCurrencyTypeSicencePoint  CurrencyType = 12
	CurrencyType_kCurrencyTypeHeromedal     CurrencyType = 13
)

var CurrencyType_name = map[int32]string{
	0:  "kCurrencyTypeNone",
	1:  "kCurrencyTypeEmoney",
	2:  "kCurrencyTypeOil",
	3:  "kCurrencyTypeFood",
	4:  "kCurrencyTypeWood",
	5:  "kCurrencyTypeSteel",
	6:  "kCurrencyTypeBuildingCost",
	7:  "kCurrencyTypePersonalPoint",
	8:  "kCurrencyTypeExpeCoin",
	9:  "kCurrencyTypeVipExp",
	10: "kCurrencyTypeHeroToken",
	11: "kCurrencyTypeReputation",
	12: "kCurrencyTypeSicencePoint",
	13: "kCurrencyTypeHeromedal",
}
var CurrencyType_value = map[string]int32{
	"kCurrencyTypeNone":          0,
	"kCurrencyTypeEmoney":        1,
	"kCurrencyTypeOil":           2,
	"kCurrencyTypeFood":          3,
	"kCurrencyTypeWood":          4,
	"kCurrencyTypeSteel":         5,
	"kCurrencyTypeBuildingCost":  6,
	"kCurrencyTypePersonalPoint": 7,
	"kCurrencyTypeExpeCoin":      8,
	"kCurrencyTypeVipExp":        9,
	"kCurrencyTypeHeroToken":     10,
	"kCurrencyTypeReputation":    11,
	"kCurrencyTypeSicencePoint":  12,
	"kCurrencyTypeHeromedal":     13,
}

func (x CurrencyType) String() string {
	return proto.EnumName(CurrencyType_name, int32(x))
}
func (CurrencyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{0} }

type GuildCurrencyType int32

const (
	GuildCurrencyType_kGuildCurrencyTypeNone       GuildCurrencyType = 0
	GuildCurrencyType_kGuildCurrencyTypeOil        GuildCurrencyType = 2
	GuildCurrencyType_kGuildCurrencyTypeFood       GuildCurrencyType = 3
	GuildCurrencyType_kGuildCurrencyTypeWood       GuildCurrencyType = 4
	GuildCurrencyType_kGuildCurrencyTypeSteel      GuildCurrencyType = 5
	GuildCurrencyType_kGuildCurrencyTypeGuildPoint GuildCurrencyType = 8
	GuildCurrencyType_kGuildCurrencyTypeGiftKey    GuildCurrencyType = 9
	GuildCurrencyType_kGuildCurrencyTypeGiftPt     GuildCurrencyType = 10
	GuildCurrencyType_kGuildCurrencyTypeExp        GuildCurrencyType = 12
	GuildCurrencyType_kGuildWarTicket              GuildCurrencyType = 20
)

var GuildCurrencyType_name = map[int32]string{
	0:  "kGuildCurrencyTypeNone",
	2:  "kGuildCurrencyTypeOil",
	3:  "kGuildCurrencyTypeFood",
	4:  "kGuildCurrencyTypeWood",
	5:  "kGuildCurrencyTypeSteel",
	8:  "kGuildCurrencyTypeGuildPoint",
	9:  "kGuildCurrencyTypeGiftKey",
	10: "kGuildCurrencyTypeGiftPt",
	12: "kGuildCurrencyTypeExp",
	20: "kGuildWarTicket",
}
var GuildCurrencyType_value = map[string]int32{
	"kGuildCurrencyTypeNone":       0,
	"kGuildCurrencyTypeOil":        2,
	"kGuildCurrencyTypeFood":       3,
	"kGuildCurrencyTypeWood":       4,
	"kGuildCurrencyTypeSteel":      5,
	"kGuildCurrencyTypeGuildPoint": 8,
	"kGuildCurrencyTypeGiftKey":    9,
	"kGuildCurrencyTypeGiftPt":     10,
	"kGuildCurrencyTypeExp":        12,
	"kGuildWarTicket":              20,
}

func (x GuildCurrencyType) String() string {
	return proto.EnumName(GuildCurrencyType_name, int32(x))
}
func (GuildCurrencyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{1} }

// 内城属性枚举
type CityAttrType int32

const (
	CityAttrType_kCityAttrTypeNone CityAttrType = 0
)

var CityAttrType_name = map[int32]string{
	0: "kCityAttrTypeNone",
}
var CityAttrType_value = map[string]int32{
	"kCityAttrTypeNone": 0,
}

func (x CityAttrType) String() string {
	return proto.EnumName(CityAttrType_name, int32(x))
}
func (CityAttrType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{2} }

type PlayerAttributeType int32

const (
	PlayerAttributeType_kPlayerAttrNone            PlayerAttributeType = 0
	PlayerAttributeType_kPlayerAttrCurrency        PlayerAttributeType = 1
	PlayerAttributeType_kPlayerAttrItem            PlayerAttributeType = 2
	PlayerAttributeType_kPlayerAttrHeroExp         PlayerAttributeType = 4
	PlayerAttributeType_kPlayerAttrPower           PlayerAttributeType = 5
	PlayerAttributeType_kPlayerAttrHeroStarExp     PlayerAttributeType = 6
	PlayerAttributeType_kPlayerAttrGuildCurrency   PlayerAttributeType = 7
	PlayerAttributeType_kPlayerAttrAp              PlayerAttributeType = 9
	PlayerAttributeType_kPlayerAttrHero            PlayerAttributeType = 11
	PlayerAttributeType_kPlayerAttrGuildGift       PlayerAttributeType = 12
	PlayerAttributeType_kPlayerAttrDailyScore      PlayerAttributeType = 13
	PlayerAttributeType_kPlayerAttrArmy            PlayerAttributeType = 14
	PlayerAttributeType_kPlayerAttrWounded         PlayerAttributeType = 15
	PlayerAttributeType_kPlayerAttrEquipment       PlayerAttributeType = 16
	PlayerAttributeType_kPlayerAttrMarchFace       PlayerAttributeType = 17
	PlayerAttributeType_kPlayerAttrHonorExp        PlayerAttributeType = 19
	PlayerAttributeType_kPlayerAttrHonorGoldCard   PlayerAttributeType = 20
	PlayerAttributeType_kPlayerAttrHead            PlayerAttributeType = 22
	PlayerAttributeType_kPlayerAttrFrame           PlayerAttributeType = 23
	PlayerAttributeType_kPlayerAttrSafeCurrency    PlayerAttributeType = 24
	PlayerAttributeType_kPlayerAttrExploreExp      PlayerAttributeType = 25
	PlayerAttributeType_kPlayerAttrProsperity      PlayerAttributeType = 28
	PlayerAttributeType_kPlayerAttrScience         PlayerAttributeType = 29
	PlayerAttributeType_kPlayerAttrRune            PlayerAttributeType = 99
	PlayerAttributeType_kPlayerAttrStatus          PlayerAttributeType = 1003
	PlayerAttributeType_kPlayerAttrKillCount       PlayerAttributeType = 2001
	PlayerAttributeType_kPlayerAttrCollectionCount PlayerAttributeType = 2002
	PlayerAttributeType_kPlayerAttrPompeiiPoint    PlayerAttributeType = 2003
)

var PlayerAttributeType_name = map[int32]string{
	0:    "kPlayerAttrNone",
	1:    "kPlayerAttrCurrency",
	2:    "kPlayerAttrItem",
	4:    "kPlayerAttrHeroExp",
	5:    "kPlayerAttrPower",
	6:    "kPlayerAttrHeroStarExp",
	7:    "kPlayerAttrGuildCurrency",
	9:    "kPlayerAttrAp",
	11:   "kPlayerAttrHero",
	12:   "kPlayerAttrGuildGift",
	13:   "kPlayerAttrDailyScore",
	14:   "kPlayerAttrArmy",
	15:   "kPlayerAttrWounded",
	16:   "kPlayerAttrEquipment",
	17:   "kPlayerAttrMarchFace",
	19:   "kPlayerAttrHonorExp",
	20:   "kPlayerAttrHonorGoldCard",
	22:   "kPlayerAttrHead",
	23:   "kPlayerAttrFrame",
	24:   "kPlayerAttrSafeCurrency",
	25:   "kPlayerAttrExploreExp",
	28:   "kPlayerAttrProsperity",
	29:   "kPlayerAttrScience",
	99:   "kPlayerAttrRune",
	1003: "kPlayerAttrStatus",
	2001: "kPlayerAttrKillCount",
	2002: "kPlayerAttrCollectionCount",
	2003: "kPlayerAttrPompeiiPoint",
}
var PlayerAttributeType_value = map[string]int32{
	"kPlayerAttrNone":            0,
	"kPlayerAttrCurrency":        1,
	"kPlayerAttrItem":            2,
	"kPlayerAttrHeroExp":         4,
	"kPlayerAttrPower":           5,
	"kPlayerAttrHeroStarExp":     6,
	"kPlayerAttrGuildCurrency":   7,
	"kPlayerAttrAp":              9,
	"kPlayerAttrHero":            11,
	"kPlayerAttrGuildGift":       12,
	"kPlayerAttrDailyScore":      13,
	"kPlayerAttrArmy":            14,
	"kPlayerAttrWounded":         15,
	"kPlayerAttrEquipment":       16,
	"kPlayerAttrMarchFace":       17,
	"kPlayerAttrHonorExp":        19,
	"kPlayerAttrHonorGoldCard":   20,
	"kPlayerAttrHead":            22,
	"kPlayerAttrFrame":           23,
	"kPlayerAttrSafeCurrency":    24,
	"kPlayerAttrExploreExp":      25,
	"kPlayerAttrProsperity":      28,
	"kPlayerAttrScience":         29,
	"kPlayerAttrRune":            99,
	"kPlayerAttrStatus":          1003,
	"kPlayerAttrKillCount":       2001,
	"kPlayerAttrCollectionCount": 2002,
	"kPlayerAttrPompeiiPoint":    2003,
}

func (x PlayerAttributeType) String() string {
	return proto.EnumName(PlayerAttributeType_name, int32(x))
}
func (PlayerAttributeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{3} }

type PlayerPropertyNoticeType int32

const (
	PlayerPropertyNoticeType_kPlayerPropertyNone         PlayerPropertyNoticeType = 0
	PlayerPropertyNoticeType_kPlayerPropertyKingdomTitle PlayerPropertyNoticeType = 1
	PlayerPropertyNoticeType_kPlayerPropertyPowerChange  PlayerPropertyNoticeType = 2
)

var PlayerPropertyNoticeType_name = map[int32]string{
	0: "kPlayerPropertyNone",
	1: "kPlayerPropertyKingdomTitle",
	2: "kPlayerPropertyPowerChange",
}
var PlayerPropertyNoticeType_value = map[string]int32{
	"kPlayerPropertyNone":         0,
	"kPlayerPropertyKingdomTitle": 1,
	"kPlayerPropertyPowerChange":  2,
}

func (x PlayerPropertyNoticeType) String() string {
	return proto.EnumName(PlayerPropertyNoticeType_name, int32(x))
}
func (PlayerPropertyNoticeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{4} }

type LanguageType int32

const (
	LanguageType_kLanguageNone      LanguageType = 0
	LanguageType_kLanguageEnglish   LanguageType = 1
	LanguageType_kLanguageChineseCN LanguageType = 2
	LanguageType_kLanguageChineseTW LanguageType = 3
	LanguageType_kLanguageFrench    LanguageType = 4
	LanguageType_kLanguageItalian   LanguageType = 5
	LanguageType_kLanguageGerman    LanguageType = 6
	LanguageType_kLanguageSpanish   LanguageType = 7
	// kLanguageDutch			= 7;
	LanguageType_kLanguageRussian  LanguageType = 8
	LanguageType_kLanguageKorean   LanguageType = 9
	LanguageType_kLanguageJapanese LanguageType = 10
	// kLanguageHungrian		= 11;
	LanguageType_kLanguagePortuguese LanguageType = 12
	LanguageType_kLanguageArabic     LanguageType = 13
	// kLanguageNorwegian	= 14;
	// kLanguagePolish			= 15;
	LanguageType_kLanguageTurkish LanguageType = 16
	// kLanguageUkrainian		= 17;
	// kLanguageRomanian		= 18;
	// kLanguageBulgarian		= 19;
	// kLanguageCzech			= 20;
	// kLanguageDanish			= 21;
	// kLanguageGreek			= 22;
	// kLanguageFinnish		= 23;
	// kLanguageSlovak			= 24;
	// kLanguageSwedish		= 25;
	LanguageType_kLanguageVietnamese LanguageType = 26
	LanguageType_kLanguageThai       LanguageType = 27
	// kLanguageCatalan		= 28;
	// kLanguageHebrew			= 29;
	LanguageType_kLanguageIndonesian LanguageType = 30
)

var LanguageType_name = map[int32]string{
	0:  "kLanguageNone",
	1:  "kLanguageEnglish",
	2:  "kLanguageChineseCN",
	3:  "kLanguageChineseTW",
	4:  "kLanguageFrench",
	5:  "kLanguageItalian",
	6:  "kLanguageGerman",
	7:  "kLanguageSpanish",
	8:  "kLanguageRussian",
	9:  "kLanguageKorean",
	10: "kLanguageJapanese",
	12: "kLanguagePortuguese",
	13: "kLanguageArabic",
	16: "kLanguageTurkish",
	26: "kLanguageVietnamese",
	27: "kLanguageThai",
	30: "kLanguageIndonesian",
}
var LanguageType_value = map[string]int32{
	"kLanguageNone":       0,
	"kLanguageEnglish":    1,
	"kLanguageChineseCN":  2,
	"kLanguageChineseTW":  3,
	"kLanguageFrench":     4,
	"kLanguageItalian":    5,
	"kLanguageGerman":     6,
	"kLanguageSpanish":    7,
	"kLanguageRussian":    8,
	"kLanguageKorean":     9,
	"kLanguageJapanese":   10,
	"kLanguagePortuguese": 12,
	"kLanguageArabic":     13,
	"kLanguageTurkish":    16,
	"kLanguageVietnamese": 26,
	"kLanguageThai":       27,
	"kLanguageIndonesian": 30,
}

func (x LanguageType) String() string {
	return proto.EnumName(LanguageType_name, int32(x))
}
func (LanguageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{5} }

// ////////////////////////////////////////////////////////////////////////
// /  效果模块 开始
// ////////////////////////////////////////////////////////////////////////
type SourceBuffType int32

const (
	SourceBuffType_kBuffFromGs                  SourceBuffType = 0
	SourceBuffType_kGuild                       SourceBuffType = 1
	SourceBuffType_kTerritory                   SourceBuffType = 2
	SourceBuffType_kMultiStrike                 SourceBuffType = 3
	SourceBuffType_kEnterBattle                 SourceBuffType = 4
	SourceBuffType_kNoBattle                    SourceBuffType = 5
	SourceBuffType_kHeroSkill                   SourceBuffType = 6
	SourceBuffType_kRoundBegin                  SourceBuffType = 7
	SourceBuffType_kRoundBeginToEntity          SourceBuffType = 8
	SourceBuffType_kSkillStatus                 SourceBuffType = 9
	SourceBuffType_kRegion                      SourceBuffType = 10
	SourceBuffType_kTroopBuff                   SourceBuffType = 11
	SourceBuffType_kEntityOnReady               SourceBuffType = 12
	SourceBuffType_kHeroAndEquipProperty        SourceBuffType = 13
	SourceBuffType_kSkillStatusForever          SourceBuffType = 14
	SourceBuffType_kPompeiiCultureTankBuff      SourceBuffType = 15
	SourceBuffType_kBuildingTerritoryBuff       SourceBuffType = 16
	SourceBuffType_kWallFriendBuff              SourceBuffType = 17
	SourceBuffType_kMax                         SourceBuffType = 100
	SourceBuffType_kBuffFromStrongholdMonsterGs SourceBuffType = 500
	SourceBuffType_kBuffFromHeroGs              SourceBuffType = 501
	SourceBuffType_kBuffFromStrongholdGs        SourceBuffType = 502
	SourceBuffType_kBuffFromSelfStation         SourceBuffType = 503
	SourceBuffType_kTroopTypeBuff               SourceBuffType = 504
)

var SourceBuffType_name = map[int32]string{
	0:   "kBuffFromGs",
	1:   "kGuild",
	2:   "kTerritory",
	3:   "kMultiStrike",
	4:   "kEnterBattle",
	5:   "kNoBattle",
	6:   "kHeroSkill",
	7:   "kRoundBegin",
	8:   "kRoundBeginToEntity",
	9:   "kSkillStatus",
	10:  "kRegion",
	11:  "kTroopBuff",
	12:  "kEntityOnReady",
	13:  "kHeroAndEquipProperty",
	14:  "kSkillStatusForever",
	15:  "kPompeiiCultureTankBuff",
	16:  "kBuildingTerritoryBuff",
	17:  "kWallFriendBuff",
	100: "kMax",
	500: "kBuffFromStrongholdMonsterGs",
	501: "kBuffFromHeroGs",
	502: "kBuffFromStrongholdGs",
	503: "kBuffFromSelfStation",
	504: "kTroopTypeBuff",
}
var SourceBuffType_value = map[string]int32{
	"kBuffFromGs":             0,
	"kGuild":                  1,
	"kTerritory":              2,
	"kMultiStrike":            3,
	"kEnterBattle":            4,
	"kNoBattle":               5,
	"kHeroSkill":              6,
	"kRoundBegin":             7,
	"kRoundBeginToEntity":     8,
	"kSkillStatus":            9,
	"kRegion":                 10,
	"kTroopBuff":              11,
	"kEntityOnReady":          12,
	"kHeroAndEquipProperty":   13,
	"kSkillStatusForever":     14,
	"kPompeiiCultureTankBuff": 15,
	"kBuildingTerritoryBuff":  16,
	"kWallFriendBuff":         17,
	"kMax":                    100,
	"kBuffFromStrongholdMonsterGs": 500,
	"kBuffFromHeroGs":              501,
	"kBuffFromStrongholdGs":        502,
	"kBuffFromSelfStation":         503,
	"kTroopTypeBuff":               504,
}

func (x SourceBuffType) String() string {
	return proto.EnumName(SourceBuffType_name, int32(x))
}
func (SourceBuffType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{6} }

type PlayerExtendAttribute int32

const (
	PlayerExtendAttribute_kExtendAttrNone  PlayerExtendAttribute = 0
	PlayerExtendAttribute_kExtendAttrStart PlayerExtendAttribute = 10000
	// 英雄相关
	PlayerExtendAttribute_kExtendHeroAttr_Start        PlayerExtendAttribute = 10000
	PlayerExtendAttribute_kExtendHeroAttr_PowerValue   PlayerExtendAttribute = 10001
	PlayerExtendAttribute_kExtendHeroAttr_DefenseValue PlayerExtendAttribute = 10002
	PlayerExtendAttribute_kExtendHeroAttr_LifeValue    PlayerExtendAttribute = 10003
	PlayerExtendAttribute_kExtendHeroAttr_End          PlayerExtendAttribute = 19999
	// 内城建设
	PlayerExtendAttribute_kExtendAttrTimeIncRate_Start                     PlayerExtendAttribute = 20000
	PlayerExtendAttribute_kExtendAttrTimeIncRate_Building                  PlayerExtendAttribute = 20001
	PlayerExtendAttribute_kExtendAttrTimeIncRate_Science                   PlayerExtendAttribute = 20002
	PlayerExtendAttribute_kExtendAttrTimeIncRate_TrainingArmy              PlayerExtendAttribute = 20003
	PlayerExtendAttribute_kExtendAttrTimeIncRate_Cure                      PlayerExtendAttribute = 20004
	PlayerExtendAttribute_kExtendAttrCostRate_Build                        PlayerExtendAttribute = 20005
	PlayerExtendAttribute_kExtendAttrCostRate_Science                      PlayerExtendAttribute = 20006
	PlayerExtendAttribute_kExtendAttrCostRate_Build_Abs                    PlayerExtendAttribute = 20007
	PlayerExtendAttribute_kExtendAttrTimeIncRate_Instument                 PlayerExtendAttribute = 20008
	PlayerExtendAttribute_kExtendAttrkIncRate_Food                         PlayerExtendAttribute = 20009
	PlayerExtendAttribute_kExtendAttrkIncRate_Wood                         PlayerExtendAttribute = 20010
	PlayerExtendAttribute_kExtendAttrkIncRate_Steel                        PlayerExtendAttribute = 20011
	PlayerExtendAttribute_kExtendAttrkIncRate_Oil                          PlayerExtendAttribute = 20012
	PlayerExtendAttribute_kExtendAttrkIncRate_All                          PlayerExtendAttribute = 20013
	PlayerExtendAttribute_kExtendAttrkIncRate_StoreCapacity                PlayerExtendAttribute = 20020
	PlayerExtendAttribute_kExtendAttrkIncRate_HospitalCapacity             PlayerExtendAttribute = 20021
	PlayerExtendAttribute_kExtendAttrkIncRate_TrainArmy_Abs                PlayerExtendAttribute = 20022
	PlayerExtendAttribute_kExtendAttr_CureCost                             PlayerExtendAttribute = 20030
	PlayerExtendAttribute_kExtendAttrkIncRate_MarchArmyCapacity            PlayerExtendAttribute = 29001
	PlayerExtendAttribute_kExtendAttrkIncRate_GuildMarchArmyCapacity       PlayerExtendAttribute = 29002
	PlayerExtendAttribute_kExtendAttrkIncRate_Tax                          PlayerExtendAttribute = 29004
	PlayerExtendAttribute_kExtendAttrkIncRate_Copper                       PlayerExtendAttribute = 29005
	PlayerExtendAttribute_kExtendAttrkIncRate_Wood_Steel_Farm              PlayerExtendAttribute = 29006
	PlayerExtendAttribute_kExtendLordAttrEnd                               PlayerExtendAttribute = 29999
	PlayerExtendAttribute_kExtendEffectAttr_MapStart                       PlayerExtendAttribute = 30000
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectFood                  PlayerExtendAttribute = 30001
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectWood                  PlayerExtendAttribute = 30002
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectSteel                 PlayerExtendAttribute = 30003
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectAll                   PlayerExtendAttribute = 30004
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectIncrease              PlayerExtendAttribute = 30005
	PlayerExtendAttribute_kExtendAttrkIncRate_Burden                       PlayerExtendAttribute = 30006
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectAllExtra              PlayerExtendAttribute = 30007
	PlayerExtendAttribute_kExtendAttrDec_AP                                PlayerExtendAttribute = 30010
	PlayerExtendAttribute_kExtendAttrkIncRate_ApRecover                    PlayerExtendAttribute = 30011
	PlayerExtendAttribute_kExtendAttrkIncRate_KillBarbariansReward         PlayerExtendAttribute = 30012
	PlayerExtendAttribute_kExtendAttrkIncRate_PeaceShield                  PlayerExtendAttribute = 30020
	PlayerExtendAttribute_kExtendAttrPlunderResourceIncrease               PlayerExtendAttribute = 30021
	PlayerExtendAttribute_kExtendAttrkIncRate_ScoutTroopCount              PlayerExtendAttribute = 30022
	PlayerExtendAttribute_kExtendAttr_DisableScout                         PlayerExtendAttribute = 30023
	PlayerExtendAttribute_kExtendStronghold_Limit                          PlayerExtendAttribute = 30030
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_All                 PlayerExtendAttribute = 35000
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_Infantry            PlayerExtendAttribute = 35001
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_Cavalry             PlayerExtendAttribute = 35002
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_Archer              PlayerExtendAttribute = 35003
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_All_Abs             PlayerExtendAttribute = 35100
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_Infantry_Abs        PlayerExtendAttribute = 35101
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_Cavalry_Abs         PlayerExtendAttribute = 35102
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_Archer_Abs          PlayerExtendAttribute = 35103
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_All                PlayerExtendAttribute = 35200
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_Infantry           PlayerExtendAttribute = 35201
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_Cavalry            PlayerExtendAttribute = 35202
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_Archer             PlayerExtendAttribute = 35203
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_Archer_Abs         PlayerExtendAttribute = 35203
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_All_Abs            PlayerExtendAttribute = 35300
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_Infantry_Abs       PlayerExtendAttribute = 35301
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_Cavalry_Abs        PlayerExtendAttribute = 35302
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_All                     PlayerExtendAttribute = 35400
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_Infantry                PlayerExtendAttribute = 35401
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_Cavalry                 PlayerExtendAttribute = 35402
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_Archer                  PlayerExtendAttribute = 35403
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_All_Abs                 PlayerExtendAttribute = 35500
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_Infantry_Abs            PlayerExtendAttribute = 35501
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_Cavalry_Abs             PlayerExtendAttribute = 35502
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_Archer_Abs              PlayerExtendAttribute = 35503
	PlayerExtendAttribute_kExtendBattleAttrTroopSpeed_All                  PlayerExtendAttribute = 35600
	PlayerExtendAttribute_kExtendBattleAttrTroopSpeed_Infantry             PlayerExtendAttribute = 35601
	PlayerExtendAttribute_kExtendBattleAttrTroopSpeed_Cavalry              PlayerExtendAttribute = 35602
	PlayerExtendAttribute_kExtendBattleAttrTroopSpeed_Archer               PlayerExtendAttribute = 35603
	PlayerExtendAttribute_kExtendBattleAttrTroopAttackRange_Cure           PlayerExtendAttribute = 35700
	PlayerExtendAttribute_kExtendBattleAttrCastHealIncrease                PlayerExtendAttribute = 35701
	PlayerExtendAttribute_kExtendBattleAttrShieldIncrease                  PlayerExtendAttribute = 35800
	PlayerExtendAttribute_kExtendBattleAttrArmyNumberIncrease              PlayerExtendAttribute = 35900
	PlayerExtendAttribute_kExtendBattleAttrHeroArmyRageIncrease            PlayerExtendAttribute = 35901
	PlayerExtendAttribute_kExtendBattleAttrArmyDamageIncrease              PlayerExtendAttribute = 36100
	PlayerExtendAttribute_kExtendBattleAttrArmyNormalAtkDamageIncrease     PlayerExtendAttribute = 36101
	PlayerExtendAttribute_kExtendBattleAttrArmyCounterAtkDamageIncrease    PlayerExtendAttribute = 36102
	PlayerExtendAttribute_kExtendBattleDamagedBySkillIncrease              PlayerExtendAttribute = 36103
	PlayerExtendAttribute_kExtendBattleAttrInfantryDamageIncrease          PlayerExtendAttribute = 36104
	PlayerExtendAttribute_kExtendBattleAttrCavalryDamageIncrease           PlayerExtendAttribute = 36105
	PlayerExtendAttribute_kExtendBattleAttrArcherIDamagencrease            PlayerExtendAttribute = 36106
	PlayerExtendAttribute_kExtendBattleAttrDamageToInfantryIncrease        PlayerExtendAttribute = 36200
	PlayerExtendAttribute_kExtendBattleAttrDamageToCavalryIncrease         PlayerExtendAttribute = 36201
	PlayerExtendAttribute_kExtendBattleAttrDamageToArcherIncrease          PlayerExtendAttribute = 36202
	PlayerExtendAttribute_kExtendBattleAttrDamageBuildingIncrease          PlayerExtendAttribute = 36203
	PlayerExtendAttribute_kExtendBattleAttrArmyDamageDecrease              PlayerExtendAttribute = 36300
	PlayerExtendAttribute_kExtendBattleAttrInfantryDamagedDecrease         PlayerExtendAttribute = 36301
	PlayerExtendAttribute_kExtendBattleAttrCavalryDamagedDecrease          PlayerExtendAttribute = 36302
	PlayerExtendAttribute_kExtendBattleAttrArcherDamagedDecrease           PlayerExtendAttribute = 36303
	PlayerExtendAttribute_kExtendBattleAttrBeDamageByNormalAtkIncrease     PlayerExtendAttribute = 36400
	PlayerExtendAttribute_kExtendBattleAttrBeCounteredDamageIncrease       PlayerExtendAttribute = 36401
	PlayerExtendAttribute_kExtendBattleBeDamagedBySkillIncrease            PlayerExtendAttribute = 36402
	PlayerExtendAttribute_kExtendBattleAttrBeDamagedByInfantryDecrease     PlayerExtendAttribute = 36403
	PlayerExtendAttribute_kExtendBattleAttrBeDamagedByCavalryDecrease      PlayerExtendAttribute = 36404
	PlayerExtendAttribute_kExtendBattleAttrBeDamagedByArcherDecrease       PlayerExtendAttribute = 36405
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectOil                   PlayerExtendAttribute = 39001
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectGem                   PlayerExtendAttribute = 39002
	PlayerExtendAttribute_kExtendAttr_AbsoluteDomain                       PlayerExtendAttribute = 39003
	PlayerExtendAttribute_kExtendAttrkIncRate_KillBarbariansReward2        PlayerExtendAttribute = 39004
	PlayerExtendAttribute_kExtendAttrkIncRate_HeroExp                      PlayerExtendAttribute = 39005
	PlayerExtendAttribute_kExtendAttr_ScoutScience1                        PlayerExtendAttribute = 39006
	PlayerExtendAttribute_kExtendAttr_ScoutScience2                        PlayerExtendAttribute = 39007
	PlayerExtendAttribute_kExtendAttrkIncRate_CastleReenforceCapacity      PlayerExtendAttribute = 39008
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectSteelOpen             PlayerExtendAttribute = 39009
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectOilOpen               PlayerExtendAttribute = 39010
	PlayerExtendAttribute_kExtendAttrkIncRate_CollectGemOpen               PlayerExtendAttribute = 39011
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_Siege               PlayerExtendAttribute = 39015
	PlayerExtendAttribute_kExtendBattleAttrTroopAttack_WatchTower          PlayerExtendAttribute = 39016
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_Siege              PlayerExtendAttribute = 39017
	PlayerExtendAttribute_kExtendBattleAttrTroopDefence_WatchTower         PlayerExtendAttribute = 39018
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_Siege                   PlayerExtendAttribute = 39019
	PlayerExtendAttribute_kExtendBattleAttrTroopHp_WatchTower              PlayerExtendAttribute = 39020
	PlayerExtendAttribute_kExtendBattleAttrTroopSpeed_Siege                PlayerExtendAttribute = 39021
	PlayerExtendAttribute_kExtendBattleAttrScoutSpeed                      PlayerExtendAttribute = 39022
	PlayerExtendAttribute_kExtendBattleAttrCarriageSpeed                   PlayerExtendAttribute = 39023
	PlayerExtendAttribute_kExtendBattleAttrTroopAttackRange_Archer         PlayerExtendAttribute = 39024
	PlayerExtendAttribute_kExtendBattleAttrArmyRageAtkIncrease             PlayerExtendAttribute = 39025
	PlayerExtendAttribute_kExtendBattleAttrWatchTowerAtkIncrease           PlayerExtendAttribute = 39026
	PlayerExtendAttribute_kExtendBattleAttrWatchTowerToArmyDamageDecrease  PlayerExtendAttribute = 39027
	PlayerExtendAttribute_kExtendBattleAttrArmyToWatchTowerDamageIncrease  PlayerExtendAttribute = 39028
	PlayerExtendAttribute_kExtendBattleAttrWatchTowerDamageIncrease        PlayerExtendAttribute = 39029
	PlayerExtendAttribute_kPlayerExtendAttributeTroop125DamageDecRate      PlayerExtendAttribute = 39030
	PlayerExtendAttribute_kPlayerExtendAttributeTroop133DamageDecRate      PlayerExtendAttribute = 39031
	PlayerExtendAttribute_kPlayerExtendAttributeTroop127DefendIncRate      PlayerExtendAttribute = 39032
	PlayerExtendAttribute_kPlayerExtendAttributeTroop135DefendIncRate      PlayerExtendAttribute = 39033
	PlayerExtendAttribute_kPlayerExtendAttributeTroop126AtkIncRate         PlayerExtendAttribute = 39034
	PlayerExtendAttribute_kPlayerExtendAttributeTroop134AtkIncRate         PlayerExtendAttribute = 39035
	PlayerExtendAttribute_kPlayerExtendAttributeTroop122AtkIncRate         PlayerExtendAttribute = 39036
	PlayerExtendAttribute_kPlayerExtendAttributeTroop130AtkIncRate         PlayerExtendAttribute = 39037
	PlayerExtendAttribute_kPlayerExtendAttributeTroop128AtkIncRate         PlayerExtendAttribute = 39038
	PlayerExtendAttribute_kPlayerExtendAttributeTroop136AtkIncRate         PlayerExtendAttribute = 39039
	PlayerExtendAttribute_kPlayerExtendAttributeTroop156DamageDecRate      PlayerExtendAttribute = 39040
	PlayerExtendAttribute_kPlayerExtendAttributeTroop153DefendIncRate      PlayerExtendAttribute = 39041
	PlayerExtendAttribute_kPlayerExtendAttributeTroop154AtkIncRate         PlayerExtendAttribute = 39042
	PlayerExtendAttribute_kPlayerExtendAttributeTroop151AtkIncRate         PlayerExtendAttribute = 39043
	PlayerExtendAttribute_kPlayerExtendAttributeTroop158AtkIncRate         PlayerExtendAttribute = 39044
	PlayerExtendAttribute_kExtendBattleAttrToBarbariansIncrease            PlayerExtendAttribute = 39045
	PlayerExtendAttribute_kExtendBattleAttrGarrisionAttackIncrease_All     PlayerExtendAttribute = 39046
	PlayerExtendAttribute_kExtendBattleAttrGarrisionDefenceIncrease_All    PlayerExtendAttribute = 39047
	PlayerExtendAttribute_kExtendBattleAttrGarrisionDamageIncrease         PlayerExtendAttribute = 39048
	PlayerExtendAttribute_kExtendBattleAttrGarrisionDamageDecrease         PlayerExtendAttribute = 39049
	PlayerExtendAttribute_kExtendBattleAttrAttackCityDamageIncrease        PlayerExtendAttribute = 39050
	PlayerExtendAttribute_kExtendBattleManualSkillCDDecrease               PlayerExtendAttribute = 39051
	PlayerExtendAttribute_kExtendBattleDamagedToNeutralByNormalAtkIncrease PlayerExtendAttribute = 39052
	PlayerExtendAttribute_kExtendBattleDamagedToNeutralBySkillIncrease     PlayerExtendAttribute = 39053
	PlayerExtendAttribute_kExtendBattleDamagedByNeutralIncrease            PlayerExtendAttribute = 39054
	PlayerExtendAttribute_kExtendBattleDamagedByNeutralByNormalAtkIncrease PlayerExtendAttribute = 39055
	PlayerExtendAttribute_kExtendBattleDamagedByNeutralBySkillIncrease     PlayerExtendAttribute = 39056
	PlayerExtendAttribute_kExtendBattleMonsterId5001DamageInc              PlayerExtendAttribute = 39057
	PlayerExtendAttribute_kExtendBattleMonsterId5002DamageInc              PlayerExtendAttribute = 39058
	PlayerExtendAttribute_kExtendAttrkIncRate_Collect_Food_Wood_Steel      PlayerExtendAttribute = 39059
	PlayerExtendAttribute_kExtendAttrkIncRate_GetItem                      PlayerExtendAttribute = 39060
	PlayerExtendAttribute_kExtendAttrkIncRate_MarchArmy                    PlayerExtendAttribute = 39061
	PlayerExtendAttribute_kExtendAttrkIncRate_MarchAttributeEnd            PlayerExtendAttribute = 39997
	PlayerExtendAttribute_kExtendEffectAttr_MapEnd                         PlayerExtendAttribute = 39999
	PlayerExtendAttribute_kExtendGuildAttrStart                            PlayerExtendAttribute = 40000
	PlayerExtendAttribute_kExtendGuildAttr_MemberCapacity                  PlayerExtendAttribute = 40001
	PlayerExtendAttribute_kExtendGuildAttr_FlagCount                       PlayerExtendAttribute = 49001
	PlayerExtendAttribute_kExtendGuildAttr_AssistTime                      PlayerExtendAttribute = 49002
	PlayerExtendAttribute_kExtendGuildAttr_BuildingHP                      PlayerExtendAttribute = 49003
	PlayerExtendAttribute_kExtendGuildAttr_BuildingSpeed                   PlayerExtendAttribute = 49004
	PlayerExtendAttribute_kExtendGuildAttr_StoreCapacity                   PlayerExtendAttribute = 49005
	PlayerExtendAttribute_kExtendGuildAttr_BuildingCost                    PlayerExtendAttribute = 49006
	PlayerExtendAttribute_kExtendGuildAttr_GuildMarchSpeed                 PlayerExtendAttribute = 49007
	PlayerExtendAttribute_kExtendGuildAttr_RallyTime                       PlayerExtendAttribute = 49008
	PlayerExtendAttribute_kExtendGuildAttr_CityRallyCapacity               PlayerExtendAttribute = 49009
	PlayerExtendAttribute_kExtendGuildAttr_TerritoryTroopAttackIncrease    PlayerExtendAttribute = 49010
	PlayerExtendAttribute_kExtendGuildAttr_TerritoryTroopDefenceIncrease   PlayerExtendAttribute = 49011
	PlayerExtendAttribute_kExtendGuildAttr_TerritoryTroopHPIncrease        PlayerExtendAttribute = 49012
	PlayerExtendAttribute_kExtendGuildAttr_TerritoryTroopSpeed             PlayerExtendAttribute = 49013
	PlayerExtendAttribute_kExtendGuildAttr_BurnSpeed                       PlayerExtendAttribute = 49014
	PlayerExtendAttribute_kExtendGuildAttr_GarrisonCapacityIncrease        PlayerExtendAttribute = 49015
	PlayerExtendAttribute_kExtendGuildAttr_GuildFlagBuildingSpeed          PlayerExtendAttribute = 49016
	PlayerExtendAttribute_kExtendGuildAttrEnd                              PlayerExtendAttribute = 49999
	PlayerExtendAttribute_kExtendAttrEnd                                   PlayerExtendAttribute = 50000
)

var PlayerExtendAttribute_name = map[int32]string{
	0:     "kExtendAttrNone",
	10000: "kExtendAttrStart",
	// Duplicate value: 10000: "kExtendHeroAttr_Start",
	10001: "kExtendHeroAttr_PowerValue",
	10002: "kExtendHeroAttr_DefenseValue",
	10003: "kExtendHeroAttr_LifeValue",
	19999: "kExtendHeroAttr_End",
	20000: "kExtendAttrTimeIncRate_Start",
	20001: "kExtendAttrTimeIncRate_Building",
	20002: "kExtendAttrTimeIncRate_Science",
	20003: "kExtendAttrTimeIncRate_TrainingArmy",
	20004: "kExtendAttrTimeIncRate_Cure",
	20005: "kExtendAttrCostRate_Build",
	20006: "kExtendAttrCostRate_Science",
	20007: "kExtendAttrCostRate_Build_Abs",
	20008: "kExtendAttrTimeIncRate_Instument",
	20009: "kExtendAttrkIncRate_Food",
	20010: "kExtendAttrkIncRate_Wood",
	20011: "kExtendAttrkIncRate_Steel",
	20012: "kExtendAttrkIncRate_Oil",
	20013: "kExtendAttrkIncRate_All",
	20020: "kExtendAttrkIncRate_StoreCapacity",
	20021: "kExtendAttrkIncRate_HospitalCapacity",
	20022: "kExtendAttrkIncRate_TrainArmy_Abs",
	20030: "kExtendAttr_CureCost",
	29001: "kExtendAttrkIncRate_MarchArmyCapacity",
	29002: "kExtendAttrkIncRate_GuildMarchArmyCapacity",
	29004: "kExtendAttrkIncRate_Tax",
	29005: "kExtendAttrkIncRate_Copper",
	29006: "kExtendAttrkIncRate_Wood_Steel_Farm",
	29999: "kExtendLordAttrEnd",
	30000: "kExtendEffectAttr_MapStart",
	30001: "kExtendAttrkIncRate_CollectFood",
	30002: "kExtendAttrkIncRate_CollectWood",
	30003: "kExtendAttrkIncRate_CollectSteel",
	30004: "kExtendAttrkIncRate_CollectAll",
	30005: "kExtendAttrkIncRate_CollectIncrease",
	30006: "kExtendAttrkIncRate_Burden",
	30007: "kExtendAttrkIncRate_CollectAllExtra",
	30010: "kExtendAttrDec_AP",
	30011: "kExtendAttrkIncRate_ApRecover",
	30012: "kExtendAttrkIncRate_KillBarbariansReward",
	30020: "kExtendAttrkIncRate_PeaceShield",
	30021: "kExtendAttrPlunderResourceIncrease",
	30022: "kExtendAttrkIncRate_ScoutTroopCount",
	30023: "kExtendAttr_DisableScout",
	30030: "kExtendStronghold_Limit",
	35000: "kExtendBattleAttrTroopAttack_All",
	35001: "kExtendBattleAttrTroopAttack_Infantry",
	35002: "kExtendBattleAttrTroopAttack_Cavalry",
	35003: "kExtendBattleAttrTroopAttack_Archer",
	35100: "kExtendBattleAttrTroopAttack_All_Abs",
	35101: "kExtendBattleAttrTroopAttack_Infantry_Abs",
	35102: "kExtendBattleAttrTroopAttack_Cavalry_Abs",
	35103: "kExtendBattleAttrTroopAttack_Archer_Abs",
	35200: "kExtendBattleAttrTroopDefence_All",
	35201: "kExtendBattleAttrTroopDefence_Infantry",
	35202: "kExtendBattleAttrTroopDefence_Cavalry",
	35203: "kExtendBattleAttrTroopDefence_Archer",
	// Duplicate value: 35203: "kExtendBattleAttrTroopDefence_Archer_Abs",
	35300: "kExtendBattleAttrTroopDefence_All_Abs",
	35301: "kExtendBattleAttrTroopDefence_Infantry_Abs",
	35302: "kExtendBattleAttrTroopDefence_Cavalry_Abs",
	35400: "kExtendBattleAttrTroopHp_All",
	35401: "kExtendBattleAttrTroopHp_Infantry",
	35402: "kExtendBattleAttrTroopHp_Cavalry",
	35403: "kExtendBattleAttrTroopHp_Archer",
	35500: "kExtendBattleAttrTroopHp_All_Abs",
	35501: "kExtendBattleAttrTroopHp_Infantry_Abs",
	35502: "kExtendBattleAttrTroopHp_Cavalry_Abs",
	35503: "kExtendBattleAttrTroopHp_Archer_Abs",
	35600: "kExtendBattleAttrTroopSpeed_All",
	35601: "kExtendBattleAttrTroopSpeed_Infantry",
	35602: "kExtendBattleAttrTroopSpeed_Cavalry",
	35603: "kExtendBattleAttrTroopSpeed_Archer",
	35700: "kExtendBattleAttrTroopAttackRange_Cure",
	35701: "kExtendBattleAttrCastHealIncrease",
	35800: "kExtendBattleAttrShieldIncrease",
	35900: "kExtendBattleAttrArmyNumberIncrease",
	35901: "kExtendBattleAttrHeroArmyRageIncrease",
	36100: "kExtendBattleAttrArmyDamageIncrease",
	36101: "kExtendBattleAttrArmyNormalAtkDamageIncrease",
	36102: "kExtendBattleAttrArmyCounterAtkDamageIncrease",
	36103: "kExtendBattleDamagedBySkillIncrease",
	36104: "kExtendBattleAttrInfantryDamageIncrease",
	36105: "kExtendBattleAttrCavalryDamageIncrease",
	36106: "kExtendBattleAttrArcherIDamagencrease",
	36200: "kExtendBattleAttrDamageToInfantryIncrease",
	36201: "kExtendBattleAttrDamageToCavalryIncrease",
	36202: "kExtendBattleAttrDamageToArcherIncrease",
	36203: "kExtendBattleAttrDamageBuildingIncrease",
	36300: "kExtendBattleAttrArmyDamageDecrease",
	36301: "kExtendBattleAttrInfantryDamagedDecrease",
	36302: "kExtendBattleAttrCavalryDamagedDecrease",
	36303: "kExtendBattleAttrArcherDamagedDecrease",
	36400: "kExtendBattleAttrBeDamageByNormalAtkIncrease",
	36401: "kExtendBattleAttrBeCounteredDamageIncrease",
	36402: "kExtendBattleBeDamagedBySkillIncrease",
	36403: "kExtendBattleAttrBeDamagedByInfantryDecrease",
	36404: "kExtendBattleAttrBeDamagedByCavalryDecrease",
	36405: "kExtendBattleAttrBeDamagedByArcherDecrease",
	39001: "kExtendAttrkIncRate_CollectOil",
	39002: "kExtendAttrkIncRate_CollectGem",
	39003: "kExtendAttr_AbsoluteDomain",
	39004: "kExtendAttrkIncRate_KillBarbariansReward2",
	39005: "kExtendAttrkIncRate_HeroExp",
	39006: "kExtendAttr_ScoutScience1",
	39007: "kExtendAttr_ScoutScience2",
	39008: "kExtendAttrkIncRate_CastleReenforceCapacity",
	39009: "kExtendAttrkIncRate_CollectSteelOpen",
	39010: "kExtendAttrkIncRate_CollectOilOpen",
	39011: "kExtendAttrkIncRate_CollectGemOpen",
	39015: "kExtendBattleAttrTroopAttack_Siege",
	39016: "kExtendBattleAttrTroopAttack_WatchTower",
	39017: "kExtendBattleAttrTroopDefence_Siege",
	39018: "kExtendBattleAttrTroopDefence_WatchTower",
	39019: "kExtendBattleAttrTroopHp_Siege",
	39020: "kExtendBattleAttrTroopHp_WatchTower",
	39021: "kExtendBattleAttrTroopSpeed_Siege",
	39022: "kExtendBattleAttrScoutSpeed",
	39023: "kExtendBattleAttrCarriageSpeed",
	39024: "kExtendBattleAttrTroopAttackRange_Archer",
	39025: "kExtendBattleAttrArmyRageAtkIncrease",
	39026: "kExtendBattleAttrWatchTowerAtkIncrease",
	39027: "kExtendBattleAttrWatchTowerToArmyDamageDecrease",
	39028: "kExtendBattleAttrArmyToWatchTowerDamageIncrease",
	39029: "kExtendBattleAttrWatchTowerDamageIncrease",
	39030: "kPlayerExtendAttributeTroop125DamageDecRate",
	39031: "kPlayerExtendAttributeTroop133DamageDecRate",
	39032: "kPlayerExtendAttributeTroop127DefendIncRate",
	39033: "kPlayerExtendAttributeTroop135DefendIncRate",
	39034: "kPlayerExtendAttributeTroop126AtkIncRate",
	39035: "kPlayerExtendAttributeTroop134AtkIncRate",
	39036: "kPlayerExtendAttributeTroop122AtkIncRate",
	39037: "kPlayerExtendAttributeTroop130AtkIncRate",
	39038: "kPlayerExtendAttributeTroop128AtkIncRate",
	39039: "kPlayerExtendAttributeTroop136AtkIncRate",
	39040: "kPlayerExtendAttributeTroop156DamageDecRate",
	39041: "kPlayerExtendAttributeTroop153DefendIncRate",
	39042: "kPlayerExtendAttributeTroop154AtkIncRate",
	39043: "kPlayerExtendAttributeTroop151AtkIncRate",
	39044: "kPlayerExtendAttributeTroop158AtkIncRate",
	39045: "kExtendBattleAttrToBarbariansIncrease",
	39046: "kExtendBattleAttrGarrisionAttackIncrease_All",
	39047: "kExtendBattleAttrGarrisionDefenceIncrease_All",
	39048: "kExtendBattleAttrGarrisionDamageIncrease",
	39049: "kExtendBattleAttrGarrisionDamageDecrease",
	39050: "kExtendBattleAttrAttackCityDamageIncrease",
	39051: "kExtendBattleManualSkillCDDecrease",
	39052: "kExtendBattleDamagedToNeutralByNormalAtkIncrease",
	39053: "kExtendBattleDamagedToNeutralBySkillIncrease",
	39054: "kExtendBattleDamagedByNeutralIncrease",
	39055: "kExtendBattleDamagedByNeutralByNormalAtkIncrease",
	39056: "kExtendBattleDamagedByNeutralBySkillIncrease",
	39057: "kExtendBattleMonsterId5001DamageInc",
	39058: "kExtendBattleMonsterId5002DamageInc",
	39059: "kExtendAttrkIncRate_Collect_Food_Wood_Steel",
	39060: "kExtendAttrkIncRate_GetItem",
	39061: "kExtendAttrkIncRate_MarchArmy",
	39997: "kExtendAttrkIncRate_MarchAttributeEnd",
	39999: "kExtendEffectAttr_MapEnd",
	40000: "kExtendGuildAttrStart",
	40001: "kExtendGuildAttr_MemberCapacity",
	49001: "kExtendGuildAttr_FlagCount",
	49002: "kExtendGuildAttr_AssistTime",
	49003: "kExtendGuildAttr_BuildingHP",
	49004: "kExtendGuildAttr_BuildingSpeed",
	49005: "kExtendGuildAttr_StoreCapacity",
	49006: "kExtendGuildAttr_BuildingCost",
	49007: "kExtendGuildAttr_GuildMarchSpeed",
	49008: "kExtendGuildAttr_RallyTime",
	49009: "kExtendGuildAttr_CityRallyCapacity",
	49010: "kExtendGuildAttr_TerritoryTroopAttackIncrease",
	49011: "kExtendGuildAttr_TerritoryTroopDefenceIncrease",
	49012: "kExtendGuildAttr_TerritoryTroopHPIncrease",
	49013: "kExtendGuildAttr_TerritoryTroopSpeed",
	49014: "kExtendGuildAttr_BurnSpeed",
	49015: "kExtendGuildAttr_GarrisonCapacityIncrease",
	49016: "kExtendGuildAttr_GuildFlagBuildingSpeed",
	49999: "kExtendGuildAttrEnd",
	50000: "kExtendAttrEnd",
}
var PlayerExtendAttribute_value = map[string]int32{
	"kExtendAttrNone":                                  0,
	"kExtendAttrStart":                                 10000,
	"kExtendHeroAttr_Start":                            10000,
	"kExtendHeroAttr_PowerValue":                       10001,
	"kExtendHeroAttr_DefenseValue":                     10002,
	"kExtendHeroAttr_LifeValue":                        10003,
	"kExtendHeroAttr_End":                              19999,
	"kExtendAttrTimeIncRate_Start":                     20000,
	"kExtendAttrTimeIncRate_Building":                  20001,
	"kExtendAttrTimeIncRate_Science":                   20002,
	"kExtendAttrTimeIncRate_TrainingArmy":              20003,
	"kExtendAttrTimeIncRate_Cure":                      20004,
	"kExtendAttrCostRate_Build":                        20005,
	"kExtendAttrCostRate_Science":                      20006,
	"kExtendAttrCostRate_Build_Abs":                    20007,
	"kExtendAttrTimeIncRate_Instument":                 20008,
	"kExtendAttrkIncRate_Food":                         20009,
	"kExtendAttrkIncRate_Wood":                         20010,
	"kExtendAttrkIncRate_Steel":                        20011,
	"kExtendAttrkIncRate_Oil":                          20012,
	"kExtendAttrkIncRate_All":                          20013,
	"kExtendAttrkIncRate_StoreCapacity":                20020,
	"kExtendAttrkIncRate_HospitalCapacity":             20021,
	"kExtendAttrkIncRate_TrainArmy_Abs":                20022,
	"kExtendAttr_CureCost":                             20030,
	"kExtendAttrkIncRate_MarchArmyCapacity":            29001,
	"kExtendAttrkIncRate_GuildMarchArmyCapacity":       29002,
	"kExtendAttrkIncRate_Tax":                          29004,
	"kExtendAttrkIncRate_Copper":                       29005,
	"kExtendAttrkIncRate_Wood_Steel_Farm":              29006,
	"kExtendLordAttrEnd":                               29999,
	"kExtendEffectAttr_MapStart":                       30000,
	"kExtendAttrkIncRate_CollectFood":                  30001,
	"kExtendAttrkIncRate_CollectWood":                  30002,
	"kExtendAttrkIncRate_CollectSteel":                 30003,
	"kExtendAttrkIncRate_CollectAll":                   30004,
	"kExtendAttrkIncRate_CollectIncrease":              30005,
	"kExtendAttrkIncRate_Burden":                       30006,
	"kExtendAttrkIncRate_CollectAllExtra":              30007,
	"kExtendAttrDec_AP":                                30010,
	"kExtendAttrkIncRate_ApRecover":                    30011,
	"kExtendAttrkIncRate_KillBarbariansReward":         30012,
	"kExtendAttrkIncRate_PeaceShield":                  30020,
	"kExtendAttrPlunderResourceIncrease":               30021,
	"kExtendAttrkIncRate_ScoutTroopCount":              30022,
	"kExtendAttr_DisableScout":                         30023,
	"kExtendStronghold_Limit":                          30030,
	"kExtendBattleAttrTroopAttack_All":                 35000,
	"kExtendBattleAttrTroopAttack_Infantry":            35001,
	"kExtendBattleAttrTroopAttack_Cavalry":             35002,
	"kExtendBattleAttrTroopAttack_Archer":              35003,
	"kExtendBattleAttrTroopAttack_All_Abs":             35100,
	"kExtendBattleAttrTroopAttack_Infantry_Abs":        35101,
	"kExtendBattleAttrTroopAttack_Cavalry_Abs":         35102,
	"kExtendBattleAttrTroopAttack_Archer_Abs":          35103,
	"kExtendBattleAttrTroopDefence_All":                35200,
	"kExtendBattleAttrTroopDefence_Infantry":           35201,
	"kExtendBattleAttrTroopDefence_Cavalry":            35202,
	"kExtendBattleAttrTroopDefence_Archer":             35203,
	"kExtendBattleAttrTroopDefence_Archer_Abs":         35203,
	"kExtendBattleAttrTroopDefence_All_Abs":            35300,
	"kExtendBattleAttrTroopDefence_Infantry_Abs":       35301,
	"kExtendBattleAttrTroopDefence_Cavalry_Abs":        35302,
	"kExtendBattleAttrTroopHp_All":                     35400,
	"kExtendBattleAttrTroopHp_Infantry":                35401,
	"kExtendBattleAttrTroopHp_Cavalry":                 35402,
	"kExtendBattleAttrTroopHp_Archer":                  35403,
	"kExtendBattleAttrTroopHp_All_Abs":                 35500,
	"kExtendBattleAttrTroopHp_Infantry_Abs":            35501,
	"kExtendBattleAttrTroopHp_Cavalry_Abs":             35502,
	"kExtendBattleAttrTroopHp_Archer_Abs":              35503,
	"kExtendBattleAttrTroopSpeed_All":                  35600,
	"kExtendBattleAttrTroopSpeed_Infantry":             35601,
	"kExtendBattleAttrTroopSpeed_Cavalry":              35602,
	"kExtendBattleAttrTroopSpeed_Archer":               35603,
	"kExtendBattleAttrTroopAttackRange_Cure":           35700,
	"kExtendBattleAttrCastHealIncrease":                35701,
	"kExtendBattleAttrShieldIncrease":                  35800,
	"kExtendBattleAttrArmyNumberIncrease":              35900,
	"kExtendBattleAttrHeroArmyRageIncrease":            35901,
	"kExtendBattleAttrArmyDamageIncrease":              36100,
	"kExtendBattleAttrArmyNormalAtkDamageIncrease":     36101,
	"kExtendBattleAttrArmyCounterAtkDamageIncrease":    36102,
	"kExtendBattleDamagedBySkillIncrease":              36103,
	"kExtendBattleAttrInfantryDamageIncrease":          36104,
	"kExtendBattleAttrCavalryDamageIncrease":           36105,
	"kExtendBattleAttrArcherIDamagencrease":            36106,
	"kExtendBattleAttrDamageToInfantryIncrease":        36200,
	"kExtendBattleAttrDamageToCavalryIncrease":         36201,
	"kExtendBattleAttrDamageToArcherIncrease":          36202,
	"kExtendBattleAttrDamageBuildingIncrease":          36203,
	"kExtendBattleAttrArmyDamageDecrease":              36300,
	"kExtendBattleAttrInfantryDamagedDecrease":         36301,
	"kExtendBattleAttrCavalryDamagedDecrease":          36302,
	"kExtendBattleAttrArcherDamagedDecrease":           36303,
	"kExtendBattleAttrBeDamageByNormalAtkIncrease":     36400,
	"kExtendBattleAttrBeCounteredDamageIncrease":       36401,
	"kExtendBattleBeDamagedBySkillIncrease":            36402,
	"kExtendBattleAttrBeDamagedByInfantryDecrease":     36403,
	"kExtendBattleAttrBeDamagedByCavalryDecrease":      36404,
	"kExtendBattleAttrBeDamagedByArcherDecrease":       36405,
	"kExtendAttrkIncRate_CollectOil":                   39001,
	"kExtendAttrkIncRate_CollectGem":                   39002,
	"kExtendAttr_AbsoluteDomain":                       39003,
	"kExtendAttrkIncRate_KillBarbariansReward2":        39004,
	"kExtendAttrkIncRate_HeroExp":                      39005,
	"kExtendAttr_ScoutScience1":                        39006,
	"kExtendAttr_ScoutScience2":                        39007,
	"kExtendAttrkIncRate_CastleReenforceCapacity":      39008,
	"kExtendAttrkIncRate_CollectSteelOpen":             39009,
	"kExtendAttrkIncRate_CollectOilOpen":               39010,
	"kExtendAttrkIncRate_CollectGemOpen":               39011,
	"kExtendBattleAttrTroopAttack_Siege":               39015,
	"kExtendBattleAttrTroopAttack_WatchTower":          39016,
	"kExtendBattleAttrTroopDefence_Siege":              39017,
	"kExtendBattleAttrTroopDefence_WatchTower":         39018,
	"kExtendBattleAttrTroopHp_Siege":                   39019,
	"kExtendBattleAttrTroopHp_WatchTower":              39020,
	"kExtendBattleAttrTroopSpeed_Siege":                39021,
	"kExtendBattleAttrScoutSpeed":                      39022,
	"kExtendBattleAttrCarriageSpeed":                   39023,
	"kExtendBattleAttrTroopAttackRange_Archer":         39024,
	"kExtendBattleAttrArmyRageAtkIncrease":             39025,
	"kExtendBattleAttrWatchTowerAtkIncrease":           39026,
	"kExtendBattleAttrWatchTowerToArmyDamageDecrease":  39027,
	"kExtendBattleAttrArmyToWatchTowerDamageIncrease":  39028,
	"kExtendBattleAttrWatchTowerDamageIncrease":        39029,
	"kPlayerExtendAttributeTroop125DamageDecRate":      39030,
	"kPlayerExtendAttributeTroop133DamageDecRate":      39031,
	"kPlayerExtendAttributeTroop127DefendIncRate":      39032,
	"kPlayerExtendAttributeTroop135DefendIncRate":      39033,
	"kPlayerExtendAttributeTroop126AtkIncRate":         39034,
	"kPlayerExtendAttributeTroop134AtkIncRate":         39035,
	"kPlayerExtendAttributeTroop122AtkIncRate":         39036,
	"kPlayerExtendAttributeTroop130AtkIncRate":         39037,
	"kPlayerExtendAttributeTroop128AtkIncRate":         39038,
	"kPlayerExtendAttributeTroop136AtkIncRate":         39039,
	"kPlayerExtendAttributeTroop156DamageDecRate":      39040,
	"kPlayerExtendAttributeTroop153DefendIncRate":      39041,
	"kPlayerExtendAttributeTroop154AtkIncRate":         39042,
	"kPlayerExtendAttributeTroop151AtkIncRate":         39043,
	"kPlayerExtendAttributeTroop158AtkIncRate":         39044,
	"kExtendBattleAttrToBarbariansIncrease":            39045,
	"kExtendBattleAttrGarrisionAttackIncrease_All":     39046,
	"kExtendBattleAttrGarrisionDefenceIncrease_All":    39047,
	"kExtendBattleAttrGarrisionDamageIncrease":         39048,
	"kExtendBattleAttrGarrisionDamageDecrease":         39049,
	"kExtendBattleAttrAttackCityDamageIncrease":        39050,
	"kExtendBattleManualSkillCDDecrease":               39051,
	"kExtendBattleDamagedToNeutralByNormalAtkIncrease": 39052,
	"kExtendBattleDamagedToNeutralBySkillIncrease":     39053,
	"kExtendBattleDamagedByNeutralIncrease":            39054,
	"kExtendBattleDamagedByNeutralByNormalAtkIncrease": 39055,
	"kExtendBattleDamagedByNeutralBySkillIncrease":     39056,
	"kExtendBattleMonsterId5001DamageInc":              39057,
	"kExtendBattleMonsterId5002DamageInc":              39058,
	"kExtendAttrkIncRate_Collect_Food_Wood_Steel":      39059,
	"kExtendAttrkIncRate_GetItem":                      39060,
	"kExtendAttrkIncRate_MarchArmy":                    39061,
	"kExtendAttrkIncRate_MarchAttributeEnd":            39997,
	"kExtendEffectAttr_MapEnd":                         39999,
	"kExtendGuildAttrStart":                            40000,
	"kExtendGuildAttr_MemberCapacity":                  40001,
	"kExtendGuildAttr_FlagCount":                       49001,
	"kExtendGuildAttr_AssistTime":                      49002,
	"kExtendGuildAttr_BuildingHP":                      49003,
	"kExtendGuildAttr_BuildingSpeed":                   49004,
	"kExtendGuildAttr_StoreCapacity":                   49005,
	"kExtendGuildAttr_BuildingCost":                    49006,
	"kExtendGuildAttr_GuildMarchSpeed":                 49007,
	"kExtendGuildAttr_RallyTime":                       49008,
	"kExtendGuildAttr_CityRallyCapacity":               49009,
	"kExtendGuildAttr_TerritoryTroopAttackIncrease":    49010,
	"kExtendGuildAttr_TerritoryTroopDefenceIncrease":   49011,
	"kExtendGuildAttr_TerritoryTroopHPIncrease":        49012,
	"kExtendGuildAttr_TerritoryTroopSpeed":             49013,
	"kExtendGuildAttr_BurnSpeed":                       49014,
	"kExtendGuildAttr_GarrisonCapacityIncrease":        49015,
	"kExtendGuildAttr_GuildFlagBuildingSpeed":          49016,
	"kExtendGuildAttrEnd":                              49999,
	"kExtendAttrEnd":                                   50000,
}

func (x PlayerExtendAttribute) String() string {
	return proto.EnumName(PlayerExtendAttribute_name, int32(x))
}
func (PlayerExtendAttribute) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{7} }

type BattleType int32

const (
	BattleType_kBattleType_None BattleType = 0
	// 野蛮人
	BattleType_kBattleTypeKillBarbarians BattleType = 1
	// 城寨
	BattleType_kBattleTypeBarbariansFort BattleType = 2
	// 野外PVP
	BattleType_kBattleTypeWildPVP BattleType = 3
	// 采集点
	BattleType_kBattleTypeCollect BattleType = 4
	// 打城
	BattleType_kBattleTypeCastleSingle BattleType = 5
	// 关卡通关
	BattleType_kBattleTypePassNpc BattleType = 7
	// 关卡争夺
	BattleType_kBattleTypePassPlayer BattleType = 8
	// 奇观通关
	BattleType_kBattleTypeTempleNpc BattleType = 9
	// 奇观争夺
	BattleType_kBattleTypeTemplePlayer BattleType = 10
	// 旗帜
	BattleType_kBattleTypeGuildFlag BattleType = 11
	// 要塞
	BattleType_kBattleTypeGuildCastle BattleType = 12
	// 奇观据点
	BattleType_kBattleTypeStrongHoldEntity BattleType = 13
	// 攻打中立怪
	BattleType_kBattleTypeGenericMonster BattleType = 14
	// 攻打召唤怪
	BattleType_kBattleTypeSummonMonster BattleType = 15
	// 攻打特殊怪物-副本据点
	BattleType_kBattleTypeExpeStronghold BattleType = 16
	// 攻打特殊怪物-敌人副本据点
	BattleType_kBattleTypeExpeEnemyFort BattleType = 17
	// 远征集结部队
	BattleType_kBattleTypeExpeGroupMarch BattleType = 18
	// 运输队-非战斗NPC
	BattleType_kBattleTypeTrafficUnit BattleType = 19
	// 庞贝积分建筑
	BattleType_kBattleTypePompeiiBuildPoint BattleType = 20
	// 庞贝迁城建筑
	BattleType_kBattleTypePompeiiBuildRelocate BattleType = 21
	// 庞贝普通野怪
	BattleType_kBattleTypePompeiiMonster BattleType = 22
	// 庞贝BOSS
	BattleType_kBattleTypePompeiiBoss BattleType = 23
	// 庞贝火车站
	BattleType_kBattleTypePompeiiTrainStation BattleType = 24
	// 雷达系统专属怪
	BattleType_kBattleTypePrivateRadarMonster BattleType = 25
	// 雷达系统普通怪
	BattleType_kBattleTypePublicRadarMonster BattleType = 26
	// Npc城寨
	BattleType_kBattleTypeNpcFort BattleType = 27
)

var BattleType_name = map[int32]string{
	0:  "kBattleType_None",
	1:  "kBattleTypeKillBarbarians",
	2:  "kBattleTypeBarbariansFort",
	3:  "kBattleTypeWildPVP",
	4:  "kBattleTypeCollect",
	5:  "kBattleTypeCastleSingle",
	7:  "kBattleTypePassNpc",
	8:  "kBattleTypePassPlayer",
	9:  "kBattleTypeTempleNpc",
	10: "kBattleTypeTemplePlayer",
	11: "kBattleTypeGuildFlag",
	12: "kBattleTypeGuildCastle",
	13: "kBattleTypeStrongHoldEntity",
	14: "kBattleTypeGenericMonster",
	15: "kBattleTypeSummonMonster",
	16: "kBattleTypeExpeStronghold",
	17: "kBattleTypeExpeEnemyFort",
	18: "kBattleTypeExpeGroupMarch",
	19: "kBattleTypeTrafficUnit",
	20: "kBattleTypePompeiiBuildPoint",
	21: "kBattleTypePompeiiBuildRelocate",
	22: "kBattleTypePompeiiMonster",
	23: "kBattleTypePompeiiBoss",
	24: "kBattleTypePompeiiTrainStation",
	25: "kBattleTypePrivateRadarMonster",
	26: "kBattleTypePublicRadarMonster",
	27: "kBattleTypeNpcFort",
}
var BattleType_value = map[string]int32{
	"kBattleType_None":                0,
	"kBattleTypeKillBarbarians":       1,
	"kBattleTypeBarbariansFort":       2,
	"kBattleTypeWildPVP":              3,
	"kBattleTypeCollect":              4,
	"kBattleTypeCastleSingle":         5,
	"kBattleTypePassNpc":              7,
	"kBattleTypePassPlayer":           8,
	"kBattleTypeTempleNpc":            9,
	"kBattleTypeTemplePlayer":         10,
	"kBattleTypeGuildFlag":            11,
	"kBattleTypeGuildCastle":          12,
	"kBattleTypeStrongHoldEntity":     13,
	"kBattleTypeGenericMonster":       14,
	"kBattleTypeSummonMonster":        15,
	"kBattleTypeExpeStronghold":       16,
	"kBattleTypeExpeEnemyFort":        17,
	"kBattleTypeExpeGroupMarch":       18,
	"kBattleTypeTrafficUnit":          19,
	"kBattleTypePompeiiBuildPoint":    20,
	"kBattleTypePompeiiBuildRelocate": 21,
	"kBattleTypePompeiiMonster":       22,
	"kBattleTypePompeiiBoss":          23,
	"kBattleTypePompeiiTrainStation":  24,
	"kBattleTypePrivateRadarMonster":  25,
	"kBattleTypePublicRadarMonster":   26,
	"kBattleTypeNpcFort":              27,
}

func (x BattleType) String() string {
	return proto.EnumName(BattleType_name, int32(x))
}
func (BattleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{8} }

type NewPlayerProtectType int32

const (
	NewPlayerProtectType_kNewPlayerProtectTypeNone     NewPlayerProtectType = 0
	NewPlayerProtectType_kNewPlayerProtectTypeCanceled NewPlayerProtectType = 1
)

var NewPlayerProtectType_name = map[int32]string{
	0: "kNewPlayerProtectTypeNone",
	1: "kNewPlayerProtectTypeCanceled",
}
var NewPlayerProtectType_value = map[string]int32{
	"kNewPlayerProtectTypeNone":     0,
	"kNewPlayerProtectTypeCanceled": 1,
}

func (x NewPlayerProtectType) String() string {
	return proto.EnumName(NewPlayerProtectType_name, int32(x))
}
func (NewPlayerProtectType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{9} }

type RefinedConsume int32

const (
	RefinedConsume_kEquipNone           RefinedConsume = 0
	RefinedConsume_kEquipQuality        RefinedConsume = 1
	RefinedConsume_kEquipQualityAndType RefinedConsume = 2
	RefinedConsume_kEquipName           RefinedConsume = 3
)

var RefinedConsume_name = map[int32]string{
	0: "kEquipNone",
	1: "kEquipQuality",
	2: "kEquipQualityAndType",
	3: "kEquipName",
}
var RefinedConsume_value = map[string]int32{
	"kEquipNone":           0,
	"kEquipQuality":        1,
	"kEquipQualityAndType": 2,
	"kEquipName":           3,
}

func (x RefinedConsume) String() string {
	return proto.EnumName(RefinedConsume_name, int32(x))
}
func (RefinedConsume) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{10} }

type EquipmentType int32

const (
	EquipmentType_kEquipmentTypeNone   EquipmentType = 0
	EquipmentType_kEquipmentTypeArms   EquipmentType = 1
	EquipmentType_kEquipmentTypeHelmet EquipmentType = 2
	EquipmentType_kEquipmentTypeArmor  EquipmentType = 3
	EquipmentType_kEquipmentTypePants  EquipmentType = 4
	EquipmentType_kEquipmentTypeBoots  EquipmentType = 5
	EquipmentType_kEquipmentTypeGloves EquipmentType = 6
)

var EquipmentType_name = map[int32]string{
	0: "kEquipmentTypeNone",
	1: "kEquipmentTypeArms",
	2: "kEquipmentTypeHelmet",
	3: "kEquipmentTypeArmor",
	4: "kEquipmentTypePants",
	5: "kEquipmentTypeBoots",
	6: "kEquipmentTypeGloves",
}
var EquipmentType_value = map[string]int32{
	"kEquipmentTypeNone":   0,
	"kEquipmentTypeArms":   1,
	"kEquipmentTypeHelmet": 2,
	"kEquipmentTypeArmor":  3,
	"kEquipmentTypePants":  4,
	"kEquipmentTypeBoots":  5,
	"kEquipmentTypeGloves": 6,
}

func (x EquipmentType) String() string {
	return proto.EnumName(EquipmentType_name, int32(x))
}
func (EquipmentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{11} }

// ////////////////////////////////////////////////////////////////////////
// /  英雄模块 开始
// ////////////////////////////////////////////////////////////////////////
type HeroType int32

const (
	HeroType_kHeroTypeNone    HeroType = 0
	HeroType_kHeroTypePlayer  HeroType = 1
	HeroType_kHeroTypeMonster HeroType = 2
)

var HeroType_name = map[int32]string{
	0: "kHeroTypeNone",
	1: "kHeroTypePlayer",
	2: "kHeroTypeMonster",
}
var HeroType_value = map[string]int32{
	"kHeroTypeNone":    0,
	"kHeroTypePlayer":  1,
	"kHeroTypeMonster": 2,
}

func (x HeroType) String() string {
	return proto.EnumName(HeroType_name, int32(x))
}
func (HeroType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{12} }

type HeroStateType int32

const (
	HeroStateType_kHeroStateNormal     HeroStateType = 0
	HeroStateType_kHeroStateExpedition HeroStateType = 1
)

var HeroStateType_name = map[int32]string{
	0: "kHeroStateNormal",
	1: "kHeroStateExpedition",
}
var HeroStateType_value = map[string]int32{
	"kHeroStateNormal":     0,
	"kHeroStateExpedition": 1,
}

func (x HeroStateType) String() string {
	return proto.EnumName(HeroStateType_name, int32(x))
}
func (HeroStateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{13} }

type HeroAttributes int32

const (
	HeroAttributes_kHeroAttrNone          HeroAttributes = 0
	HeroAttributes_kHeroAttrLv            HeroAttributes = 1
	HeroAttributes_kHeroAttrStar          HeroAttributes = 2
	HeroAttributes_kHeroAttrExp           HeroAttributes = 3
	HeroAttributes_kHeroSkillLv           HeroAttributes = 4
	HeroAttributes_kHeroState             HeroAttributes = 5
	HeroAttributes_kHeroAttrStarExp       HeroAttributes = 6
	HeroAttributes_kHeroSmallStar         HeroAttributes = 7
	HeroAttributes_kHeroAttrPoint         HeroAttributes = 8
	HeroAttributes_kHeroAttrHeroPoint     HeroAttributes = 9
	HeroAttributes_kHeroAttrHeroEquipment HeroAttributes = 10
	HeroAttributes_kHeroSkillPoint        HeroAttributes = 11
	// tk新增功能
	HeroAttributes_kHeroAttrStage        HeroAttributes = 12
	HeroAttributes_kHeroAttrStageSmallLv HeroAttributes = 13
	HeroAttributes_kHeroAttrPower        HeroAttributes = 14
	HeroAttributes_kHeroAttrDefense      HeroAttributes = 15
	HeroAttributes_kHeroAttrLife         HeroAttributes = 16
	HeroAttributes_kHeroArmyNumber       HeroAttributes = 17
	HeroAttributes_kHeroArmyAddition     HeroAttributes = 18
	HeroAttributes_kHeroLoad             HeroAttributes = 19
)

var HeroAttributes_name = map[int32]string{
	0:  "kHeroAttrNone",
	1:  "kHeroAttrLv",
	2:  "kHeroAttrStar",
	3:  "kHeroAttrExp",
	4:  "kHeroSkillLv",
	5:  "kHeroState",
	6:  "kHeroAttrStarExp",
	7:  "kHeroSmallStar",
	8:  "kHeroAttrPoint",
	9:  "kHeroAttrHeroPoint",
	10: "kHeroAttrHeroEquipment",
	11: "kHeroSkillPoint",
	12: "kHeroAttrStage",
	13: "kHeroAttrStageSmallLv",
	14: "kHeroAttrPower",
	15: "kHeroAttrDefense",
	16: "kHeroAttrLife",
	17: "kHeroArmyNumber",
	18: "kHeroArmyAddition",
	19: "kHeroLoad",
}
var HeroAttributes_value = map[string]int32{
	"kHeroAttrNone":          0,
	"kHeroAttrLv":            1,
	"kHeroAttrStar":          2,
	"kHeroAttrExp":           3,
	"kHeroSkillLv":           4,
	"kHeroState":             5,
	"kHeroAttrStarExp":       6,
	"kHeroSmallStar":         7,
	"kHeroAttrPoint":         8,
	"kHeroAttrHeroPoint":     9,
	"kHeroAttrHeroEquipment": 10,
	"kHeroSkillPoint":        11,
	"kHeroAttrStage":         12,
	"kHeroAttrStageSmallLv":  13,
	"kHeroAttrPower":         14,
	"kHeroAttrDefense":       15,
	"kHeroAttrLife":          16,
	"kHeroArmyNumber":        17,
	"kHeroArmyAddition":      18,
	"kHeroLoad":              19,
}

func (x HeroAttributes) String() string {
	return proto.EnumName(HeroAttributes_name, int32(x))
}
func (HeroAttributes) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{14} }

// 点数
type HeroPointsType int32

const (
	HeroPointsType_kHeroPointsNone    HeroPointsType = 0
	HeroPointsType_kHeroPointsPower   HeroPointsType = 1
	HeroPointsType_kHeroPointsDefense HeroPointsType = 2
	HeroPointsType_kHeroPointsLife    HeroPointsType = 3
)

var HeroPointsType_name = map[int32]string{
	0: "kHeroPointsNone",
	1: "kHeroPointsPower",
	2: "kHeroPointsDefense",
	3: "kHeroPointsLife",
}
var HeroPointsType_value = map[string]int32{
	"kHeroPointsNone":    0,
	"kHeroPointsPower":   1,
	"kHeroPointsDefense": 2,
	"kHeroPointsLife":    3,
}

func (x HeroPointsType) String() string {
	return proto.EnumName(HeroPointsType_name, int32(x))
}
func (HeroPointsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{15} }

type HeroQualityType int32

const (
	HeroQualityType_kHeroQualityTypeNone  HeroQualityType = 0
	HeroQualityType_kHeroQualityGeneral   HeroQualityType = 1
	HeroQualityType_kHeroQualityExcellent HeroQualityType = 2
	HeroQualityType_kHeroQualityElite     HeroQualityType = 3
	HeroQualityType_kHeroQualityLegend    HeroQualityType = 4
)

var HeroQualityType_name = map[int32]string{
	0: "kHeroQualityTypeNone",
	1: "kHeroQualityGeneral",
	2: "kHeroQualityExcellent",
	3: "kHeroQualityElite",
	4: "kHeroQualityLegend",
}
var HeroQualityType_value = map[string]int32{
	"kHeroQualityTypeNone":  0,
	"kHeroQualityGeneral":   1,
	"kHeroQualityExcellent": 2,
	"kHeroQualityElite":     3,
	"kHeroQualityLegend":    4,
}

func (x HeroQualityType) String() string {
	return proto.EnumName(HeroQualityType_name, int32(x))
}
func (HeroQualityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{16} }

type ArmyStateType int32

const (
	ArmyStateType_kArmyNormal     ArmyStateType = 0
	ArmyStateType_kArmyExpedition ArmyStateType = 1
)

var ArmyStateType_name = map[int32]string{
	0: "kArmyNormal",
	1: "kArmyExpedition",
}
var ArmyStateType_value = map[string]int32{
	"kArmyNormal":     0,
	"kArmyExpedition": 1,
}

func (x ArmyStateType) String() string {
	return proto.EnumName(ArmyStateType_name, int32(x))
}
func (ArmyStateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{17} }

type TrainWorkStatus int32

const (
	TrainWorkStatus_kTrainWorkStatusNone     TrainWorkStatus = 0
	TrainWorkStatus_kTrainWorkStatusWorking  TrainWorkStatus = 1
	TrainWorkStatus_kTrainWorkStatusNoneDeal TrainWorkStatus = 2
	TrainWorkStatus_kTrainWorkStatusUpRank   TrainWorkStatus = 3
	TrainWorkStatus_kTrainWorkStatusBusy     TrainWorkStatus = 4
)

var TrainWorkStatus_name = map[int32]string{
	0: "kTrainWorkStatusNone",
	1: "kTrainWorkStatusWorking",
	2: "kTrainWorkStatusNoneDeal",
	3: "kTrainWorkStatusUpRank",
	4: "kTrainWorkStatusBusy",
}
var TrainWorkStatus_value = map[string]int32{
	"kTrainWorkStatusNone":     0,
	"kTrainWorkStatusWorking":  1,
	"kTrainWorkStatusNoneDeal": 2,
	"kTrainWorkStatusUpRank":   3,
	"kTrainWorkStatusBusy":     4,
}

func (x TrainWorkStatus) String() string {
	return proto.EnumName(TrainWorkStatus_name, int32(x))
}
func (TrainWorkStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{18} }

type GemConversionType int32

const (
	GemConversionType_kConversionNone          GemConversionType = 0
	GemConversionType_kConversionTimeBuilding  GemConversionType = 1
	GemConversionType_kConversionTimeScience   GemConversionType = 2
	GemConversionType_kConversionTimeTroops    GemConversionType = 3
	GemConversionType_kConversionTimeCure      GemConversionType = 4
	GemConversionType_kConversionTimeInstument GemConversionType = 5
	GemConversionType_kConversionOil           GemConversionType = 102
	GemConversionType_kConversionFood          GemConversionType = 103
	GemConversionType_kConversionWood          GemConversionType = 104
	GemConversionType_kConversionSteel         GemConversionType = 105
)

var GemConversionType_name = map[int32]string{
	0:   "kConversionNone",
	1:   "kConversionTimeBuilding",
	2:   "kConversionTimeScience",
	3:   "kConversionTimeTroops",
	4:   "kConversionTimeCure",
	5:   "kConversionTimeInstument",
	102: "kConversionOil",
	103: "kConversionFood",
	104: "kConversionWood",
	105: "kConversionSteel",
}
var GemConversionType_value = map[string]int32{
	"kConversionNone":          0,
	"kConversionTimeBuilding":  1,
	"kConversionTimeScience":   2,
	"kConversionTimeTroops":    3,
	"kConversionTimeCure":      4,
	"kConversionTimeInstument": 5,
	"kConversionOil":           102,
	"kConversionFood":          103,
	"kConversionWood":          104,
	"kConversionSteel":         105,
}

func (x GemConversionType) String() string {
	return proto.EnumName(GemConversionType_name, int32(x))
}
func (GemConversionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{19} }

type BattleVictoryType int32

const (
	BattleVictoryType_kBVT_Draw BattleVictoryType = 0
	BattleVictoryType_kBVT_Win  BattleVictoryType = 1
	BattleVictoryType_kBVT_Lose BattleVictoryType = 2
)

var BattleVictoryType_name = map[int32]string{
	0: "kBVT_Draw",
	1: "kBVT_Win",
	2: "kBVT_Lose",
}
var BattleVictoryType_value = map[string]int32{
	"kBVT_Draw": 0,
	"kBVT_Win":  1,
	"kBVT_Lose": 2,
}

func (x BattleVictoryType) String() string {
	return proto.EnumName(BattleVictoryType_name, int32(x))
}
func (BattleVictoryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{20} }

// (联盟)建筑状态
type MapBuildingStatus int32

const (
	MapBuildingStatus_kMapBuildingStatusNone   MapBuildingStatus = 0
	MapBuildingStatus_kMapBuildingStatusBuild  MapBuildingStatus = 1
	MapBuildingStatus_kMapBuildingStatusNormal MapBuildingStatus = 2
	MapBuildingStatus_kMapBuildingStatusBurn   MapBuildingStatus = 3
	MapBuildingStatus_kMapBuildingStatusRepair MapBuildingStatus = 4
)

var MapBuildingStatus_name = map[int32]string{
	0: "kMapBuildingStatusNone",
	1: "kMapBuildingStatusBuild",
	2: "kMapBuildingStatusNormal",
	3: "kMapBuildingStatusBurn",
	4: "kMapBuildingStatusRepair",
}
var MapBuildingStatus_value = map[string]int32{
	"kMapBuildingStatusNone":   0,
	"kMapBuildingStatusBuild":  1,
	"kMapBuildingStatusNormal": 2,
	"kMapBuildingStatusBurn":   3,
	"kMapBuildingStatusRepair": 4,
}

func (x MapBuildingStatus) String() string {
	return proto.EnumName(MapBuildingStatus_name, int32(x))
}
func (MapBuildingStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{21} }

type MapBuildingActive int32

const (
	MapBuildingActive_kMapBuildingActiveNone MapBuildingActive = 0
	MapBuildingActive_kMapBuildingActive     MapBuildingActive = 1
	MapBuildingActive_kMapBuildingActiveNot  MapBuildingActive = 2
)

var MapBuildingActive_name = map[int32]string{
	0: "kMapBuildingActiveNone",
	1: "kMapBuildingActive",
	2: "kMapBuildingActiveNot",
}
var MapBuildingActive_value = map[string]int32{
	"kMapBuildingActiveNone": 0,
	"kMapBuildingActive":     1,
	"kMapBuildingActiveNot":  2,
}

func (x MapBuildingActive) String() string {
	return proto.EnumName(MapBuildingActive_name, int32(x))
}
func (MapBuildingActive) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{22} }

type KingdomTitle int32

const (
	KingdomTitle_kKingdomTitleNone KingdomTitle = 0
	KingdomTitle_kKingdomTitleKing KingdomTitle = 1
)

var KingdomTitle_name = map[int32]string{
	0: "kKingdomTitleNone",
	1: "kKingdomTitleKing",
}
var KingdomTitle_value = map[string]int32{
	"kKingdomTitleNone": 0,
	"kKingdomTitleKing": 1,
}

func (x KingdomTitle) String() string {
	return proto.EnumName(KingdomTitle_name, int32(x))
}
func (KingdomTitle) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{23} }

// 王国状态
type KingdomStatus int32

const (
	KingdomStatus_kKingdomStatusNull         KingdomStatus = 0
	KingdomStatus_kKingdomStatusBuilding     KingdomStatus = 1
	KingdomStatus_kKingdomStatusOpen         KingdomStatus = 2
	KingdomStatus_kKingdomStatusLimitMigrate KingdomStatus = 3
)

var KingdomStatus_name = map[int32]string{
	0: "kKingdomStatusNull",
	1: "kKingdomStatusBuilding",
	2: "kKingdomStatusOpen",
	3: "kKingdomStatusLimitMigrate",
}
var KingdomStatus_value = map[string]int32{
	"kKingdomStatusNull":         0,
	"kKingdomStatusBuilding":     1,
	"kKingdomStatusOpen":         2,
	"kKingdomStatusLimitMigrate": 3,
}

func (x KingdomStatus) String() string {
	return proto.EnumName(KingdomStatus_name, int32(x))
}
func (KingdomStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{24} }

// ////////////////////////////////////////////////////////////////////////
// /  布阵 开始
// ////////////////////////////////////////////////////////////////////////
type DeployPosition int32

const (
	DeployPosition_kChiefGeneral      DeployPosition = 0
	DeployPosition_kViceGeneral1      DeployPosition = 1
	DeployPosition_kViceGeneral2      DeployPosition = 2
	DeployPosition_kAssistantGeneral1 DeployPosition = 3
	DeployPosition_kAssistantGeneral2 DeployPosition = 4
)

var DeployPosition_name = map[int32]string{
	0: "kChiefGeneral",
	1: "kViceGeneral1",
	2: "kViceGeneral2",
	3: "kAssistantGeneral1",
	4: "kAssistantGeneral2",
}
var DeployPosition_value = map[string]int32{
	"kChiefGeneral":      0,
	"kViceGeneral1":      1,
	"kViceGeneral2":      2,
	"kAssistantGeneral1": 3,
	"kAssistantGeneral2": 4,
}

func (x DeployPosition) String() string {
	return proto.EnumName(DeployPosition_name, int32(x))
}
func (DeployPosition) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{25} }

// 训练状态
type PrepareSoldierTrainStatus int32

const (
	PrepareSoldierTrainStatus_kPrepareSoldierTrainStatusNone    PrepareSoldierTrainStatus = 0
	PrepareSoldierTrainStatus_kPrepareSoldierTrainStatusWorking PrepareSoldierTrainStatus = 1
)

var PrepareSoldierTrainStatus_name = map[int32]string{
	0: "kPrepareSoldierTrainStatusNone",
	1: "kPrepareSoldierTrainStatusWorking",
}
var PrepareSoldierTrainStatus_value = map[string]int32{
	"kPrepareSoldierTrainStatusNone":    0,
	"kPrepareSoldierTrainStatusWorking": 1,
}

func (x PrepareSoldierTrainStatus) String() string {
	return proto.EnumName(PrepareSoldierTrainStatus_name, int32(x))
}
func (PrepareSoldierTrainStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{26} }

// 城墙状态
type WallStatus int32

const (
	WallStatus_kWallStatusNone   WallStatus = 0
	WallStatus_kWallStatusBattle WallStatus = 1
	WallStatus_kWallStatusRepair WallStatus = 2
)

var WallStatus_name = map[int32]string{
	0: "kWallStatusNone",
	1: "kWallStatusBattle",
	2: "kWallStatusRepair",
}
var WallStatus_value = map[string]int32{
	"kWallStatusNone":   0,
	"kWallStatusBattle": 1,
	"kWallStatusRepair": 2,
}

func (x WallStatus) String() string {
	return proto.EnumName(WallStatus_name, int32(x))
}
func (WallStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{27} }

// 城墙附属id
type WallAttachConfigId int32

const (
	WallAttachConfigId_kCityAttachNone     WallAttachConfigId = 0
	WallAttachConfigId_kCityAttachRepairId WallAttachConfigId = 10021
	WallAttachConfigId_kCityAttachCraftId  WallAttachConfigId = 10022
)

var WallAttachConfigId_name = map[int32]string{
	0:     "kCityAttachNone",
	10021: "kCityAttachRepairId",
	10022: "kCityAttachCraftId",
}
var WallAttachConfigId_value = map[string]int32{
	"kCityAttachNone":     0,
	"kCityAttachRepairId": 10021,
	"kCityAttachCraftId":  10022,
}

func (x WallAttachConfigId) String() string {
	return proto.EnumName(WallAttachConfigId_name, int32(x))
}
func (WallAttachConfigId) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{28} }

type NetAddress struct {
	Port uint32 `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
}

func (m *NetAddress) Reset()                    { *m = NetAddress{} }
func (m *NetAddress) String() string            { return proto.CompactTextString(m) }
func (*NetAddress) ProtoMessage()               {}
func (*NetAddress) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{0} }

func (m *NetAddress) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *NetAddress) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type ServerAddressInfo struct {
	ServerType uint32 `protobuf:"varint,1,opt,name=server_type,json=serverType" json:"server_type,omitempty"`
	KingdomId  uint32 `protobuf:"varint,3,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
	ServerId   uint32 `protobuf:"varint,4,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
}

func (m *ServerAddressInfo) Reset()                    { *m = ServerAddressInfo{} }
func (m *ServerAddressInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerAddressInfo) ProtoMessage()               {}
func (*ServerAddressInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{1} }

func (m *ServerAddressInfo) GetServerType() uint32 {
	if m != nil {
		return m.ServerType
	}
	return 0
}

func (m *ServerAddressInfo) GetKingdomId() uint32 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

func (m *ServerAddressInfo) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

// 击杀
type KillArmyCount struct {
	Rank  uint32 `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *KillArmyCount) Reset()                    { *m = KillArmyCount{} }
func (m *KillArmyCount) String() string            { return proto.CompactTextString(m) }
func (*KillArmyCount) ProtoMessage()               {}
func (*KillArmyCount) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{2} }

func (m *KillArmyCount) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *KillArmyCount) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type KillArmyCountInfo struct {
	KillCount []*KillArmyCount `protobuf:"bytes,1,rep,name=kill_count,json=killCount" json:"kill_count,omitempty"`
}

func (m *KillArmyCountInfo) Reset()                    { *m = KillArmyCountInfo{} }
func (m *KillArmyCountInfo) String() string            { return proto.CompactTextString(m) }
func (*KillArmyCountInfo) ProtoMessage()               {}
func (*KillArmyCountInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{3} }

func (m *KillArmyCountInfo) GetKillCount() []*KillArmyCount {
	if m != nil {
		return m.KillCount
	}
	return nil
}

// 战斗统计
type BattleStatistics struct {
	MaxPower   uint64 `protobuf:"varint,1,opt,name=max_power,json=maxPower" json:"max_power,omitempty"`
	BattleWin  uint64 `protobuf:"varint,2,opt,name=battle_win,json=battleWin" json:"battle_win,omitempty"`
	BattleFail uint64 `protobuf:"varint,3,opt,name=battle_fail,json=battleFail" json:"battle_fail,omitempty"`
	Death      uint64 `protobuf:"varint,4,opt,name=death" json:"death,omitempty"`
	ScoutCount uint64 `protobuf:"varint,5,opt,name=scout_count,json=scoutCount" json:"scout_count,omitempty"`
}

func (m *BattleStatistics) Reset()                    { *m = BattleStatistics{} }
func (m *BattleStatistics) String() string            { return proto.CompactTextString(m) }
func (*BattleStatistics) ProtoMessage()               {}
func (*BattleStatistics) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{4} }

func (m *BattleStatistics) GetMaxPower() uint64 {
	if m != nil {
		return m.MaxPower
	}
	return 0
}

func (m *BattleStatistics) GetBattleWin() uint64 {
	if m != nil {
		return m.BattleWin
	}
	return 0
}

func (m *BattleStatistics) GetBattleFail() uint64 {
	if m != nil {
		return m.BattleFail
	}
	return 0
}

func (m *BattleStatistics) GetDeath() uint64 {
	if m != nil {
		return m.Death
	}
	return 0
}

func (m *BattleStatistics) GetScoutCount() uint64 {
	if m != nil {
		return m.ScoutCount
	}
	return 0
}

// 成就墙数据
type AchievementFlagData struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SubId uint32 `protobuf:"varint,2,opt,name=sub_id,json=subId" json:"sub_id,omitempty"`
	Time  int64  `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
}

func (m *AchievementFlagData) Reset()                    { *m = AchievementFlagData{} }
func (m *AchievementFlagData) String() string            { return proto.CompactTextString(m) }
func (*AchievementFlagData) ProtoMessage()               {}
func (*AchievementFlagData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{5} }

func (m *AchievementFlagData) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AchievementFlagData) GetSubId() uint32 {
	if m != nil {
		return m.SubId
	}
	return 0
}

func (m *AchievementFlagData) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type PlayerLordInfo struct {
	PlayerId         uint64                 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Head             string                 `protobuf:"bytes,4,opt,name=head" json:"head,omitempty"`
	Power            uint64                 `protobuf:"varint,5,opt,name=power" json:"power,omitempty"`
	CollectionCount  uint64                 `protobuf:"varint,8,opt,name=collection_count,json=collectionCount" json:"collection_count,omitempty"`
	GuildId          uint64                 `protobuf:"varint,9,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName        string                 `protobuf:"bytes,10,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	GuildShortName   string                 `protobuf:"bytes,11,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	KillCount        uint64                 `protobuf:"varint,12,opt,name=kill_count,json=killCount" json:"kill_count,omitempty"`
	GuildIcon        uint32                 `protobuf:"varint,13,opt,name=guild_icon,json=guildIcon" json:"guild_icon,omitempty"`
	CampId           uint32                 `protobuf:"varint,14,opt,name=camp_id,json=campId" json:"camp_id,omitempty"`
	FlagData         []*AchievementFlagData `protobuf:"bytes,15,rep,name=flag_data,json=flagData" json:"flag_data,omitempty"`
	AchievementLevel int32                  `protobuf:"varint,16,opt,name=achievement_level,json=achievementLevel" json:"achievement_level,omitempty"`
	CastleLevel      uint32                 `protobuf:"varint,17,opt,name=castle_level,json=castleLevel" json:"castle_level,omitempty"`
	CarriageCount    uint64                 `protobuf:"varint,18,opt,name=carriage_count,json=carriageCount" json:"carriage_count,omitempty"`
	GuildHelpCount   uint64                 `protobuf:"varint,19,opt,name=guild_help_count,json=guildHelpCount" json:"guild_help_count,omitempty"`
}

func (m *PlayerLordInfo) Reset()                    { *m = PlayerLordInfo{} }
func (m *PlayerLordInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerLordInfo) ProtoMessage()               {}
func (*PlayerLordInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{6} }

func (m *PlayerLordInfo) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerLordInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerLordInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *PlayerLordInfo) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *PlayerLordInfo) GetCollectionCount() uint64 {
	if m != nil {
		return m.CollectionCount
	}
	return 0
}

func (m *PlayerLordInfo) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *PlayerLordInfo) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *PlayerLordInfo) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *PlayerLordInfo) GetKillCount() uint64 {
	if m != nil {
		return m.KillCount
	}
	return 0
}

func (m *PlayerLordInfo) GetGuildIcon() uint32 {
	if m != nil {
		return m.GuildIcon
	}
	return 0
}

func (m *PlayerLordInfo) GetCampId() uint32 {
	if m != nil {
		return m.CampId
	}
	return 0
}

func (m *PlayerLordInfo) GetFlagData() []*AchievementFlagData {
	if m != nil {
		return m.FlagData
	}
	return nil
}

func (m *PlayerLordInfo) GetAchievementLevel() int32 {
	if m != nil {
		return m.AchievementLevel
	}
	return 0
}

func (m *PlayerLordInfo) GetCastleLevel() uint32 {
	if m != nil {
		return m.CastleLevel
	}
	return 0
}

func (m *PlayerLordInfo) GetCarriageCount() uint64 {
	if m != nil {
		return m.CarriageCount
	}
	return 0
}

func (m *PlayerLordInfo) GetGuildHelpCount() uint64 {
	if m != nil {
		return m.GuildHelpCount
	}
	return 0
}

// 玩家基本信息（GM用）
type PlayerBaseInfo struct {
	PlayerId         uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	KingdomId        uint32 `protobuf:"varint,2,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
	DbId             uint32 `protobuf:"varint,3,opt,name=db_id,json=dbId" json:"db_id,omitempty"`
	Name             string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	CastleLevel      uint32 `protobuf:"varint,5,opt,name=castle_level,json=castleLevel" json:"castle_level,omitempty"`
	VipLevel         uint32 `protobuf:"varint,6,opt,name=vip_level,json=vipLevel" json:"vip_level,omitempty"`
	Emoney           uint64 `protobuf:"varint,7,opt,name=emoney" json:"emoney,omitempty"`
	Oil              uint64 `protobuf:"varint,8,opt,name=oil" json:"oil,omitempty"`
	Food             uint64 `protobuf:"varint,9,opt,name=food" json:"food,omitempty"`
	Wood             uint64 `protobuf:"varint,10,opt,name=wood" json:"wood,omitempty"`
	Steel            uint64 `protobuf:"varint,11,opt,name=steel" json:"steel,omitempty"`
	GuildId          uint64 `protobuf:"varint,12,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	RegTime          int64  `protobuf:"varint,13,opt,name=reg_time,json=regTime" json:"reg_time,omitempty"`
	EnterKingdomTime int64  `protobuf:"varint,14,opt,name=enter_kingdom_time,json=enterKingdomTime" json:"enter_kingdom_time,omitempty"`
	OnlineTime       int64  `protobuf:"varint,15,opt,name=online_time,json=onlineTime" json:"online_time,omitempty"`
}

func (m *PlayerBaseInfo) Reset()                    { *m = PlayerBaseInfo{} }
func (m *PlayerBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerBaseInfo) ProtoMessage()               {}
func (*PlayerBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{7} }

func (m *PlayerBaseInfo) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerBaseInfo) GetKingdomId() uint32 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

func (m *PlayerBaseInfo) GetDbId() uint32 {
	if m != nil {
		return m.DbId
	}
	return 0
}

func (m *PlayerBaseInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerBaseInfo) GetCastleLevel() uint32 {
	if m != nil {
		return m.CastleLevel
	}
	return 0
}

func (m *PlayerBaseInfo) GetVipLevel() uint32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *PlayerBaseInfo) GetEmoney() uint64 {
	if m != nil {
		return m.Emoney
	}
	return 0
}

func (m *PlayerBaseInfo) GetOil() uint64 {
	if m != nil {
		return m.Oil
	}
	return 0
}

func (m *PlayerBaseInfo) GetFood() uint64 {
	if m != nil {
		return m.Food
	}
	return 0
}

func (m *PlayerBaseInfo) GetWood() uint64 {
	if m != nil {
		return m.Wood
	}
	return 0
}

func (m *PlayerBaseInfo) GetSteel() uint64 {
	if m != nil {
		return m.Steel
	}
	return 0
}

func (m *PlayerBaseInfo) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *PlayerBaseInfo) GetRegTime() int64 {
	if m != nil {
		return m.RegTime
	}
	return 0
}

func (m *PlayerBaseInfo) GetEnterKingdomTime() int64 {
	if m != nil {
		return m.EnterKingdomTime
	}
	return 0
}

func (m *PlayerBaseInfo) GetOnlineTime() int64 {
	if m != nil {
		return m.OnlineTime
	}
	return 0
}

type Resource struct {
	ResType uint32 `protobuf:"varint,1,opt,name=res_type,json=resType" json:"res_type,omitempty"`
	SubType uint32 `protobuf:"varint,2,opt,name=sub_type,json=subType" json:"sub_type,omitempty"`
	Value   uint64 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{8} }

func (m *Resource) GetResType() uint32 {
	if m != nil {
		return m.ResType
	}
	return 0
}

func (m *Resource) GetSubType() uint32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *Resource) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type RewardData struct {
	Rewards []*Resource `protobuf:"bytes,1,rep,name=rewards" json:"rewards,omitempty"`
}

func (m *RewardData) Reset()                    { *m = RewardData{} }
func (m *RewardData) String() string            { return proto.CompactTextString(m) }
func (*RewardData) ProtoMessage()               {}
func (*RewardData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{9} }

func (m *RewardData) GetRewards() []*Resource {
	if m != nil {
		return m.Rewards
	}
	return nil
}

type ResourceSet struct {
	Res []*Resource `protobuf:"bytes,1,rep,name=res" json:"res,omitempty"`
}

func (m *ResourceSet) Reset()                    { *m = ResourceSet{} }
func (m *ResourceSet) String() string            { return proto.CompactTextString(m) }
func (*ResourceSet) ProtoMessage()               {}
func (*ResourceSet) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{10} }

func (m *ResourceSet) GetRes() []*Resource {
	if m != nil {
		return m.Res
	}
	return nil
}

type Vector2D struct {
	X int64 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y int64 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *Vector2D) Reset()                    { *m = Vector2D{} }
func (m *Vector2D) String() string            { return proto.CompactTextString(m) }
func (*Vector2D) ProtoMessage()               {}
func (*Vector2D) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{11} }

func (m *Vector2D) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Vector2D) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

// Buff信息
type BuffInfo struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Overlay uint32 `protobuf:"varint,2,opt,name=overlay" json:"overlay,omitempty"`
}

func (m *BuffInfo) Reset()                    { *m = BuffInfo{} }
func (m *BuffInfo) String() string            { return proto.CompactTextString(m) }
func (*BuffInfo) ProtoMessage()               {}
func (*BuffInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{12} }

func (m *BuffInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuffInfo) GetOverlay() uint32 {
	if m != nil {
		return m.Overlay
	}
	return 0
}

// Effect信息
type EffectInfo struct {
	EffectId   uint32 `protobuf:"varint,1,opt,name=effect_id,json=effectId" json:"effect_id,omitempty"`
	Value      int64  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	SourceType uint32 `protobuf:"varint,3,opt,name=source_type,json=sourceType" json:"source_type,omitempty"`
}

func (m *EffectInfo) Reset()                    { *m = EffectInfo{} }
func (m *EffectInfo) String() string            { return proto.CompactTextString(m) }
func (*EffectInfo) ProtoMessage()               {}
func (*EffectInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{13} }

func (m *EffectInfo) GetEffectId() uint32 {
	if m != nil {
		return m.EffectId
	}
	return 0
}

func (m *EffectInfo) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *EffectInfo) GetSourceType() uint32 {
	if m != nil {
		return m.SourceType
	}
	return 0
}

type StatusInfo struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EndTime int64  `protobuf:"varint,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *StatusInfo) Reset()                    { *m = StatusInfo{} }
func (m *StatusInfo) String() string            { return proto.CompactTextString(m) }
func (*StatusInfo) ProtoMessage()               {}
func (*StatusInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{14} }

func (m *StatusInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StatusInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type StatusData struct {
	Statuses []*StatusInfo `protobuf:"bytes,1,rep,name=statuses" json:"statuses,omitempty"`
}

func (m *StatusData) Reset()                    { *m = StatusData{} }
func (m *StatusData) String() string            { return proto.CompactTextString(m) }
func (*StatusData) ProtoMessage()               {}
func (*StatusData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{15} }

func (m *StatusData) GetStatuses() []*StatusInfo {
	if m != nil {
		return m.Statuses
	}
	return nil
}

// ////////////////////////////////////////////////////////////////////////
// /  物品模块 开始
// ////////////////////////////////////////////////////////////////////////
type ItemInfo struct {
	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Count  uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ItemInfo) Reset()                    { *m = ItemInfo{} }
func (m *ItemInfo) String() string            { return proto.CompactTextString(m) }
func (*ItemInfo) ProtoMessage()               {}
func (*ItemInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{16} }

func (m *ItemInfo) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ItemInfo) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type EquipmentInfo struct {
	Id          uint32       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EquipmentId uint32       `protobuf:"varint,2,opt,name=equipment_id,json=equipmentId" json:"equipment_id,omitempty"`
	Level       uint32       `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	HeroId      uint32       `protobuf:"varint,4,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Exp         uint64       `protobuf:"varint,5,opt,name=exp" json:"exp,omitempty"`
	SkillInfos  []*SkillInfo `protobuf:"bytes,6,rep,name=skill_infos,json=skillInfos" json:"skill_infos,omitempty"`
}

func (m *EquipmentInfo) Reset()                    { *m = EquipmentInfo{} }
func (m *EquipmentInfo) String() string            { return proto.CompactTextString(m) }
func (*EquipmentInfo) ProtoMessage()               {}
func (*EquipmentInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{17} }

func (m *EquipmentInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EquipmentInfo) GetEquipmentId() uint32 {
	if m != nil {
		return m.EquipmentId
	}
	return 0
}

func (m *EquipmentInfo) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *EquipmentInfo) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *EquipmentInfo) GetExp() uint64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *EquipmentInfo) GetSkillInfos() []*SkillInfo {
	if m != nil {
		return m.SkillInfos
	}
	return nil
}

type SkillInfo struct {
	SkillId uint32 `protobuf:"varint,1,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	SkillLv uint32 `protobuf:"varint,2,opt,name=skill_lv,json=skillLv" json:"skill_lv,omitempty"`
}

func (m *SkillInfo) Reset()                    { *m = SkillInfo{} }
func (m *SkillInfo) String() string            { return proto.CompactTextString(m) }
func (*SkillInfo) ProtoMessage()               {}
func (*SkillInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{18} }

func (m *SkillInfo) GetSkillId() uint32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *SkillInfo) GetSkillLv() uint32 {
	if m != nil {
		return m.SkillLv
	}
	return 0
}

type SkillInfoAny struct {
	SkillInfos []*SkillInfo `protobuf:"bytes,1,rep,name=skill_infos,json=skillInfos" json:"skill_infos,omitempty"`
}

func (m *SkillInfoAny) Reset()                    { *m = SkillInfoAny{} }
func (m *SkillInfoAny) String() string            { return proto.CompactTextString(m) }
func (*SkillInfoAny) ProtoMessage()               {}
func (*SkillInfoAny) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{19} }

func (m *SkillInfoAny) GetSkillInfos() []*SkillInfo {
	if m != nil {
		return m.SkillInfos
	}
	return nil
}

type HeroInfo struct {
	HeroId       uint32           `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	HeroLv       uint32           `protobuf:"varint,2,opt,name=hero_lv,json=heroLv" json:"hero_lv,omitempty"`
	Star         uint32           `protobuf:"varint,3,opt,name=star" json:"star,omitempty"`
	Skills       []*SkillInfo     `protobuf:"bytes,4,rep,name=skills" json:"skills,omitempty"`
	Exp          uint64           `protobuf:"varint,5,opt,name=exp" json:"exp,omitempty"`
	SmallStar    uint32           `protobuf:"varint,6,opt,name=small_star,json=smallStar" json:"small_star,omitempty"`
	StarExp      uint64           `protobuf:"varint,7,opt,name=star_exp,json=starExp" json:"star_exp,omitempty"`
	Kill         *HeroKillData    `protobuf:"bytes,8,opt,name=kill" json:"kill,omitempty"`
	CreateTime   uint64           `protobuf:"varint,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Point        uint32           `protobuf:"varint,10,opt,name=point" json:"point,omitempty"`
	HeroPoints   []uint32         `protobuf:"varint,11,rep,packed,name=hero_points,json=heroPoints" json:"hero_points,omitempty"`
	Equipment    []*EquipmentInfo `protobuf:"bytes,12,rep,name=equipment" json:"equipment,omitempty"`
	TalentBuffs  []uint32         `protobuf:"varint,13,rep,packed,name=talent_buffs,json=talentBuffs" json:"talent_buffs,omitempty"`
	TalentSkills []uint32         `protobuf:"varint,14,rep,packed,name=talent_skills,json=talentSkills" json:"talent_skills,omitempty"`
	SkillUpRange uint32           `protobuf:"varint,21,opt,name=skill_up_range,json=skillUpRange" json:"skill_up_range,omitempty"`
	SkillPoint   uint32           `protobuf:"varint,22,opt,name=skill_point,json=skillPoint" json:"skill_point,omitempty"`
	// tk新增功能
	StageLv      uint32 `protobuf:"varint,23,opt,name=stage_lv,json=stageLv" json:"stage_lv,omitempty"`
	SmallStageLv uint32 `protobuf:"varint,24,opt,name=small_stage_lv,json=smallStageLv" json:"small_stage_lv,omitempty"`
	Power        uint64 `protobuf:"varint,25,opt,name=power" json:"power,omitempty"`
	Defense      uint64 `protobuf:"varint,26,opt,name=defense" json:"defense,omitempty"`
	Life         uint64 `protobuf:"varint,27,opt,name=life" json:"life,omitempty"`
	ArmyNumber   uint32 `protobuf:"varint,28,opt,name=army_number,json=armyNumber" json:"army_number,omitempty"`
	ArmyAddition uint32 `protobuf:"varint,29,opt,name=army_addition,json=armyAddition" json:"army_addition,omitempty"`
	Load         uint32 `protobuf:"varint,30,opt,name=load" json:"load,omitempty"`
}

func (m *HeroInfo) Reset()                    { *m = HeroInfo{} }
func (m *HeroInfo) String() string            { return proto.CompactTextString(m) }
func (*HeroInfo) ProtoMessage()               {}
func (*HeroInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{20} }

func (m *HeroInfo) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *HeroInfo) GetHeroLv() uint32 {
	if m != nil {
		return m.HeroLv
	}
	return 0
}

func (m *HeroInfo) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *HeroInfo) GetSkills() []*SkillInfo {
	if m != nil {
		return m.Skills
	}
	return nil
}

func (m *HeroInfo) GetExp() uint64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *HeroInfo) GetSmallStar() uint32 {
	if m != nil {
		return m.SmallStar
	}
	return 0
}

func (m *HeroInfo) GetStarExp() uint64 {
	if m != nil {
		return m.StarExp
	}
	return 0
}

func (m *HeroInfo) GetKill() *HeroKillData {
	if m != nil {
		return m.Kill
	}
	return nil
}

func (m *HeroInfo) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *HeroInfo) GetPoint() uint32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *HeroInfo) GetHeroPoints() []uint32 {
	if m != nil {
		return m.HeroPoints
	}
	return nil
}

func (m *HeroInfo) GetEquipment() []*EquipmentInfo {
	if m != nil {
		return m.Equipment
	}
	return nil
}

func (m *HeroInfo) GetTalentBuffs() []uint32 {
	if m != nil {
		return m.TalentBuffs
	}
	return nil
}

func (m *HeroInfo) GetTalentSkills() []uint32 {
	if m != nil {
		return m.TalentSkills
	}
	return nil
}

func (m *HeroInfo) GetSkillUpRange() uint32 {
	if m != nil {
		return m.SkillUpRange
	}
	return 0
}

func (m *HeroInfo) GetSkillPoint() uint32 {
	if m != nil {
		return m.SkillPoint
	}
	return 0
}

func (m *HeroInfo) GetStageLv() uint32 {
	if m != nil {
		return m.StageLv
	}
	return 0
}

func (m *HeroInfo) GetSmallStageLv() uint32 {
	if m != nil {
		return m.SmallStageLv
	}
	return 0
}

func (m *HeroInfo) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *HeroInfo) GetDefense() uint64 {
	if m != nil {
		return m.Defense
	}
	return 0
}

func (m *HeroInfo) GetLife() uint64 {
	if m != nil {
		return m.Life
	}
	return 0
}

func (m *HeroInfo) GetArmyNumber() uint32 {
	if m != nil {
		return m.ArmyNumber
	}
	return 0
}

func (m *HeroInfo) GetArmyAddition() uint32 {
	if m != nil {
		return m.ArmyAddition
	}
	return 0
}

func (m *HeroInfo) GetLoad() uint32 {
	if m != nil {
		return m.Load
	}
	return 0
}

type HeroExpData struct {
	HeroId uint32 `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Exp    uint64 `protobuf:"varint,2,opt,name=exp" json:"exp,omitempty"`
}

func (m *HeroExpData) Reset()                    { *m = HeroExpData{} }
func (m *HeroExpData) String() string            { return proto.CompactTextString(m) }
func (*HeroExpData) ProtoMessage()               {}
func (*HeroExpData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{21} }

func (m *HeroExpData) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *HeroExpData) GetExp() uint64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

type HeroKillData struct {
	KillArmy uint64 `protobuf:"varint,1,opt,name=kill_army,json=killArmy" json:"kill_army,omitempty"`
	KillNpc  uint64 `protobuf:"varint,2,opt,name=kill_npc,json=killNpc" json:"kill_npc,omitempty"`
}

func (m *HeroKillData) Reset()                    { *m = HeroKillData{} }
func (m *HeroKillData) String() string            { return proto.CompactTextString(m) }
func (*HeroKillData) ProtoMessage()               {}
func (*HeroKillData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{22} }

func (m *HeroKillData) GetKillArmy() uint64 {
	if m != nil {
		return m.KillArmy
	}
	return 0
}

func (m *HeroKillData) GetKillNpc() uint64 {
	if m != nil {
		return m.KillNpc
	}
	return 0
}

type Presbyter struct {
	HeroId      uint32     `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	CurEnergy   uint32     `protobuf:"varint,2,opt,name=cur_energy,json=curEnergy" json:"cur_energy,omitempty"`
	SkillCd     int64      `protobuf:"varint,3,opt,name=skill_cd,json=skillCd" json:"skill_cd,omitempty"`
	DirectSkill *SkillInfo `protobuf:"bytes,4,opt,name=direct_skill,json=directSkill" json:"direct_skill,omitempty"`
}

func (m *Presbyter) Reset()                    { *m = Presbyter{} }
func (m *Presbyter) String() string            { return proto.CompactTextString(m) }
func (*Presbyter) ProtoMessage()               {}
func (*Presbyter) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{23} }

func (m *Presbyter) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Presbyter) GetCurEnergy() uint32 {
	if m != nil {
		return m.CurEnergy
	}
	return 0
}

func (m *Presbyter) GetSkillCd() int64 {
	if m != nil {
		return m.SkillCd
	}
	return 0
}

func (m *Presbyter) GetDirectSkill() *SkillInfo {
	if m != nil {
		return m.DirectSkill
	}
	return nil
}

type GlobalHeroPointData struct {
	Type  uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *GlobalHeroPointData) Reset()                    { *m = GlobalHeroPointData{} }
func (m *GlobalHeroPointData) String() string            { return proto.CompactTextString(m) }
func (*GlobalHeroPointData) ProtoMessage()               {}
func (*GlobalHeroPointData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{24} }

func (m *GlobalHeroPointData) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GlobalHeroPointData) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GlobalHeroPointDatas struct {
	HeroId uint32                 `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Data   []*GlobalHeroPointData `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (m *GlobalHeroPointDatas) Reset()                    { *m = GlobalHeroPointDatas{} }
func (m *GlobalHeroPointDatas) String() string            { return proto.CompactTextString(m) }
func (*GlobalHeroPointDatas) ProtoMessage()               {}
func (*GlobalHeroPointDatas) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{25} }

func (m *GlobalHeroPointDatas) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *GlobalHeroPointDatas) GetData() []*GlobalHeroPointData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ArmyInfo struct {
	ArmyId uint32 `protobuf:"varint,1,opt,name=army_id,json=armyId" json:"army_id,omitempty"`
	Count  uint64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ArmyInfo) Reset()                    { *m = ArmyInfo{} }
func (m *ArmyInfo) String() string            { return proto.CompactTextString(m) }
func (*ArmyInfo) ProtoMessage()               {}
func (*ArmyInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{26} }

func (m *ArmyInfo) GetArmyId() uint32 {
	if m != nil {
		return m.ArmyId
	}
	return 0
}

func (m *ArmyInfo) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ArmyInfoData struct {
	ArmyInfo []*ArmyInfo   `protobuf:"bytes,1,rep,name=army_info,json=armyInfo" json:"army_info,omitempty"`
	State    ArmyStateType `protobuf:"varint,2,opt,name=state,enum=protomsg.ArmyStateType" json:"state,omitempty"`
}

func (m *ArmyInfoData) Reset()                    { *m = ArmyInfoData{} }
func (m *ArmyInfoData) String() string            { return proto.CompactTextString(m) }
func (*ArmyInfoData) ProtoMessage()               {}
func (*ArmyInfoData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{27} }

func (m *ArmyInfoData) GetArmyInfo() []*ArmyInfo {
	if m != nil {
		return m.ArmyInfo
	}
	return nil
}

func (m *ArmyInfoData) GetState() ArmyStateType {
	if m != nil {
		return m.State
	}
	return ArmyStateType_kArmyNormal
}

// 训练队列
type TrainWorkInfo struct {
	ArmyId         uint32          `protobuf:"varint,1,opt,name=army_id,json=armyId" json:"army_id,omitempty"`
	Count          uint64          `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	StartTime      int64           `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64           `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	WorkStatus     TrainWorkStatus `protobuf:"varint,5,opt,name=work_status,json=workStatus,enum=protomsg.TrainWorkStatus" json:"work_status,omitempty"`
	OldArmyId      uint32          `protobuf:"varint,6,opt,name=old_army_id,json=oldArmyId" json:"old_army_id,omitempty"`
	BarrackId      uint32          `protobuf:"varint,7,opt,name=barrack_id,json=barrackId" json:"barrack_id,omitempty"`
	WorkTimeLength uint64          `protobuf:"varint,8,opt,name=work_time_length,json=workTimeLength" json:"work_time_length,omitempty"`
}

func (m *TrainWorkInfo) Reset()                    { *m = TrainWorkInfo{} }
func (m *TrainWorkInfo) String() string            { return proto.CompactTextString(m) }
func (*TrainWorkInfo) ProtoMessage()               {}
func (*TrainWorkInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{28} }

func (m *TrainWorkInfo) GetArmyId() uint32 {
	if m != nil {
		return m.ArmyId
	}
	return 0
}

func (m *TrainWorkInfo) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TrainWorkInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TrainWorkInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *TrainWorkInfo) GetWorkStatus() TrainWorkStatus {
	if m != nil {
		return m.WorkStatus
	}
	return TrainWorkStatus_kTrainWorkStatusNone
}

func (m *TrainWorkInfo) GetOldArmyId() uint32 {
	if m != nil {
		return m.OldArmyId
	}
	return 0
}

func (m *TrainWorkInfo) GetBarrackId() uint32 {
	if m != nil {
		return m.BarrackId
	}
	return 0
}

func (m *TrainWorkInfo) GetWorkTimeLength() uint64 {
	if m != nil {
		return m.WorkTimeLength
	}
	return 0
}

type BuildPoint struct {
	Count      uint64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	UpdateTime uint64 `protobuf:"varint,2,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (m *BuildPoint) Reset()                    { *m = BuildPoint{} }
func (m *BuildPoint) String() string            { return proto.CompactTextString(m) }
func (*BuildPoint) ProtoMessage()               {}
func (*BuildPoint) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{29} }

func (m *BuildPoint) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *BuildPoint) GetUpdateTime() uint64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type GuildBuildingData struct {
	BuildingStatus    MapBuildingStatus `protobuf:"varint,1,opt,name=building_status,json=buildingStatus,enum=protomsg.MapBuildingStatus" json:"building_status,omitempty"`
	GuildId           uint64            `protobuf:"varint,2,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	Active            MapBuildingActive `protobuf:"varint,3,opt,name=active,enum=protomsg.MapBuildingActive" json:"active,omitempty"`
	BuildBeginTime    uint64            `protobuf:"varint,4,opt,name=build_begin_time,json=buildBeginTime" json:"build_begin_time,omitempty"`
	BuildEndTime      uint64            `protobuf:"varint,5,opt,name=build_end_time,json=buildEndTime" json:"build_end_time,omitempty"`
	ConstructTime     uint64            `protobuf:"varint,7,opt,name=construct_time,json=constructTime" json:"construct_time,omitempty"`
	ConstructionValue int32             `protobuf:"varint,8,opt,name=construction_value,json=constructionValue" json:"construction_value,omitempty"`
	Hp                int32             `protobuf:"varint,9,opt,name=hp" json:"hp,omitempty"`
	LastOutfireTime   uint64            `protobuf:"varint,10,opt,name=last_outfire_time,json=lastOutfireTime" json:"last_outfire_time,omitempty"`
	Speed             uint32            `protobuf:"varint,11,opt,name=speed" json:"speed,omitempty"`
	MaxHp             int32             `protobuf:"varint,12,opt,name=max_hp,json=maxHp" json:"max_hp,omitempty"`
}

func (m *GuildBuildingData) Reset()                    { *m = GuildBuildingData{} }
func (m *GuildBuildingData) String() string            { return proto.CompactTextString(m) }
func (*GuildBuildingData) ProtoMessage()               {}
func (*GuildBuildingData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{30} }

func (m *GuildBuildingData) GetBuildingStatus() MapBuildingStatus {
	if m != nil {
		return m.BuildingStatus
	}
	return MapBuildingStatus_kMapBuildingStatusNone
}

func (m *GuildBuildingData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *GuildBuildingData) GetActive() MapBuildingActive {
	if m != nil {
		return m.Active
	}
	return MapBuildingActive_kMapBuildingActiveNone
}

func (m *GuildBuildingData) GetBuildBeginTime() uint64 {
	if m != nil {
		return m.BuildBeginTime
	}
	return 0
}

func (m *GuildBuildingData) GetBuildEndTime() uint64 {
	if m != nil {
		return m.BuildEndTime
	}
	return 0
}

func (m *GuildBuildingData) GetConstructTime() uint64 {
	if m != nil {
		return m.ConstructTime
	}
	return 0
}

func (m *GuildBuildingData) GetConstructionValue() int32 {
	if m != nil {
		return m.ConstructionValue
	}
	return 0
}

func (m *GuildBuildingData) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *GuildBuildingData) GetLastOutfireTime() uint64 {
	if m != nil {
		return m.LastOutfireTime
	}
	return 0
}

func (m *GuildBuildingData) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *GuildBuildingData) GetMaxHp() int32 {
	if m != nil {
		return m.MaxHp
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////
// /  器械模块 开始
// ////////////////////////////////////////////////////////////////////////
type InstumentReserchWorkInfo struct {
	InstumentId    uint32 `protobuf:"varint,1,opt,name=instument_id,json=instumentId" json:"instument_id,omitempty"`
	StartTime      int64  `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64  `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	WorkTimeLength uint64 `protobuf:"varint,5,opt,name=work_time_length,json=workTimeLength" json:"work_time_length,omitempty"`
}

func (m *InstumentReserchWorkInfo) Reset()                    { *m = InstumentReserchWorkInfo{} }
func (m *InstumentReserchWorkInfo) String() string            { return proto.CompactTextString(m) }
func (*InstumentReserchWorkInfo) ProtoMessage()               {}
func (*InstumentReserchWorkInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{31} }

func (m *InstumentReserchWorkInfo) GetInstumentId() uint32 {
	if m != nil {
		return m.InstumentId
	}
	return 0
}

func (m *InstumentReserchWorkInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *InstumentReserchWorkInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *InstumentReserchWorkInfo) GetWorkTimeLength() uint64 {
	if m != nil {
		return m.WorkTimeLength
	}
	return 0
}

type InstumentInfoData struct {
	InstumentId uint32 `protobuf:"varint,1,opt,name=instument_id,json=instumentId" json:"instument_id,omitempty"`
	Level       uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (m *InstumentInfoData) Reset()                    { *m = InstumentInfoData{} }
func (m *InstumentInfoData) String() string            { return proto.CompactTextString(m) }
func (*InstumentInfoData) ProtoMessage()               {}
func (*InstumentInfoData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{32} }

func (m *InstumentInfoData) GetInstumentId() uint32 {
	if m != nil {
		return m.InstumentId
	}
	return 0
}

func (m *InstumentInfoData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type ReserchWorkInfo struct {
	TechId         uint32 `protobuf:"varint,1,opt,name=tech_id,json=techId" json:"tech_id,omitempty"`
	StartTime      int64  `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64  `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	WorkTimeLength uint64 `protobuf:"varint,5,opt,name=work_time_length,json=workTimeLength" json:"work_time_length,omitempty"`
}

func (m *ReserchWorkInfo) Reset()                    { *m = ReserchWorkInfo{} }
func (m *ReserchWorkInfo) String() string            { return proto.CompactTextString(m) }
func (*ReserchWorkInfo) ProtoMessage()               {}
func (*ReserchWorkInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{33} }

func (m *ReserchWorkInfo) GetTechId() uint32 {
	if m != nil {
		return m.TechId
	}
	return 0
}

func (m *ReserchWorkInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ReserchWorkInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ReserchWorkInfo) GetWorkTimeLength() uint64 {
	if m != nil {
		return m.WorkTimeLength
	}
	return 0
}

type TechInfoData struct {
	TechId         uint32 `protobuf:"varint,1,opt,name=tech_id,json=techId" json:"tech_id,omitempty"`
	Level          uint32 `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	LastSwitchTime uint64 `protobuf:"varint,4,opt,name=last_switch_time,json=lastSwitchTime" json:"last_switch_time,omitempty"`
}

func (m *TechInfoData) Reset()                    { *m = TechInfoData{} }
func (m *TechInfoData) String() string            { return proto.CompactTextString(m) }
func (*TechInfoData) ProtoMessage()               {}
func (*TechInfoData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{34} }

func (m *TechInfoData) GetTechId() uint32 {
	if m != nil {
		return m.TechId
	}
	return 0
}

func (m *TechInfoData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *TechInfoData) GetLastSwitchTime() uint64 {
	if m != nil {
		return m.LastSwitchTime
	}
	return 0
}

type CollectInfo struct {
	Type           CurrencyType `protobuf:"varint,1,opt,name=type,enum=protomsg.CurrencyType" json:"type,omitempty"`
	LastChangeTime int64        `protobuf:"varint,3,opt,name=last_change_time,json=lastChangeTime" json:"last_change_time,omitempty"`
	Store          uint64       `protobuf:"varint,4,opt,name=store" json:"store,omitempty"`
	Speed          uint64       `protobuf:"varint,5,opt,name=speed" json:"speed,omitempty"`
	MaxCollection  uint64       `protobuf:"varint,7,opt,name=max_collection,json=maxCollection" json:"max_collection,omitempty"`
	BuildingId     uint32       `protobuf:"varint,8,opt,name=building_id,json=buildingId" json:"building_id,omitempty"`
}

func (m *CollectInfo) Reset()                    { *m = CollectInfo{} }
func (m *CollectInfo) String() string            { return proto.CompactTextString(m) }
func (*CollectInfo) ProtoMessage()               {}
func (*CollectInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{35} }

func (m *CollectInfo) GetType() CurrencyType {
	if m != nil {
		return m.Type
	}
	return CurrencyType_kCurrencyTypeNone
}

func (m *CollectInfo) GetLastChangeTime() int64 {
	if m != nil {
		return m.LastChangeTime
	}
	return 0
}

func (m *CollectInfo) GetStore() uint64 {
	if m != nil {
		return m.Store
	}
	return 0
}

func (m *CollectInfo) GetSpeed() uint64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *CollectInfo) GetMaxCollection() uint64 {
	if m != nil {
		return m.MaxCollection
	}
	return 0
}

func (m *CollectInfo) GetBuildingId() uint32 {
	if m != nil {
		return m.BuildingId
	}
	return 0
}

type NormalRecruitData struct {
	Count           uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	NextRecuritTime int64  `protobuf:"varint,2,opt,name=next_recurit_time,json=nextRecuritTime" json:"next_recurit_time,omitempty"`
}

func (m *NormalRecruitData) Reset()                    { *m = NormalRecruitData{} }
func (m *NormalRecruitData) String() string            { return proto.CompactTextString(m) }
func (*NormalRecruitData) ProtoMessage()               {}
func (*NormalRecruitData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{36} }

func (m *NormalRecruitData) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *NormalRecruitData) GetNextRecuritTime() int64 {
	if m != nil {
		return m.NextRecuritTime
	}
	return 0
}

type AdvancedRecruitData struct {
	Count           uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	NextRecuritTime int64  `protobuf:"varint,2,opt,name=next_recurit_time,json=nextRecuritTime" json:"next_recurit_time,omitempty"`
	Stage           uint64 `protobuf:"varint,3,opt,name=stage" json:"stage,omitempty"`
}

func (m *AdvancedRecruitData) Reset()                    { *m = AdvancedRecruitData{} }
func (m *AdvancedRecruitData) String() string            { return proto.CompactTextString(m) }
func (*AdvancedRecruitData) ProtoMessage()               {}
func (*AdvancedRecruitData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{37} }

func (m *AdvancedRecruitData) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *AdvancedRecruitData) GetNextRecuritTime() int64 {
	if m != nil {
		return m.NextRecuritTime
	}
	return 0
}

func (m *AdvancedRecruitData) GetStage() uint64 {
	if m != nil {
		return m.Stage
	}
	return 0
}

type EpisodeData struct {
	GuideType uint32 `protobuf:"varint,1,opt,name=guide_type,json=guideType" json:"guide_type,omitempty"`
	GuideId   uint32 `protobuf:"varint,2,opt,name=guide_id,json=guideId" json:"guide_id,omitempty"`
}

func (m *EpisodeData) Reset()                    { *m = EpisodeData{} }
func (m *EpisodeData) String() string            { return proto.CompactTextString(m) }
func (*EpisodeData) ProtoMessage()               {}
func (*EpisodeData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{38} }

func (m *EpisodeData) GetGuideType() uint32 {
	if m != nil {
		return m.GuideType
	}
	return 0
}

func (m *EpisodeData) GetGuideId() uint32 {
	if m != nil {
		return m.GuideId
	}
	return 0
}

type EpisodeDatas struct {
	Episodes []*EpisodeData `protobuf:"bytes,1,rep,name=episodes" json:"episodes,omitempty"`
}

func (m *EpisodeDatas) Reset()                    { *m = EpisodeDatas{} }
func (m *EpisodeDatas) String() string            { return proto.CompactTextString(m) }
func (*EpisodeDatas) ProtoMessage()               {}
func (*EpisodeDatas) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{39} }

func (m *EpisodeDatas) GetEpisodes() []*EpisodeData {
	if m != nil {
		return m.Episodes
	}
	return nil
}

// 治疗队列
type CureWorkInfo struct {
	ArmyInfo       []*ArmyInfo `protobuf:"bytes,1,rep,name=army_info,json=armyInfo" json:"army_info,omitempty"`
	StartTime      int64       `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64       `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	WorkTimeLength uint64      `protobuf:"varint,5,opt,name=work_time_length,json=workTimeLength" json:"work_time_length,omitempty"`
}

func (m *CureWorkInfo) Reset()                    { *m = CureWorkInfo{} }
func (m *CureWorkInfo) String() string            { return proto.CompactTextString(m) }
func (*CureWorkInfo) ProtoMessage()               {}
func (*CureWorkInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{40} }

func (m *CureWorkInfo) GetArmyInfo() []*ArmyInfo {
	if m != nil {
		return m.ArmyInfo
	}
	return nil
}

func (m *CureWorkInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CureWorkInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *CureWorkInfo) GetWorkTimeLength() uint64 {
	if m != nil {
		return m.WorkTimeLength
	}
	return 0
}

type HospitalStatisticsData struct {
	NoCureDeath int64 `protobuf:"varint,1,opt,name=no_cure_death,json=noCureDeath" json:"no_cure_death,omitempty"`
	Wounded     int64 `protobuf:"varint,2,opt,name=wounded" json:"wounded,omitempty"`
}

func (m *HospitalStatisticsData) Reset()                    { *m = HospitalStatisticsData{} }
func (m *HospitalStatisticsData) String() string            { return proto.CompactTextString(m) }
func (*HospitalStatisticsData) ProtoMessage()               {}
func (*HospitalStatisticsData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{41} }

func (m *HospitalStatisticsData) GetNoCureDeath() int64 {
	if m != nil {
		return m.NoCureDeath
	}
	return 0
}

func (m *HospitalStatisticsData) GetWounded() int64 {
	if m != nil {
		return m.Wounded
	}
	return 0
}

// 头衔
type PlayerKingdomTitleInfo struct {
	PlayerId       uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Title          uint32 `protobuf:"varint,2,opt,name=title" json:"title,omitempty"`
	GuildId        uint64 `protobuf:"varint,3,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	PlayerName     string `protobuf:"bytes,4,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	GuildShortName string `protobuf:"bytes,5,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	Head           string `protobuf:"bytes,6,opt,name=head" json:"head,omitempty"`
}

func (m *PlayerKingdomTitleInfo) Reset()                    { *m = PlayerKingdomTitleInfo{} }
func (m *PlayerKingdomTitleInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerKingdomTitleInfo) ProtoMessage()               {}
func (*PlayerKingdomTitleInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{42} }

func (m *PlayerKingdomTitleInfo) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerKingdomTitleInfo) GetTitle() uint32 {
	if m != nil {
		return m.Title
	}
	return 0
}

func (m *PlayerKingdomTitleInfo) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *PlayerKingdomTitleInfo) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *PlayerKingdomTitleInfo) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *PlayerKingdomTitleInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

// 头衔列表
type PlayerKingdomTitleInfos struct {
	Infos []*PlayerKingdomTitleInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
}

func (m *PlayerKingdomTitleInfos) Reset()                    { *m = PlayerKingdomTitleInfos{} }
func (m *PlayerKingdomTitleInfos) String() string            { return proto.CompactTextString(m) }
func (*PlayerKingdomTitleInfos) ProtoMessage()               {}
func (*PlayerKingdomTitleInfos) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{43} }

func (m *PlayerKingdomTitleInfos) GetInfos() []*PlayerKingdomTitleInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

// 礼物
type KingGiftInfo struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *KingGiftInfo) Reset()                    { *m = KingGiftInfo{} }
func (m *KingGiftInfo) String() string            { return proto.CompactTextString(m) }
func (*KingGiftInfo) ProtoMessage()               {}
func (*KingGiftInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{44} }

func (m *KingGiftInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KingGiftInfo) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// 礼物列表
type KingGiftInfos struct {
	Infos []*KingGiftInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
}

func (m *KingGiftInfos) Reset()                    { *m = KingGiftInfos{} }
func (m *KingGiftInfos) String() string            { return proto.CompactTextString(m) }
func (*KingGiftInfos) ProtoMessage()               {}
func (*KingGiftInfos) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{45} }

func (m *KingGiftInfos) GetInfos() []*KingGiftInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

// 礼物记录
type KingGiftRecord struct {
	PlayerId       uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Id             uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	RecordTime     int64  `protobuf:"varint,3,opt,name=record_time,json=recordTime" json:"record_time,omitempty"`
	PlayerName     string `protobuf:"bytes,4,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	GuildShortName string `protobuf:"bytes,5,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	Head           string `protobuf:"bytes,6,opt,name=head" json:"head,omitempty"`
}

func (m *KingGiftRecord) Reset()                    { *m = KingGiftRecord{} }
func (m *KingGiftRecord) String() string            { return proto.CompactTextString(m) }
func (*KingGiftRecord) ProtoMessage()               {}
func (*KingGiftRecord) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{46} }

func (m *KingGiftRecord) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *KingGiftRecord) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KingGiftRecord) GetRecordTime() int64 {
	if m != nil {
		return m.RecordTime
	}
	return 0
}

func (m *KingGiftRecord) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *KingGiftRecord) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *KingGiftRecord) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

type KingGiftRecords struct {
	Records []*KingGiftRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *KingGiftRecords) Reset()                    { *m = KingGiftRecords{} }
func (m *KingGiftRecords) String() string            { return proto.CompactTextString(m) }
func (*KingGiftRecords) ProtoMessage()               {}
func (*KingGiftRecords) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{47} }

func (m *KingGiftRecords) GetRecords() []*KingGiftRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

// 王国基础信息
type KingdomBasicInfo struct {
	Bulletin         string `protobuf:"bytes,1,opt,name=bulletin" json:"bulletin,omitempty"`
	BattlePowerLimit uint64 `protobuf:"varint,2,opt,name=battle_power_limit,json=battlePowerLimit" json:"battle_power_limit,omitempty"`
}

func (m *KingdomBasicInfo) Reset()                    { *m = KingdomBasicInfo{} }
func (m *KingdomBasicInfo) String() string            { return proto.CompactTextString(m) }
func (*KingdomBasicInfo) ProtoMessage()               {}
func (*KingdomBasicInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{48} }

func (m *KingdomBasicInfo) GetBulletin() string {
	if m != nil {
		return m.Bulletin
	}
	return ""
}

func (m *KingdomBasicInfo) GetBattlePowerLimit() uint64 {
	if m != nil {
		return m.BattlePowerLimit
	}
	return 0
}

// 历任国王
type KingRecord struct {
	PlayerId       uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Index          uint32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	RecordTime     int64  `protobuf:"varint,3,opt,name=record_time,json=recordTime" json:"record_time,omitempty"`
	PlayerName     string `protobuf:"bytes,4,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	GuildShortName string `protobuf:"bytes,5,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	Head           string `protobuf:"bytes,6,opt,name=head" json:"head,omitempty"`
}

func (m *KingRecord) Reset()                    { *m = KingRecord{} }
func (m *KingRecord) String() string            { return proto.CompactTextString(m) }
func (*KingRecord) ProtoMessage()               {}
func (*KingRecord) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{49} }

func (m *KingRecord) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *KingRecord) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *KingRecord) GetRecordTime() int64 {
	if m != nil {
		return m.RecordTime
	}
	return 0
}

func (m *KingRecord) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *KingRecord) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *KingRecord) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

type KingsHistory struct {
	Records []*KingRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *KingsHistory) Reset()                    { *m = KingsHistory{} }
func (m *KingsHistory) String() string            { return proto.CompactTextString(m) }
func (*KingsHistory) ProtoMessage()               {}
func (*KingsHistory) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{50} }

func (m *KingsHistory) GetRecords() []*KingRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

// 国王的个人信息
type KingPlayerBaseData struct {
	KingPlayerId uint64 `protobuf:"varint,1,opt,name=king_player_id,json=kingPlayerId" json:"king_player_id,omitempty"`
	KingGuildId  uint64 `protobuf:"varint,2,opt,name=king_guild_id,json=kingGuildId" json:"king_guild_id,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	KingdomId    uint64 `protobuf:"varint,4,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
}

func (m *KingPlayerBaseData) Reset()                    { *m = KingPlayerBaseData{} }
func (m *KingPlayerBaseData) String() string            { return proto.CompactTextString(m) }
func (*KingPlayerBaseData) ProtoMessage()               {}
func (*KingPlayerBaseData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{51} }

func (m *KingPlayerBaseData) GetKingPlayerId() uint64 {
	if m != nil {
		return m.KingPlayerId
	}
	return 0
}

func (m *KingPlayerBaseData) GetKingGuildId() uint64 {
	if m != nil {
		return m.KingGuildId
	}
	return 0
}

func (m *KingPlayerBaseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KingPlayerBaseData) GetKingdomId() uint64 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

type KingManagerInfo struct {
	BasicInfo   *KingdomBasicInfo        `protobuf:"bytes,1,opt,name=basic_info,json=basicInfo" json:"basic_info,omitempty"`
	Title       *PlayerKingdomTitleInfos `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Gift        *KingGiftInfos           `protobuf:"bytes,3,opt,name=gift" json:"gift,omitempty"`
	GiftHistory *KingGiftRecords         `protobuf:"bytes,4,opt,name=gift_history,json=giftHistory" json:"gift_history,omitempty"`
	KingHistory *KingsHistory            `protobuf:"bytes,5,opt,name=king_history,json=kingHistory" json:"king_history,omitempty"`
}

func (m *KingManagerInfo) Reset()                    { *m = KingManagerInfo{} }
func (m *KingManagerInfo) String() string            { return proto.CompactTextString(m) }
func (*KingManagerInfo) ProtoMessage()               {}
func (*KingManagerInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{52} }

func (m *KingManagerInfo) GetBasicInfo() *KingdomBasicInfo {
	if m != nil {
		return m.BasicInfo
	}
	return nil
}

func (m *KingManagerInfo) GetTitle() *PlayerKingdomTitleInfos {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *KingManagerInfo) GetGift() *KingGiftInfos {
	if m != nil {
		return m.Gift
	}
	return nil
}

func (m *KingManagerInfo) GetGiftHistory() *KingGiftRecords {
	if m != nil {
		return m.GiftHistory
	}
	return nil
}

func (m *KingManagerInfo) GetKingHistory() *KingsHistory {
	if m != nil {
		return m.KingHistory
	}
	return nil
}

// 王国buff
type KingdomBuffEffectInfo struct {
	KingdomId uint32        `protobuf:"varint,1,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
	Effects   []*EffectInfo `protobuf:"bytes,2,rep,name=effects" json:"effects,omitempty"`
}

func (m *KingdomBuffEffectInfo) Reset()                    { *m = KingdomBuffEffectInfo{} }
func (m *KingdomBuffEffectInfo) String() string            { return proto.CompactTextString(m) }
func (*KingdomBuffEffectInfo) ProtoMessage()               {}
func (*KingdomBuffEffectInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{53} }

func (m *KingdomBuffEffectInfo) GetKingdomId() uint32 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

func (m *KingdomBuffEffectInfo) GetEffects() []*EffectInfo {
	if m != nil {
		return m.Effects
	}
	return nil
}

// 激活记录信息
type KingdomBuffActiveRecord struct {
	ActiveTime     uint64 `protobuf:"varint,1,opt,name=active_time,json=activeTime" json:"active_time,omitempty"`
	GuildShortName string `protobuf:"bytes,2,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
	PlayerName     string `protobuf:"bytes,3,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	BuffId         uint32 `protobuf:"varint,4,opt,name=buff_id,json=buffId" json:"buff_id,omitempty"`
}

func (m *KingdomBuffActiveRecord) Reset()                    { *m = KingdomBuffActiveRecord{} }
func (m *KingdomBuffActiveRecord) String() string            { return proto.CompactTextString(m) }
func (*KingdomBuffActiveRecord) ProtoMessage()               {}
func (*KingdomBuffActiveRecord) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{54} }

func (m *KingdomBuffActiveRecord) GetActiveTime() uint64 {
	if m != nil {
		return m.ActiveTime
	}
	return 0
}

func (m *KingdomBuffActiveRecord) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

func (m *KingdomBuffActiveRecord) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *KingdomBuffActiveRecord) GetBuffId() uint32 {
	if m != nil {
		return m.BuffId
	}
	return 0
}

type CarriageData struct {
	Resource   *ResourceSet `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
	Tax        uint32       `protobuf:"varint,2,opt,name=tax" json:"tax,omitempty"`
	MarchIndex uint32       `protobuf:"varint,3,opt,name=march_index,json=marchIndex" json:"march_index,omitempty"`
	EntityId   uint64       `protobuf:"varint,4,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	MarchSpeed uint64       `protobuf:"varint,5,opt,name=march_speed,json=marchSpeed" json:"march_speed,omitempty"`
}

func (m *CarriageData) Reset()                    { *m = CarriageData{} }
func (m *CarriageData) String() string            { return proto.CompactTextString(m) }
func (*CarriageData) ProtoMessage()               {}
func (*CarriageData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{55} }

func (m *CarriageData) GetResource() *ResourceSet {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *CarriageData) GetTax() uint32 {
	if m != nil {
		return m.Tax
	}
	return 0
}

func (m *CarriageData) GetMarchIndex() uint32 {
	if m != nil {
		return m.MarchIndex
	}
	return 0
}

func (m *CarriageData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *CarriageData) GetMarchSpeed() uint64 {
	if m != nil {
		return m.MarchSpeed
	}
	return 0
}

// 王国基本信息
type KingdomInfoBase struct {
	KingdomId      uint32   `protobuf:"varint,1,opt,name=kingdom_id,json=kingdomId" json:"kingdom_id,omitempty"`
	OriginTime     int64    `protobuf:"varint,2,opt,name=origin_time,json=originTime" json:"origin_time,omitempty"`
	NewFlag        bool     `protobuf:"varint,3,opt,name=new_flag,json=newFlag" json:"new_flag,omitempty"`
	SupportNations []string `protobuf:"bytes,4,rep,name=support_nations,json=supportNations" json:"support_nations,omitempty"`
}

func (m *KingdomInfoBase) Reset()                    { *m = KingdomInfoBase{} }
func (m *KingdomInfoBase) String() string            { return proto.CompactTextString(m) }
func (*KingdomInfoBase) ProtoMessage()               {}
func (*KingdomInfoBase) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{56} }

func (m *KingdomInfoBase) GetKingdomId() uint32 {
	if m != nil {
		return m.KingdomId
	}
	return 0
}

func (m *KingdomInfoBase) GetOriginTime() int64 {
	if m != nil {
		return m.OriginTime
	}
	return 0
}

func (m *KingdomInfoBase) GetNewFlag() bool {
	if m != nil {
		return m.NewFlag
	}
	return false
}

func (m *KingdomInfoBase) GetSupportNations() []string {
	if m != nil {
		return m.SupportNations
	}
	return nil
}

// 王国扩展信息
type KingdomInfoExtend struct {
	Status          KingdomStatus `protobuf:"varint,1,opt,name=status,enum=protomsg.KingdomStatus" json:"status,omitempty"`
	HeadFlag        bool          `protobuf:"varint,2,opt,name=head_flag,json=headFlag" json:"head_flag,omitempty"`
	KingdomFightCap uint64        `protobuf:"varint,3,opt,name=kingdom_fight_cap,json=kingdomFightCap" json:"kingdom_fight_cap,omitempty"`
	MigrateFightCap uint64        `protobuf:"varint,4,opt,name=migrate_fight_cap,json=migrateFightCap" json:"migrate_fight_cap,omitempty"`
}

func (m *KingdomInfoExtend) Reset()                    { *m = KingdomInfoExtend{} }
func (m *KingdomInfoExtend) String() string            { return proto.CompactTextString(m) }
func (*KingdomInfoExtend) ProtoMessage()               {}
func (*KingdomInfoExtend) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{57} }

func (m *KingdomInfoExtend) GetStatus() KingdomStatus {
	if m != nil {
		return m.Status
	}
	return KingdomStatus_kKingdomStatusNull
}

func (m *KingdomInfoExtend) GetHeadFlag() bool {
	if m != nil {
		return m.HeadFlag
	}
	return false
}

func (m *KingdomInfoExtend) GetKingdomFightCap() uint64 {
	if m != nil {
		return m.KingdomFightCap
	}
	return 0
}

func (m *KingdomInfoExtend) GetMigrateFightCap() uint64 {
	if m != nil {
		return m.MigrateFightCap
	}
	return 0
}

type GeneralInfo struct {
	GeneralId uint32         `protobuf:"varint,1,opt,name=general_id,json=generalId" json:"general_id,omitempty"`
	Position  DeployPosition `protobuf:"varint,2,opt,name=position,enum=protomsg.DeployPosition" json:"position,omitempty"`
}

func (m *GeneralInfo) Reset()                    { *m = GeneralInfo{} }
func (m *GeneralInfo) String() string            { return proto.CompactTextString(m) }
func (*GeneralInfo) ProtoMessage()               {}
func (*GeneralInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{58} }

func (m *GeneralInfo) GetGeneralId() uint32 {
	if m != nil {
		return m.GeneralId
	}
	return 0
}

func (m *GeneralInfo) GetPosition() DeployPosition {
	if m != nil {
		return m.Position
	}
	return DeployPosition_kChiefGeneral
}

type DeployInfo struct {
	Id         uint32         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Generals   []*GeneralInfo `protobuf:"bytes,2,rep,name=generals" json:"generals,omitempty"`
	SiegeId    uint32         `protobuf:"varint,3,opt,name=siege_id,json=siegeId" json:"siege_id,omitempty"`
	Troops     uint32         `protobuf:"varint,4,opt,name=troops" json:"troops,omitempty"`
	IsAutoFill bool           `protobuf:"varint,5,opt,name=is_auto_fill,json=isAutoFill" json:"is_auto_fill,omitempty"`
	IsMarch    bool           `protobuf:"varint,6,opt,name=is_march,json=isMarch" json:"is_march,omitempty"`
	Power      int64          `protobuf:"varint,7,opt,name=power" json:"power,omitempty"`
}

func (m *DeployInfo) Reset()                    { *m = DeployInfo{} }
func (m *DeployInfo) String() string            { return proto.CompactTextString(m) }
func (*DeployInfo) ProtoMessage()               {}
func (*DeployInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{59} }

func (m *DeployInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeployInfo) GetGenerals() []*GeneralInfo {
	if m != nil {
		return m.Generals
	}
	return nil
}

func (m *DeployInfo) GetSiegeId() uint32 {
	if m != nil {
		return m.SiegeId
	}
	return 0
}

func (m *DeployInfo) GetTroops() uint32 {
	if m != nil {
		return m.Troops
	}
	return 0
}

func (m *DeployInfo) GetIsAutoFill() bool {
	if m != nil {
		return m.IsAutoFill
	}
	return false
}

func (m *DeployInfo) GetIsMarch() bool {
	if m != nil {
		return m.IsMarch
	}
	return false
}

func (m *DeployInfo) GetPower() int64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type DeployUpdateTroop struct {
	Id        uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	TroopsOld uint32 `protobuf:"varint,2,opt,name=troops_old,json=troopsOld" json:"troops_old,omitempty"`
	TroopsNew uint32 `protobuf:"varint,3,opt,name=troops_new,json=troopsNew" json:"troops_new,omitempty"`
}

func (m *DeployUpdateTroop) Reset()                    { *m = DeployUpdateTroop{} }
func (m *DeployUpdateTroop) String() string            { return proto.CompactTextString(m) }
func (*DeployUpdateTroop) ProtoMessage()               {}
func (*DeployUpdateTroop) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{60} }

func (m *DeployUpdateTroop) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeployUpdateTroop) GetTroopsOld() uint32 {
	if m != nil {
		return m.TroopsOld
	}
	return 0
}

func (m *DeployUpdateTroop) GetTroopsNew() uint32 {
	if m != nil {
		return m.TroopsNew
	}
	return 0
}

// 预备兵基本信息
type PrepareSoldierBaseInfo struct {
	Count       uint64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	BattleCount uint64 `protobuf:"varint,2,opt,name=battle_count,json=battleCount" json:"battle_count,omitempty"`
}

func (m *PrepareSoldierBaseInfo) Reset()                    { *m = PrepareSoldierBaseInfo{} }
func (m *PrepareSoldierBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*PrepareSoldierBaseInfo) ProtoMessage()               {}
func (*PrepareSoldierBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{61} }

func (m *PrepareSoldierBaseInfo) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PrepareSoldierBaseInfo) GetBattleCount() uint64 {
	if m != nil {
		return m.BattleCount
	}
	return 0
}

// 训练队列
type PrepareSoldierTrainWorkInfo struct {
	Count      uint64                    `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	StartTime  int64                     `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime    int64                     `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	WorkStatus PrepareSoldierTrainStatus `protobuf:"varint,5,opt,name=work_status,json=workStatus,enum=protomsg.PrepareSoldierTrainStatus" json:"work_status,omitempty"`
}

func (m *PrepareSoldierTrainWorkInfo) Reset()                    { *m = PrepareSoldierTrainWorkInfo{} }
func (m *PrepareSoldierTrainWorkInfo) String() string            { return proto.CompactTextString(m) }
func (*PrepareSoldierTrainWorkInfo) ProtoMessage()               {}
func (*PrepareSoldierTrainWorkInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{62} }

func (m *PrepareSoldierTrainWorkInfo) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PrepareSoldierTrainWorkInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PrepareSoldierTrainWorkInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PrepareSoldierTrainWorkInfo) GetWorkStatus() PrepareSoldierTrainStatus {
	if m != nil {
		return m.WorkStatus
	}
	return PrepareSoldierTrainStatus_kPrepareSoldierTrainStatusNone
}

// 治疗队列
type PrepareCureWorkInfo struct {
	Count          uint64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	StartTime      int64  `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        int64  `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	WorkTimeLength uint64 `protobuf:"varint,5,opt,name=work_time_length,json=workTimeLength" json:"work_time_length,omitempty"`
}

func (m *PrepareCureWorkInfo) Reset()                    { *m = PrepareCureWorkInfo{} }
func (m *PrepareCureWorkInfo) String() string            { return proto.CompactTextString(m) }
func (*PrepareCureWorkInfo) ProtoMessage()               {}
func (*PrepareCureWorkInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{63} }

func (m *PrepareCureWorkInfo) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PrepareCureWorkInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PrepareCureWorkInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PrepareCureWorkInfo) GetWorkTimeLength() uint64 {
	if m != nil {
		return m.WorkTimeLength
	}
	return 0
}

type SeekTalentData struct {
	Id           uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	NextTime     int64  `protobuf:"varint,2,opt,name=next_time,json=nextTime" json:"next_time,omitempty"`
	RecruitCount uint32 `protobuf:"varint,3,opt,name=recruit_count,json=recruitCount" json:"recruit_count,omitempty"`
	EventId      uint32 `protobuf:"varint,4,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	BeginTime    int64  `protobuf:"varint,5,opt,name=begin_time,json=beginTime" json:"begin_time,omitempty"`
	EndTime      int64  `protobuf:"varint,6,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *SeekTalentData) Reset()                    { *m = SeekTalentData{} }
func (m *SeekTalentData) String() string            { return proto.CompactTextString(m) }
func (*SeekTalentData) ProtoMessage()               {}
func (*SeekTalentData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{64} }

func (m *SeekTalentData) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SeekTalentData) GetNextTime() int64 {
	if m != nil {
		return m.NextTime
	}
	return 0
}

func (m *SeekTalentData) GetRecruitCount() uint32 {
	if m != nil {
		return m.RecruitCount
	}
	return 0
}

func (m *SeekTalentData) GetEventId() uint32 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *SeekTalentData) GetBeginTime() int64 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *SeekTalentData) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type PluginDeployData struct {
}

func (m *PluginDeployData) Reset()                    { *m = PluginDeployData{} }
func (m *PluginDeployData) String() string            { return proto.CompactTextString(m) }
func (*PluginDeployData) ProtoMessage()               {}
func (*PluginDeployData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{65} }

// 分解的碎片信息
type BreakDebrisData struct {
	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Number uint32 `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
}

func (m *BreakDebrisData) Reset()                    { *m = BreakDebrisData{} }
func (m *BreakDebrisData) String() string            { return proto.CompactTextString(m) }
func (*BreakDebrisData) ProtoMessage()               {}
func (*BreakDebrisData) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{66} }

func (m *BreakDebrisData) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *BreakDebrisData) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type WallAttachInfo struct {
	AttachId  uint32 `protobuf:"varint,1,opt,name=attach_id,json=attachId" json:"attach_id,omitempty"`
	Level     uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *WallAttachInfo) Reset()                    { *m = WallAttachInfo{} }
func (m *WallAttachInfo) String() string            { return proto.CompactTextString(m) }
func (*WallAttachInfo) ProtoMessage()               {}
func (*WallAttachInfo) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{67} }

func (m *WallAttachInfo) GetAttachId() uint32 {
	if m != nil {
		return m.AttachId
	}
	return 0
}

func (m *WallAttachInfo) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *WallAttachInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *WallAttachInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func init() {
	proto.RegisterType((*NetAddress)(nil), "protomsg.NetAddress")
	proto.RegisterType((*ServerAddressInfo)(nil), "protomsg.ServerAddressInfo")
	proto.RegisterType((*KillArmyCount)(nil), "protomsg.KillArmyCount")
	proto.RegisterType((*KillArmyCountInfo)(nil), "protomsg.KillArmyCountInfo")
	proto.RegisterType((*BattleStatistics)(nil), "protomsg.BattleStatistics")
	proto.RegisterType((*AchievementFlagData)(nil), "protomsg.AchievementFlagData")
	proto.RegisterType((*PlayerLordInfo)(nil), "protomsg.PlayerLordInfo")
	proto.RegisterType((*PlayerBaseInfo)(nil), "protomsg.PlayerBaseInfo")
	proto.RegisterType((*Resource)(nil), "protomsg.Resource")
	proto.RegisterType((*RewardData)(nil), "protomsg.RewardData")
	proto.RegisterType((*ResourceSet)(nil), "protomsg.ResourceSet")
	proto.RegisterType((*Vector2D)(nil), "protomsg.vector2d")
	proto.RegisterType((*BuffInfo)(nil), "protomsg.BuffInfo")
	proto.RegisterType((*EffectInfo)(nil), "protomsg.EffectInfo")
	proto.RegisterType((*StatusInfo)(nil), "protomsg.StatusInfo")
	proto.RegisterType((*StatusData)(nil), "protomsg.StatusData")
	proto.RegisterType((*ItemInfo)(nil), "protomsg.ItemInfo")
	proto.RegisterType((*EquipmentInfo)(nil), "protomsg.EquipmentInfo")
	proto.RegisterType((*SkillInfo)(nil), "protomsg.SkillInfo")
	proto.RegisterType((*SkillInfoAny)(nil), "protomsg.SkillInfoAny")
	proto.RegisterType((*HeroInfo)(nil), "protomsg.HeroInfo")
	proto.RegisterType((*HeroExpData)(nil), "protomsg.HeroExpData")
	proto.RegisterType((*HeroKillData)(nil), "protomsg.HeroKillData")
	proto.RegisterType((*Presbyter)(nil), "protomsg.Presbyter")
	proto.RegisterType((*GlobalHeroPointData)(nil), "protomsg.GlobalHeroPointData")
	proto.RegisterType((*GlobalHeroPointDatas)(nil), "protomsg.GlobalHeroPointDatas")
	proto.RegisterType((*ArmyInfo)(nil), "protomsg.ArmyInfo")
	proto.RegisterType((*ArmyInfoData)(nil), "protomsg.ArmyInfoData")
	proto.RegisterType((*TrainWorkInfo)(nil), "protomsg.TrainWorkInfo")
	proto.RegisterType((*BuildPoint)(nil), "protomsg.BuildPoint")
	proto.RegisterType((*GuildBuildingData)(nil), "protomsg.GuildBuildingData")
	proto.RegisterType((*InstumentReserchWorkInfo)(nil), "protomsg.InstumentReserchWorkInfo")
	proto.RegisterType((*InstumentInfoData)(nil), "protomsg.InstumentInfoData")
	proto.RegisterType((*ReserchWorkInfo)(nil), "protomsg.ReserchWorkInfo")
	proto.RegisterType((*TechInfoData)(nil), "protomsg.TechInfoData")
	proto.RegisterType((*CollectInfo)(nil), "protomsg.CollectInfo")
	proto.RegisterType((*NormalRecruitData)(nil), "protomsg.NormalRecruitData")
	proto.RegisterType((*AdvancedRecruitData)(nil), "protomsg.AdvancedRecruitData")
	proto.RegisterType((*EpisodeData)(nil), "protomsg.EpisodeData")
	proto.RegisterType((*EpisodeDatas)(nil), "protomsg.EpisodeDatas")
	proto.RegisterType((*CureWorkInfo)(nil), "protomsg.CureWorkInfo")
	proto.RegisterType((*HospitalStatisticsData)(nil), "protomsg.HospitalStatisticsData")
	proto.RegisterType((*PlayerKingdomTitleInfo)(nil), "protomsg.PlayerKingdomTitleInfo")
	proto.RegisterType((*PlayerKingdomTitleInfos)(nil), "protomsg.PlayerKingdomTitleInfos")
	proto.RegisterType((*KingGiftInfo)(nil), "protomsg.KingGiftInfo")
	proto.RegisterType((*KingGiftInfos)(nil), "protomsg.KingGiftInfos")
	proto.RegisterType((*KingGiftRecord)(nil), "protomsg.KingGiftRecord")
	proto.RegisterType((*KingGiftRecords)(nil), "protomsg.KingGiftRecords")
	proto.RegisterType((*KingdomBasicInfo)(nil), "protomsg.KingdomBasicInfo")
	proto.RegisterType((*KingRecord)(nil), "protomsg.KingRecord")
	proto.RegisterType((*KingsHistory)(nil), "protomsg.KingsHistory")
	proto.RegisterType((*KingPlayerBaseData)(nil), "protomsg.KingPlayerBaseData")
	proto.RegisterType((*KingManagerInfo)(nil), "protomsg.KingManagerInfo")
	proto.RegisterType((*KingdomBuffEffectInfo)(nil), "protomsg.KingdomBuffEffectInfo")
	proto.RegisterType((*KingdomBuffActiveRecord)(nil), "protomsg.KingdomBuffActiveRecord")
	proto.RegisterType((*CarriageData)(nil), "protomsg.CarriageData")
	proto.RegisterType((*KingdomInfoBase)(nil), "protomsg.KingdomInfoBase")
	proto.RegisterType((*KingdomInfoExtend)(nil), "protomsg.KingdomInfoExtend")
	proto.RegisterType((*GeneralInfo)(nil), "protomsg.GeneralInfo")
	proto.RegisterType((*DeployInfo)(nil), "protomsg.DeployInfo")
	proto.RegisterType((*DeployUpdateTroop)(nil), "protomsg.DeployUpdateTroop")
	proto.RegisterType((*PrepareSoldierBaseInfo)(nil), "protomsg.PrepareSoldierBaseInfo")
	proto.RegisterType((*PrepareSoldierTrainWorkInfo)(nil), "protomsg.PrepareSoldierTrainWorkInfo")
	proto.RegisterType((*PrepareCureWorkInfo)(nil), "protomsg.PrepareCureWorkInfo")
	proto.RegisterType((*SeekTalentData)(nil), "protomsg.SeekTalentData")
	proto.RegisterType((*PluginDeployData)(nil), "protomsg.PluginDeployData")
	proto.RegisterType((*BreakDebrisData)(nil), "protomsg.BreakDebrisData")
	proto.RegisterType((*WallAttachInfo)(nil), "protomsg.WallAttachInfo")
	proto.RegisterEnum("protomsg.CurrencyType", CurrencyType_name, CurrencyType_value)
	proto.RegisterEnum("protomsg.GuildCurrencyType", GuildCurrencyType_name, GuildCurrencyType_value)
	proto.RegisterEnum("protomsg.CityAttrType", CityAttrType_name, CityAttrType_value)
	proto.RegisterEnum("protomsg.PlayerAttributeType", PlayerAttributeType_name, PlayerAttributeType_value)
	proto.RegisterEnum("protomsg.PlayerPropertyNoticeType", PlayerPropertyNoticeType_name, PlayerPropertyNoticeType_value)
	proto.RegisterEnum("protomsg.LanguageType", LanguageType_name, LanguageType_value)
	proto.RegisterEnum("protomsg.SourceBuffType", SourceBuffType_name, SourceBuffType_value)
	proto.RegisterEnum("protomsg.PlayerExtendAttribute", PlayerExtendAttribute_name, PlayerExtendAttribute_value)
	proto.RegisterEnum("protomsg.BattleType", BattleType_name, BattleType_value)
	proto.RegisterEnum("protomsg.NewPlayerProtectType", NewPlayerProtectType_name, NewPlayerProtectType_value)
	proto.RegisterEnum("protomsg.RefinedConsume", RefinedConsume_name, RefinedConsume_value)
	proto.RegisterEnum("protomsg.EquipmentType", EquipmentType_name, EquipmentType_value)
	proto.RegisterEnum("protomsg.HeroType", HeroType_name, HeroType_value)
	proto.RegisterEnum("protomsg.HeroStateType", HeroStateType_name, HeroStateType_value)
	proto.RegisterEnum("protomsg.HeroAttributes", HeroAttributes_name, HeroAttributes_value)
	proto.RegisterEnum("protomsg.HeroPointsType", HeroPointsType_name, HeroPointsType_value)
	proto.RegisterEnum("protomsg.HeroQualityType", HeroQualityType_name, HeroQualityType_value)
	proto.RegisterEnum("protomsg.ArmyStateType", ArmyStateType_name, ArmyStateType_value)
	proto.RegisterEnum("protomsg.TrainWorkStatus", TrainWorkStatus_name, TrainWorkStatus_value)
	proto.RegisterEnum("protomsg.GemConversionType", GemConversionType_name, GemConversionType_value)
	proto.RegisterEnum("protomsg.BattleVictoryType", BattleVictoryType_name, BattleVictoryType_value)
	proto.RegisterEnum("protomsg.MapBuildingStatus", MapBuildingStatus_name, MapBuildingStatus_value)
	proto.RegisterEnum("protomsg.MapBuildingActive", MapBuildingActive_name, MapBuildingActive_value)
	proto.RegisterEnum("protomsg.KingdomTitle", KingdomTitle_name, KingdomTitle_value)
	proto.RegisterEnum("protomsg.KingdomStatus", KingdomStatus_name, KingdomStatus_value)
	proto.RegisterEnum("protomsg.DeployPosition", DeployPosition_name, DeployPosition_value)
	proto.RegisterEnum("protomsg.PrepareSoldierTrainStatus", PrepareSoldierTrainStatus_name, PrepareSoldierTrainStatus_value)
	proto.RegisterEnum("protomsg.WallStatus", WallStatus_name, WallStatus_value)
	proto.RegisterEnum("protomsg.WallAttachConfigId", WallAttachConfigId_name, WallAttachConfigId_value)
}

func init() { proto.RegisterFile("msg_common.proto", fileDescriptor35) }

var fileDescriptor35 = []byte{
	// 7647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x7c, 0x69, 0x70, 0x24, 0xc9,
	0x75, 0x1e, 0xab, 0x1b, 0x40, 0x37, 0x5e, 0xe3, 0x48, 0xd4, 0x1c, 0x68, 0xcc, 0xec, 0xec, 0xcc,
	0xf4, 0xee, 0x92, 0xcb, 0xde, 0xe5, 0x72, 0x67, 0x76, 0x67, 0x29, 0xd2, 0xb2, 0x18, 0xb8, 0x01,
	0x2f, 0x06, 0x0b, 0x36, 0xc0, 0x19, 0xff, 0x90, 0xa3, 0x9d, 0xa8, 0xca, 0x6e, 0x54, 0xa0, 0xba,
	0xaa, 0x5d, 0x55, 0x8d, 0x01, 0xc2, 0xe1, 0x08, 0x51, 0x94, 0x49, 0x49, 0xb6, 0x29, 0xee, 0x0e,
	0x77, 0xad, 0x18, 0x42, 0x92, 0x75, 0xd1, 0x92, 0x25, 0x51, 0x18, 0x1e, 0xd2, 0x52, 0x16, 0x25,
	0x3b, 0xc2, 0xb2, 0x2d, 0x59, 0xa2, 0x6c, 0x39, 0x1c, 0xbe, 0xaf, 0xf5, 0x25, 0x0e, 0x25, 0x59,
	0xa2, 0xb8, 0x24, 0x7d, 0x8d, 0x1d, 0xf9, 0x32, 0xb3, 0x2a, 0xab, 0xba, 0x1a, 0x80, 0x19, 0x34,
	0xfd, 0x0b, 0x95, 0xef, 0x7d, 0x99, 0xf9, 0xde, 0xcb, 0x97, 0x2f, 0x5f, 0x1e, 0x68, 0x20, 0x9d,
	0xb0, 0xdd, 0xb4, 0xfc, 0x4e, 0xc7, 0xf7, 0x9e, 0xe9, 0x06, 0x7e, 0xe4, 0x9b, 0x65, 0xfc, 0xd3,
	0x09, 0xdb, 0xb5, 0x67, 0x01, 0xd6, 0x59, 0x34, 0x6b, 0xdb, 0x01, 0x0b, 0x43, 0xd3, 0x84, 0xa1,
	0xae, 0x1f, 0x44, 0x55, 0xe3, 0x8a, 0xf1, 0xe4, 0x78, 0x03, 0xbf, 0xcd, 0x09, 0x28, 0x38, 0xdd,
	0x6a, 0xe1, 0x8a, 0xf1, 0xe4, 0x68, 0xa3, 0xe0, 0x74, 0x6b, 0x5d, 0x98, 0xda, 0x64, 0xc1, 0x1e,
	0x0b, 0x64, 0xa5, 0x55, 0xaf, 0xe5, 0x9b, 0x97, 0xa1, 0x12, 0x22, 0xb1, 0x19, 0x1d, 0x74, 0x99,
	0xac, 0x0f, 0x82, 0xb4, 0x75, 0xd0, 0x65, 0xe6, 0x25, 0x80, 0x5d, 0xc7, 0x6b, 0xdb, 0x7e, 0xa7,
	0xe9, 0xd8, 0xd5, 0x22, 0xf2, 0x47, 0x25, 0x65, 0xd5, 0x36, 0x2f, 0xc2, 0xa8, 0xac, 0xef, 0xd8,
	0xd5, 0x21, 0xe4, 0x96, 0x05, 0x61, 0xd5, 0xae, 0xbd, 0x1b, 0xc6, 0x5f, 0x74, 0x5c, 0x77, 0x36,
	0xe8, 0x1c, 0xcc, 0xfb, 0x3d, 0x2f, 0xe2, 0x62, 0x06, 0xd4, 0xdb, 0x55, 0x62, 0xf2, 0x6f, 0xf3,
	0x2c, 0x0c, 0x5b, 0x9c, 0x89, 0x92, 0x0e, 0x35, 0x44, 0xa1, 0xf6, 0x22, 0x4c, 0xa5, 0xaa, 0xa2,
	0xb0, 0x2f, 0x70, 0x59, 0x5c, 0xb7, 0x29, 0xf0, 0xc6, 0x95, 0xe2, 0x93, 0x95, 0xeb, 0xd3, 0xcf,
	0x28, 0x93, 0x3c, 0x93, 0xaa, 0xc0, 0x85, 0x74, 0x5d, 0xfc, 0xac, 0x7d, 0xc2, 0x00, 0x32, 0x47,
	0xa3, 0xc8, 0x65, 0x9b, 0x11, 0x8d, 0x9c, 0x30, 0x72, 0xac, 0x90, 0x4b, 0xde, 0xa1, 0xfb, 0xcd,
	0xae, 0x7f, 0x87, 0x05, 0x28, 0xd0, 0x50, 0xa3, 0xdc, 0xa1, 0xfb, 0x1b, 0xbc, 0xcc, 0xb5, 0xde,
	0xc6, 0x0a, 0xcd, 0x3b, 0x8e, 0x27, 0x25, 0x1b, 0x15, 0x94, 0xdb, 0x8e, 0xc7, 0xad, 0x26, 0xd9,
	0x2d, 0xea, 0xb8, 0x68, 0x95, 0xa1, 0x86, 0xac, 0xb1, 0x44, 0x1d, 0x97, 0x2b, 0x65, 0x33, 0x1a,
	0xed, 0xa0, 0x49, 0x86, 0x1a, 0xa2, 0x80, 0xc6, 0xb6, 0xfc, 0x5e, 0x24, 0x15, 0x18, 0x16, 0xd5,
	0x90, 0x24, 0x04, 0xdd, 0x80, 0x33, 0xb3, 0xd6, 0x8e, 0xc3, 0xf6, 0x58, 0x87, 0x79, 0xd1, 0x92,
	0x4b, 0xdb, 0x0b, 0x34, 0xa2, 0x38, 0x92, 0xb6, 0x34, 0x5a, 0xc1, 0xb1, 0xcd, 0x73, 0x30, 0x12,
	0xf6, 0xb6, 0xb9, 0xc5, 0x0b, 0x48, 0x1b, 0x0e, 0x7b, 0xdb, 0xab, 0x36, 0xb7, 0x6e, 0xe4, 0x74,
	0x18, 0x8a, 0x53, 0x6c, 0xe0, 0x77, 0xed, 0x93, 0x43, 0x30, 0xb1, 0xe1, 0xd2, 0x03, 0x16, 0xac,
	0xf9, 0x81, 0x8d, 0x56, 0xbc, 0x08, 0xa3, 0x5d, 0xa4, 0x34, 0x65, 0xa3, 0x43, 0x8d, 0xb2, 0x20,
	0x88, 0x36, 0x3c, 0xda, 0x61, 0xd2, 0x6d, 0xf0, 0x9b, 0xd3, 0x76, 0x18, 0x15, 0xc3, 0x3b, 0xda,
	0xc0, 0x6f, 0xae, 0xa0, 0xb0, 0x9c, 0x50, 0x42, 0x14, 0xcc, 0xb7, 0x03, 0xb1, 0x7c, 0xd7, 0x65,
	0x56, 0xe4, 0xf8, 0x9e, 0xd4, 0xb2, 0x8c, 0x80, 0xc9, 0x84, 0x2e, 0x5c, 0x61, 0x06, 0xca, 0xed,
	0x9e, 0xe3, 0xda, 0x5c, 0x88, 0x51, 0x84, 0x94, 0xb0, 0xbc, 0x6a, 0x73, 0xe3, 0x0b, 0x16, 0x4a,
	0x02, 0xd8, 0xeb, 0x28, 0x52, 0xd6, 0xb9, 0x38, 0x4f, 0x02, 0x11, 0xec, 0x70, 0xc7, 0x0f, 0x22,
	0x01, 0xaa, 0x20, 0x68, 0x02, 0xe9, 0x9b, 0x9c, 0x8c, 0xc8, 0x4b, 0x29, 0x7f, 0x19, 0x13, 0xa3,
	0x18, 0xbb, 0x45, 0xd2, 0x8f, 0x63, 0xf9, 0x5e, 0x75, 0x5c, 0xb8, 0xb6, 0x10, 0xc2, 0xf2, 0x3d,
	0x73, 0x1a, 0x4a, 0x16, 0xed, 0x74, 0xb9, 0x80, 0x13, 0xc8, 0x1b, 0xe1, 0xc5, 0x55, 0xdb, 0x7c,
	0x0f, 0x8c, 0xb6, 0x5c, 0xda, 0x6e, 0xda, 0x34, 0xa2, 0xd5, 0x49, 0xf4, 0xc2, 0x4b, 0x89, 0x17,
	0xe6, 0x0c, 0x60, 0xa3, 0xdc, 0x52, 0x43, 0xf9, 0x14, 0x4c, 0xd1, 0x04, 0xd0, 0x74, 0xd9, 0x1e,
	0x73, 0xab, 0xe4, 0x8a, 0xf1, 0xe4, 0x70, 0x83, 0x68, 0x8c, 0x35, 0x4e, 0x37, 0xaf, 0xc2, 0x98,
	0x45, 0x43, 0xee, 0x66, 0x02, 0x37, 0x85, 0x62, 0x54, 0x04, 0x4d, 0x40, 0x9e, 0x80, 0x09, 0x8b,
	0x06, 0x81, 0x43, 0xdb, 0x4c, 0xaa, 0x69, 0xa2, 0x9a, 0xe3, 0x8a, 0x2a, 0x54, 0x8d, 0x6d, 0xb6,
	0xc3, 0xdc, 0xae, 0x04, 0x9e, 0x41, 0xa0, 0xb0, 0xd9, 0x0a, 0x73, 0xbb, 0xc2, 0x05, 0x7f, 0xac,
	0xa8, 0x1c, 0x66, 0x8e, 0x86, 0xec, 0x64, 0x87, 0x49, 0xc7, 0x87, 0x42, 0x36, 0x3e, 0x9c, 0x81,
	0x61, 0x7b, 0x3b, 0x89, 0x1c, 0x43, 0xf6, 0xb6, 0xe6, 0x64, 0x43, 0x9a, 0x93, 0x65, 0x75, 0x1d,
	0xee, 0xd7, 0xf5, 0x22, 0x8c, 0xee, 0x39, 0x5d, 0xc9, 0x1f, 0x11, 0xb1, 0x66, 0xcf, 0xe9, 0x0a,
	0xe6, 0x79, 0x18, 0x61, 0x1d, 0xdf, 0x63, 0x07, 0xd5, 0x12, 0x4a, 0x28, 0x4b, 0x26, 0x81, 0xa2,
	0xef, 0xb8, 0xd2, 0x0b, 0xf9, 0x27, 0xef, 0xbd, 0xe5, 0xfb, 0xca, 0xeb, 0xf0, 0x9b, 0xd3, 0xee,
	0x70, 0x1a, 0x08, 0x1a, 0xff, 0xe6, 0x2e, 0x1e, 0x46, 0x8c, 0xb9, 0xe8, 0x5c, 0x43, 0x0d, 0x51,
	0x48, 0xf9, 0xed, 0x58, 0xda, 0x6f, 0x67, 0xa0, 0x1c, 0xb0, 0x76, 0x13, 0xe7, 0xe0, 0x38, 0xce,
	0xc1, 0x52, 0xc0, 0xda, 0x5b, 0x4e, 0x87, 0x99, 0x4f, 0x83, 0xc9, 0xbc, 0x88, 0x05, 0x4d, 0x65,
	0x2b, 0x04, 0x4d, 0x20, 0x88, 0x20, 0xe7, 0x45, 0xc1, 0x40, 0xf4, 0x65, 0xa8, 0xf8, 0x9e, 0xeb,
	0x78, 0x4c, 0xc0, 0x26, 0x11, 0x06, 0x82, 0xc4, 0x01, 0xb5, 0x5b, 0x50, 0x6e, 0xb0, 0xd0, 0xef,
	0x05, 0x16, 0x13, 0xbd, 0x86, 0x7a, 0xf8, 0x2e, 0x05, 0x2c, 0xc4, 0xd8, 0x3d, 0x03, 0x65, 0x1e,
	0x27, 0x90, 0x25, 0x46, 0xa6, 0x14, 0xf6, 0xb6, 0x91, 0x75, 0x16, 0x86, 0xf7, 0xa8, 0xdb, 0x63,
	0x32, 0x76, 0x89, 0x42, 0xed, 0x3d, 0x00, 0x0d, 0x76, 0x87, 0x06, 0x36, 0xfa, 0xea, 0xd3, 0x50,
	0x0a, 0xb0, 0x14, 0xca, 0x58, 0x6b, 0x26, 0x5e, 0xae, 0xba, 0x6f, 0x28, 0x48, 0xed, 0x39, 0xa8,
	0x28, 0xe2, 0x26, 0x8b, 0xcc, 0xc7, 0xa1, 0x18, 0xb0, 0xe3, 0x2a, 0x72, 0x76, 0xed, 0xad, 0x50,
	0xde, 0x63, 0x56, 0xe4, 0x07, 0xd7, 0x6d, 0x73, 0x0c, 0x8c, 0x7d, 0xd4, 0xa0, 0xd8, 0x30, 0xf6,
	0x79, 0xe9, 0x00, 0x85, 0x2e, 0x36, 0x8c, 0x83, 0xda, 0xf3, 0x50, 0x9e, 0xeb, 0xb5, 0x5a, 0xe8,
	0x8e, 0xd9, 0x68, 0x58, 0x85, 0x92, 0xbf, 0xc7, 0x02, 0x97, 0x1e, 0x28, 0x25, 0x65, 0xb1, 0xf6,
	0x67, 0x01, 0x16, 0x5b, 0x2d, 0x66, 0x45, 0xca, 0x8d, 0x19, 0x96, 0x9a, 0x71, 0xf5, 0xb2, 0x20,
	0xac, 0xda, 0x89, 0x3d, 0x44, 0x97, 0xa2, 0x80, 0x01, 0x1b, 0xa5, 0x15, 0x36, 0x2c, 0xca, 0xd5,
	0x11, 0x49, 0xdc, 0x8c, 0xb5, 0x77, 0x01, 0xf0, 0x25, 0xa5, 0x17, 0xe6, 0x4a, 0x36, 0x03, 0x65,
	0xe6, 0xd9, 0x62, 0x10, 0x45, 0xbb, 0x25, 0xe6, 0xd9, 0x38, 0x82, 0xdf, 0xa1, 0x2a, 0xa2, 0xa5,
	0x9f, 0x85, 0x72, 0x88, 0xa5, 0xd8, 0x62, 0x67, 0x13, 0x8b, 0x25, 0x1d, 0x34, 0x62, 0x54, 0xed,
	0xdd, 0x50, 0x5e, 0x8d, 0x58, 0x07, 0xbb, 0x9d, 0x86, 0x92, 0x13, 0xb1, 0x4e, 0xa2, 0xd6, 0x08,
	0x2f, 0x0a, 0xa5, 0x92, 0xa5, 0x75, 0x5c, 0x2d, 0xad, 0x9f, 0x33, 0x60, 0x7c, 0xf1, 0xcf, 0xf5,
	0x9c, 0x2e, 0x0f, 0x34, 0xb9, 0x72, 0x5f, 0x85, 0x31, 0xa6, 0x00, 0xc9, 0xac, 0xae, 0xc4, 0x34,
	0xd1, 0xb4, 0x98, 0x87, 0xc2, 0x26, 0xa2, 0xc0, 0x25, 0xd9, 0x61, 0x81, 0x9f, 0xe4, 0x02, 0x23,
	0xbc, 0xb8, 0x6a, 0xf3, 0x59, 0xc8, 0xf6, 0xbb, 0x72, 0xb1, 0xe0, 0x9f, 0xe6, 0xf3, 0x50, 0x09,
	0x31, 0x38, 0x3b, 0x5e, 0xcb, 0x0f, 0xab, 0x23, 0xa8, 0xf5, 0x19, 0x4d, 0x6b, 0xce, 0x44, 0xa5,
	0x21, 0x54, 0x9f, 0x61, 0x6d, 0x16, 0x46, 0x63, 0x06, 0xba, 0xb7, 0x68, 0x42, 0x09, 0x5f, 0x12,
	0x50, 0x3b, 0x61, 0xb9, 0x7b, 0xb1, 0xe7, 0xf3, 0xf2, 0xda, 0x5e, 0x6d, 0x01, 0xc6, 0xe2, 0x26,
	0x66, 0xbd, 0x83, 0xac, 0x20, 0xc6, 0xe9, 0x04, 0xf9, 0xf2, 0x30, 0x94, 0x57, 0xb8, 0x6e, 0x72,
	0x00, 0x94, 0xda, 0x46, 0x4a, 0x6d, 0xc5, 0x88, 0xa5, 0x40, 0xc6, 0xda, 0x1e, 0x8f, 0x37, 0x61,
	0x44, 0x03, 0x15, 0x15, 0xf9, 0xb7, 0xf9, 0x14, 0x8c, 0x60, 0x07, 0x61, 0x75, 0x68, 0xb0, 0x0c,
	0x12, 0x92, 0x63, 0xd0, 0x4b, 0x00, 0x61, 0x87, 0xba, 0x6e, 0x13, 0x1b, 0x16, 0xe1, 0x71, 0x14,
	0x29, 0x9b, 0xbc, 0xf5, 0x19, 0x74, 0xb1, 0xa0, 0xc9, 0x6b, 0x89, 0x08, 0x59, 0xe2, 0xe5, 0xc5,
	0xfd, 0xae, 0x59, 0x87, 0x21, 0xde, 0x28, 0xc6, 0xc8, 0xca, 0xf5, 0xf3, 0x49, 0xb7, 0x5c, 0x41,
	0x9e, 0x54, 0xe1, 0x1a, 0x86, 0x18, 0x3e, 0x23, 0xac, 0x80, 0xd1, 0x48, 0x86, 0x26, 0x11, 0x43,
	0x41, 0x90, 0x30, 0x76, 0x61, 0x62, 0xe0, 0x78, 0x11, 0x86, 0xd2, 0xf1, 0x86, 0x28, 0xf0, 0x6a,
	0x68, 0x08, 0x2c, 0x85, 0xd5, 0xca, 0x95, 0x22, 0x9f, 0x48, 0x9c, 0xb4, 0x81, 0x14, 0xf3, 0x06,
	0x8c, 0xc6, 0xee, 0x55, 0x1d, 0xcb, 0x66, 0x76, 0x29, 0x77, 0x6d, 0x24, 0x48, 0xee, 0xa9, 0x11,
	0x75, 0xb9, 0x9b, 0x6e, 0xf7, 0x5a, 0xad, 0xb0, 0x3a, 0x8e, 0x0d, 0x57, 0x04, 0x8d, 0x47, 0x8c,
	0xd0, 0x7c, 0x0c, 0xc6, 0x25, 0x44, 0x5a, 0x77, 0x02, 0x31, 0xb2, 0xde, 0xa6, 0x30, 0xe7, 0xe3,
	0x30, 0x21, 0x9c, 0xa0, 0xd7, 0x6d, 0x06, 0xd4, 0x6b, 0xb3, 0xea, 0x39, 0x14, 0x7f, 0x0c, 0xa9,
	0xef, 0xef, 0x36, 0x38, 0x0d, 0xc3, 0x01, 0xa2, 0x84, 0x86, 0xe7, 0x65, 0x38, 0xe0, 0x24, 0x54,
	0x43, 0x1a, 0xb9, 0xcd, 0xf8, 0x80, 0x4f, 0x4b, 0xb7, 0xe3, 0xe5, 0xb5, 0x3d, 0xec, 0x41, 0x0d,
	0x8f, 0x00, 0x54, 0x65, 0x0f, 0x72, 0x88, 0x10, 0x15, 0xa7, 0x55, 0x33, 0x7a, 0x5a, 0x55, 0x85,
	0x92, 0xcd, 0x5a, 0xcc, 0x0b, 0x59, 0xf5, 0x82, 0x18, 0x3a, 0x59, 0xe4, 0x7e, 0xe4, 0x3a, 0x2d,
	0x56, 0xbd, 0x28, 0xd6, 0x2d, 0xfe, 0xcd, 0xa5, 0xa4, 0x41, 0xe7, 0xa0, 0xe9, 0xf5, 0x3a, 0xdb,
	0x2c, 0xa8, 0x3e, 0x22, 0xa4, 0xe4, 0xa4, 0x75, 0xa4, 0x70, 0x8b, 0x20, 0x80, 0xda, 0xb6, 0xc3,
	0x13, 0xb2, 0xea, 0x25, 0x21, 0x09, 0x27, 0xce, 0x4a, 0x1a, 0xb6, 0xec, 0x53, 0xbb, 0xfa, 0xa8,
	0xf0, 0x50, 0xfe, 0x5d, 0xfb, 0x36, 0xa8, 0x70, 0x97, 0x58, 0xdc, 0xef, 0x62, 0xd4, 0x1a, 0xe8,
	0xf6, 0xd2, 0x39, 0x0b, 0xb1, 0x73, 0xd6, 0x96, 0x60, 0x4c, 0x77, 0x26, 0x1e, 0x8b, 0xd1, 0x90,
	0xbc, 0x4b, 0x95, 0x52, 0xec, 0xca, 0xf4, 0x9d, 0x5b, 0x11, 0x99, 0x5e, 0xd7, 0x92, 0x6d, 0x94,
	0x78, 0x79, 0xbd, 0x6b, 0xd5, 0x5e, 0x33, 0x60, 0x74, 0x23, 0x60, 0xe1, 0xf6, 0x41, 0xc4, 0x82,
	0xc1, 0x02, 0x5c, 0x02, 0xb0, 0x7a, 0x41, 0x93, 0x79, 0x2c, 0x68, 0xab, 0x55, 0x61, 0xd4, 0xea,
	0x05, 0x8b, 0x48, 0x48, 0xa2, 0x83, 0x65, 0xcb, 0x64, 0x59, 0x44, 0x87, 0x79, 0xdb, 0x7c, 0x01,
	0xc6, 0x6c, 0x27, 0xe0, 0x8b, 0x04, 0x52, 0x30, 0x8c, 0x0d, 0x98, 0x8a, 0x15, 0x01, 0x44, 0x42,
	0xed, 0xbd, 0x70, 0x66, 0xd9, 0xf5, 0xb7, 0xa9, 0xbb, 0xa2, 0x7c, 0x1a, 0xf5, 0xe4, 0x29, 0x79,
	0xb2, 0x30, 0xe3, 0xf7, 0x80, 0x0d, 0xcf, 0x36, 0x9c, 0xcd, 0x69, 0x20, 0x1c, 0xac, 0xe3, 0x35,
	0x18, 0xc2, 0x04, 0xb4, 0x90, 0x4d, 0x40, 0x73, 0x9a, 0x69, 0x20, 0x94, 0x2f, 0x1a, 0xdc, 0xc0,
	0x2a, 0x66, 0xa1, 0x13, 0x24, 0xed, 0xf2, 0x62, 0x76, 0xd1, 0x88, 0xc5, 0xf3, 0x60, 0x4c, 0x55,
	0x45, 0xc5, 0xde, 0x09, 0xa3, 0xa2, 0xba, 0xd7, 0xf2, 0xfb, 0x17, 0x79, 0x05, 0x6d, 0x94, 0xa9,
	0xea, 0xef, 0x1d, 0x3c, 0x9b, 0xa2, 0x91, 0x58, 0x08, 0x27, 0xf4, 0xc9, 0xcd, 0xc1, 0x7c, 0x8d,
	0xc3, 0x15, 0xb5, 0x21, 0x50, 0xb5, 0x1f, 0x2a, 0xc0, 0xf8, 0x56, 0x40, 0x1d, 0xef, 0xb6, 0x1f,
	0xec, 0x7e, 0x03, 0x02, 0x63, 0x38, 0x8c, 0x68, 0x10, 0x35, 0xb5, 0x2d, 0xd1, 0x28, 0x52, 0x30,
	0x4c, 0xe9, 0x4b, 0xf3, 0x50, 0x6a, 0x69, 0x36, 0xdf, 0x03, 0x95, 0x3b, 0x7e, 0xb0, 0xdb, 0x14,
	0x6b, 0x2d, 0x86, 0xd8, 0x89, 0xeb, 0x33, 0x89, 0xbc, 0xb1, 0x58, 0x62, 0x61, 0x6e, 0xc0, 0x9d,
	0xf8, 0xdb, 0x7c, 0x14, 0x2a, 0xbe, 0x6b, 0x37, 0x95, 0xa0, 0x32, 0x0a, 0xfb, 0xae, 0x3d, 0x2b,
	0x64, 0xc5, 0x7d, 0x65, 0x10, 0x50, 0x6b, 0x97, 0xb3, 0x4b, 0x82, 0x2d, 0x29, 0xab, 0x36, 0x4f,
	0xd3, 0xb1, 0x6b, 0x2e, 0x56, 0xd3, 0x65, 0x5e, 0x3b, 0xda, 0x91, 0x99, 0xeb, 0x04, 0xa7, 0x73,
	0xf1, 0xd6, 0x90, 0x5a, 0x9b, 0x07, 0x98, 0xe3, 0x69, 0xa7, 0x88, 0x3b, 0xb1, 0x09, 0x0c, 0xdd,
	0x04, 0x97, 0xa1, 0xd2, 0xeb, 0xda, 0x71, 0xac, 0x16, 0xe6, 0x01, 0x41, 0xc2, 0x24, 0xe4, 0xf5,
	0x22, 0x4c, 0x2d, 0xf3, 0x56, 0xb0, 0x29, 0xc7, 0x13, 0x5b, 0x94, 0x05, 0x98, 0xdc, 0x96, 0x65,
	0x65, 0x03, 0x03, 0x6d, 0x70, 0x31, 0xb1, 0xc1, 0x4d, 0xda, 0x55, 0x75, 0xa4, 0x15, 0x26, 0xb6,
	0x53, 0xe5, 0x54, 0x9e, 0x5c, 0x48, 0xe7, 0xc9, 0xcf, 0xc1, 0x08, 0xb5, 0x22, 0x67, 0x4f, 0x0c,
	0xcb, 0xa0, 0x76, 0x67, 0x11, 0xd2, 0x90, 0x50, 0x6e, 0x1a, 0xec, 0xa1, 0xb9, 0xcd, 0xda, 0x8e,
	0x97, 0x0c, 0xdc, 0x90, 0xec, 0x79, 0x8e, 0x93, 0x71, 0xfc, 0x1e, 0x07, 0x41, 0x69, 0xc6, 0x03,
	0x2c, 0x56, 0xc9, 0x31, 0xa4, 0x2e, 0xca, 0x51, 0xe6, 0x1b, 0x27, 0xdf, 0x0b, 0xa3, 0xa0, 0x67,
	0x49, 0x1f, 0x29, 0xc9, 0x8d, 0x93, 0xa2, 0x22, 0xec, 0x1d, 0x60, 0xc6, 0x04, 0xbe, 0xa7, 0x15,
	0x49, 0x62, 0x19, 0x37, 0x6c, 0x53, 0x3a, 0xe7, 0x16, 0x26, 0x8c, 0x13, 0x50, 0xd8, 0xe9, 0xe2,
	0xaa, 0x38, 0xdc, 0x28, 0xec, 0xf0, 0xa5, 0x75, 0xca, 0xa5, 0x61, 0xd4, 0xf4, 0x7b, 0x51, 0xcb,
	0x09, 0xe4, 0x40, 0x88, 0x4d, 0xc6, 0x24, 0x67, 0xbc, 0x24, 0xe8, 0x6a, 0xe5, 0x0c, 0xbb, 0x8c,
	0xd9, 0xb8, 0xdf, 0xe0, 0x9b, 0x7a, 0x5e, 0xe0, 0x7b, 0xfd, 0x0e, 0xdd, 0x6f, 0xee, 0x74, 0x71,
	0xb7, 0x31, 0xdc, 0x18, 0xee, 0xd0, 0xfd, 0x95, 0x6e, 0xed, 0x47, 0x0d, 0xa8, 0xae, 0x7a, 0x61,
	0xd4, 0xe3, 0xcb, 0x60, 0x83, 0x85, 0x2c, 0xb0, 0x76, 0xe2, 0xa9, 0x72, 0x15, 0xc6, 0x1c, 0xc5,
	0x4b, 0xe6, 0x4b, 0x25, 0xa6, 0x09, 0x47, 0xfc, 0x06, 0xa7, 0x47, 0x9e, 0x8f, 0x0e, 0xe7, 0xfa,
	0xe8, 0x1a, 0x4c, 0xc5, 0x22, 0xc6, 0x81, 0xe3, 0x14, 0xb2, 0xc5, 0xb9, 0x65, 0x41, 0xcb, 0x2d,
	0x6b, 0x1f, 0x31, 0x60, 0x32, 0xab, 0xe8, 0x34, 0x94, 0x22, 0x66, 0xed, 0x68, 0x31, 0x81, 0x17,
	0xbf, 0x45, 0xea, 0xb5, 0x61, 0x6c, 0x8b, 0xf7, 0xa6, 0x34, 0x1b, 0x28, 0x4c, 0x7e, 0xae, 0xfc,
	0x24, 0x10, 0x74, 0x8d, 0xf0, 0x8e, 0x13, 0x59, 0x3b, 0x29, 0x87, 0xe6, 0xf4, 0x4d, 0x24, 0xe3,
	0x34, 0xfd, 0xa7, 0x06, 0x54, 0xe6, 0xc5, 0xf1, 0x09, 0x6a, 0x5d, 0xd7, 0x16, 0x95, 0x09, 0x3d,
	0x5f, 0x9b, 0xef, 0x05, 0x01, 0xf3, 0xac, 0x03, 0x0c, 0xa4, 0x62, 0xb1, 0x51, 0xbd, 0x58, 0x3b,
	0x3c, 0x83, 0xd1, 0xcd, 0x81, 0xbd, 0xcc, 0x23, 0x39, 0x76, 0xbf, 0xc8, 0x0f, 0x94, 0x10, 0xa2,
	0x90, 0x38, 0xa5, 0x3c, 0xe7, 0x11, 0x4e, 0xf9, 0x04, 0x4c, 0x70, 0xa7, 0x4c, 0xce, 0x74, 0xd4,
	0xe4, 0xe9, 0xd0, 0xfd, 0xf9, 0x98, 0x88, 0xc7, 0x64, 0x2a, 0x92, 0x38, 0x36, 0xce, 0x9a, 0xf1,
	0x06, 0x28, 0xd2, 0xaa, 0x5d, 0x7b, 0x3f, 0x4c, 0xad, 0xfb, 0x41, 0x87, 0xba, 0x0d, 0x66, 0x05,
	0x3d, 0x47, 0xac, 0x99, 0xa9, 0x60, 0xa6, 0x76, 0x2d, 0x7c, 0x26, 0x79, 0x6c, 0x3f, 0x6a, 0x06,
	0xcc, 0xea, 0x05, 0x4e, 0xa4, 0x6f, 0xaa, 0x26, 0x39, 0xa3, 0x21, 0xe8, 0x68, 0xb0, 0x0e, 0x9c,
	0x99, 0xb5, 0xf7, 0xa8, 0x67, 0x31, 0xfb, 0x9b, 0xda, 0xb0, 0xb0, 0x11, 0x6d, 0xc7, 0xbb, 0x66,
	0x2c, 0xd4, 0x96, 0xa1, 0xb2, 0xd8, 0x75, 0x42, 0xdf, 0x66, 0xd8, 0x8d, 0x38, 0x56, 0xb2, 0x99,
	0xbe, 0x25, 0x1f, 0x45, 0x8a, 0xda, 0x94, 0x0b, 0x76, 0xbc, 0xb1, 0x2a, 0x61, 0x79, 0xd5, 0xae,
	0xcd, 0xc2, 0x98, 0xd6, 0x50, 0x68, 0x5e, 0x83, 0x32, 0x13, 0x65, 0xb5, 0x2f, 0x39, 0xa7, 0xe5,
	0xc4, 0x09, 0xb2, 0x11, 0xc3, 0x6a, 0x3f, 0x6e, 0xc0, 0xd8, 0x7c, 0x2f, 0x60, 0xf1, 0x14, 0xf9,
	0xbf, 0x5e, 0xa8, 0xbf, 0x15, 0x53, 0xe7, 0x16, 0x9c, 0x5f, 0xf1, 0xc3, 0xae, 0x13, 0x51, 0x37,
	0x39, 0x91, 0x45, 0xe3, 0xd5, 0x60, 0xdc, 0xf3, 0x9b, 0x56, 0x2f, 0x60, 0x4d, 0x71, 0x80, 0x2a,
	0x0e, 0x04, 0x2a, 0x9e, 0xcf, 0xb5, 0x5a, 0xc0, 0x63, 0xd4, 0x2a, 0x94, 0xee, 0xf8, 0x3d, 0xcf,
	0x66, 0xb6, 0xda, 0x55, 0xcb, 0x62, 0xed, 0xd7, 0x0c, 0x38, 0x2f, 0x0e, 0xaf, 0xe2, 0xe3, 0x94,
	0xc8, 0x3d, 0xc5, 0x21, 0xd6, 0x59, 0x18, 0x8e, 0x38, 0x52, 0x45, 0x1c, 0x2c, 0xa4, 0x96, 0xb0,
	0x62, 0x7a, 0x09, 0xbb, 0x0c, 0x15, 0xd9, 0x9a, 0x76, 0x90, 0x05, 0x82, 0x34, 0xf0, 0x90, 0x72,
	0x38, 0xf7, 0x90, 0x52, 0x9d, 0xae, 0x8e, 0x24, 0xa7, 0xab, 0xb5, 0xf7, 0xc1, 0x74, 0xbe, 0x1a,
	0xa1, 0xf9, 0x02, 0x0c, 0xeb, 0x1b, 0xd5, 0x2b, 0xc9, 0x58, 0xe6, 0xd7, 0x68, 0x08, 0x78, 0xed,
	0x79, 0x18, 0xe3, 0xac, 0x65, 0xa7, 0x95, 0xbf, 0xe7, 0xcf, 0x3f, 0x2b, 0xf8, 0x93, 0x30, 0xae,
	0xd7, 0x0a, 0xcd, 0xa7, 0xd3, 0xdd, 0x9f, 0xd7, 0x4f, 0xdf, 0x13, 0x9c, 0xea, 0xf4, 0xf3, 0x06,
	0x4c, 0x28, 0x7a, 0x83, 0x59, 0x7e, 0x60, 0x1f, 0x3f, 0x0e, 0x42, 0xa8, 0x42, 0x2c, 0xd4, 0x65,
	0xa8, 0x04, 0x58, 0x4d, 0x77, 0x46, 0x10, 0x24, 0x75, 0x52, 0xf6, 0xff, 0x72, 0x1c, 0x16, 0x61,
	0x32, 0x2d, 0x7e, 0x68, 0x5e, 0x87, 0x92, 0xe8, 0x5f, 0x99, 0xa0, 0xda, 0x6f, 0x02, 0x81, 0x6d,
	0x28, 0x60, 0xed, 0x3b, 0x81, 0xc8, 0x61, 0x99, 0xa3, 0xa1, 0x63, 0xa1, 0xfd, 0x2f, 0x40, 0x79,
	0xbb, 0xe7, 0xba, 0x2c, 0x72, 0x3c, 0x34, 0xc3, 0x68, 0x23, 0x2e, 0x9b, 0x4f, 0x83, 0x29, 0xaf,
	0x17, 0x70, 0xff, 0xd7, 0x74, 0x9d, 0x8e, 0xa3, 0xd2, 0x5b, 0x22, 0x38, 0x78, 0x4d, 0xb1, 0xc6,
	0xe9, 0xb5, 0x5f, 0x35, 0x00, 0x78, 0xf3, 0xa7, 0x31, 0xf0, 0x59, 0x3e, 0x7c, 0x36, 0xdb, 0x57,
	0xa3, 0x8c, 0x85, 0xff, 0xef, 0x66, 0xfe, 0x0e, 0xe1, 0x9b, 0xe1, 0x8a, 0xc3, 0x17, 0x9d, 0x03,
	0xf3, 0x99, 0xac, 0x8d, 0xcf, 0xa6, 0x6d, 0x9c, 0xb5, 0xef, 0xcb, 0x06, 0x98, 0x9c, 0x9e, 0x9c,
	0x5b, 0x63, 0x2c, 0x79, 0x1c, 0x26, 0x76, 0xf9, 0xd2, 0x93, 0x35, 0xc7, 0xd8, 0x6e, 0x8c, 0x5d,
	0xb5, 0x79, 0xc4, 0x41, 0x54, 0x26, 0x5b, 0xad, 0x70, 0xe2, 0xb2, 0x9c, 0xee, 0xea, 0xc0, 0xba,
	0xa8, 0x1d, 0x58, 0xa7, 0x0f, 0xbe, 0x87, 0xd4, 0xe5, 0x82, 0x3c, 0xf8, 0xae, 0xfd, 0x4c, 0x41,
	0xf8, 0xce, 0x4d, 0xea, 0xd1, 0x36, 0x0b, 0x70, 0xcc, 0xdf, 0xcd, 0xb3, 0xff, 0xd0, 0xb1, 0x54,
	0x30, 0xe6, 0x5b, 0xcb, 0x0b, 0x69, 0xd5, 0x74, 0x1f, 0xe1, 0x3b, 0x03, 0xe5, 0x2e, 0xef, 0xd2,
	0x23, 0x54, 0xe5, 0xfa, 0xd5, 0x93, 0xa6, 0x7d, 0xa8, 0x82, 0xd8, 0x53, 0x30, 0xd4, 0x76, 0x5a,
	0x11, 0x8a, 0x9e, 0xb9, 0x2d, 0xd3, 0xe6, 0x75, 0x03, 0x41, 0xe6, 0xb7, 0xc3, 0x18, 0xff, 0xdb,
	0xdc, 0x11, 0x03, 0x21, 0x77, 0xbf, 0x33, 0x83, 0x3c, 0x3c, 0x6c, 0x54, 0x38, 0x5c, 0x0d, 0xdb,
	0xbb, 0x01, 0x2d, 0x1b, 0xd7, 0x1e, 0xce, 0x9e, 0x27, 0xe9, 0x83, 0x2c, 0x0c, 0x2c, 0x0b, 0xb5,
	0x16, 0x9c, 0x53, 0xda, 0xf7, 0x5a, 0x2d, 0xed, 0xd0, 0x36, 0x6d, 0x65, 0x23, 0x7b, 0xbd, 0xf0,
	0x0c, 0x94, 0xc4, 0x11, 0x6e, 0x28, 0xf7, 0xc1, 0x9a, 0xa7, 0x24, 0xad, 0x34, 0x14, 0xa8, 0xf6,
	0xc3, 0x06, 0x4c, 0x6b, 0x1d, 0xc9, 0x3d, 0x86, 0x98, 0x38, 0x97, 0xa1, 0x22, 0xf6, 0x1a, 0x62,
	0x16, 0x08, 0x5f, 0x01, 0x41, 0x52, 0xeb, 0x5b, 0x9f, 0x93, 0x17, 0x72, 0x9d, 0x3c, 0x33, 0x5f,
	0x8a, 0x7d, 0xf3, 0x65, 0x1a, 0x4a, 0xdb, 0xbd, 0x56, 0x4b, 0x3b, 0x28, 0xe5, 0xc5, 0x55, 0xbb,
	0xf6, 0x29, 0xbe, 0x7e, 0xcb, 0xab, 0x1b, 0x74, 0xe2, 0x6b, 0x78, 0xbc, 0x8f, 0x27, 0xce, 0xd2,
	0x63, 0xce, 0xf5, 0x1f, 0xa6, 0x6f, 0xb2, 0xa8, 0x11, 0xc3, 0x4c, 0x02, 0xc5, 0x88, 0xaa, 0x29,
	0xce, 0x3f, 0xb9, 0x3c, 0x1d, 0x1a, 0xf0, 0xdc, 0x14, 0x27, 0xbf, 0x3c, 0xc7, 0x46, 0xd2, 0x2a,
	0x46, 0x80, 0x8b, 0x30, 0xca, 0xbc, 0xc8, 0x89, 0x0e, 0x12, 0x5f, 0x2e, 0x0b, 0x82, 0x58, 0xec,
	0x44, 0x6d, 0x3d, 0x13, 0x14, 0xb5, 0x37, 0x39, 0xa5, 0xf6, 0xaa, 0x21, 0x7c, 0x9d, 0x8f, 0x89,
	0xd7, 0xf2, 0xf9, 0x04, 0x3c, 0x69, 0xe0, 0x2e, 0x43, 0xc5, 0x0f, 0x9c, 0x78, 0x27, 0x57, 0x90,
	0x57, 0x1c, 0x48, 0x52, 0x79, 0x86, 0xc7, 0xee, 0x34, 0x5b, 0x2e, 0x6d, 0xa3, 0xbc, 0xe5, 0x46,
	0xc9, 0x63, 0x77, 0x96, 0x5c, 0xda, 0x36, 0xdf, 0x06, 0x93, 0x61, 0xaf, 0xdb, 0x15, 0x63, 0xc0,
	0x13, 0x4d, 0x71, 0x62, 0x3a, 0xda, 0x98, 0x90, 0xe4, 0x75, 0x41, 0xad, 0x7d, 0xce, 0x80, 0x29,
	0x4d, 0xae, 0xc5, 0xfd, 0x88, 0x79, 0xb6, 0xf9, 0x4e, 0x18, 0x49, 0x6d, 0x6b, 0xa7, 0xfb, 0x66,
	0xa0, 0xdc, 0xd2, 0x4a, 0x18, 0x37, 0x0e, 0x0f, 0x53, 0x42, 0x96, 0x02, 0xca, 0x52, 0xe6, 0x04,
	0x14, 0xa6, 0x0e, 0x53, 0x4a, 0xcf, 0x96, 0xd3, 0xde, 0x89, 0x9a, 0x16, 0xed, 0xca, 0x6c, 0x61,
	0x52, 0x32, 0x96, 0x38, 0x7d, 0x9e, 0xe2, 0x6e, 0xb0, 0xe3, 0xb4, 0x03, 0xbe, 0x23, 0x4f, 0xb0,
	0xc2, 0xda, 0x93, 0x92, 0xa1, 0xb0, 0xb5, 0x6d, 0xa8, 0x2c, 0x33, 0x8f, 0x05, 0xd4, 0x55, 0xf3,
	0xa0, 0x2d, 0x8a, 0x9a, 0x39, 0x25, 0x65, 0xd5, 0x36, 0x9f, 0x87, 0x72, 0xd7, 0x0f, 0xc5, 0x69,
	0x9e, 0x38, 0x60, 0xd1, 0x96, 0xa5, 0x05, 0xd6, 0x75, 0xfd, 0x83, 0x0d, 0xc9, 0x6f, 0xc4, 0xc8,
	0xda, 0x3f, 0x31, 0x00, 0x04, 0x33, 0x37, 0x25, 0xb8, 0x06, 0x65, 0xd9, 0x83, 0x9a, 0x5d, 0x9a,
	0xeb, 0x69, 0xc2, 0x35, 0x62, 0x18, 0x9e, 0xac, 0x39, 0xac, 0xcd, 0x92, 0x1b, 0xbf, 0x12, 0x96,
	0x57, 0x6d, 0xf3, 0x3c, 0x8c, 0x44, 0x81, 0xef, 0x77, 0x43, 0xe5, 0xf1, 0xa2, 0x64, 0x5e, 0x81,
	0x31, 0x27, 0x6c, 0xd2, 0x5e, 0xe4, 0x37, 0x5b, 0x8e, 0x2b, 0x2e, 0xfe, 0xca, 0x0d, 0x70, 0xc2,
	0xd9, 0x5e, 0xe4, 0x2f, 0x39, 0x2e, 0x5e, 0xb9, 0x39, 0x61, 0x13, 0xfd, 0x0d, 0x97, 0x8d, 0x72,
	0xa3, 0xe4, 0x84, 0x37, 0x79, 0x31, 0x39, 0x2f, 0x2d, 0x89, 0x6b, 0x1b, 0x2c, 0xd4, 0x28, 0x4c,
	0x09, 0xb5, 0xde, 0x2f, 0xce, 0x3a, 0x78, 0x47, 0x7d, 0xda, 0x5d, 0x02, 0x10, 0x12, 0x34, 0x7d,
	0x37, 0xbe, 0xb8, 0x14, 0x94, 0x97, 0x5c, 0x9d, 0xed, 0xb1, 0x3b, 0xea, 0xdd, 0x83, 0xa0, 0xac,
	0xb3, 0x3b, 0xb5, 0xf7, 0xc1, 0xf9, 0x8d, 0x80, 0x75, 0x69, 0xc0, 0x36, 0x7d, 0xd7, 0x76, 0xb4,
	0xdb, 0xd2, 0xfc, 0xb3, 0x98, 0xab, 0x30, 0x26, 0x97, 0x74, 0xfd, 0xac, 0x4a, 0xbe, 0x22, 0x10,
	0x37, 0xaf, 0x9f, 0x36, 0xe0, 0x62, 0xba, 0xcd, 0xf4, 0x01, 0xd8, 0x37, 0xfb, 0x9c, 0x6b, 0x21,
	0xef, 0x9c, 0xeb, 0x31, 0x6d, 0x61, 0xe9, 0x97, 0xa5, 0xff, 0xc4, 0xab, 0xf6, 0x03, 0x06, 0x9c,
	0x91, 0xc8, 0xd4, 0xbe, 0x23, 0xdf, 0x0c, 0xdf, 0x8a, 0xcd, 0xc5, 0x2f, 0x1a, 0x30, 0xb1, 0xc9,
	0xd8, 0xee, 0x16, 0x1e, 0xf0, 0xe7, 0x3e, 0xa0, 0xb8, 0x08, 0xa3, 0xb8, 0xe7, 0xd3, 0x62, 0x4f,
	0x99, 0x13, 0xb0, 0xa7, 0xc7, 0x60, 0x3c, 0x10, 0xbb, 0x46, 0x39, 0x56, 0x62, 0xf0, 0xc7, 0x24,
	0x31, 0x7e, 0xbe, 0xc0, 0xf6, 0xe4, 0x11, 0x86, 0xf0, 0xe7, 0x12, 0x96, 0xe5, 0x19, 0x5f, 0x72,
	0x46, 0x35, 0x2c, 0x74, 0xdc, 0x66, 0x5a, 0x60, 0x8b, 0x75, 0x1c, 0x49, 0x5f, 0x0a, 0x9a, 0x40,
	0x36, 0xdc, 0x5e, 0xdb, 0xf1, 0x84, 0xf7, 0x72, 0xd1, 0x6b, 0x73, 0x30, 0x39, 0x17, 0x30, 0xba,
	0xbb, 0xc0, 0xb6, 0x03, 0x27, 0x54, 0x07, 0x0d, 0xf9, 0xf7, 0x7d, 0xe7, 0x61, 0x44, 0x1e, 0xfa,
	0xcb, 0xdb, 0x26, 0x51, 0xaa, 0xfd, 0x05, 0x98, 0xb8, 0x4d, 0x5d, 0x77, 0x36, 0x8a, 0xa8, 0x38,
	0xaf, 0xe0, 0x06, 0xa0, 0x58, 0xd2, 0xee, 0x42, 0x05, 0x61, 0xd0, 0xf9, 0xcb, 0x37, 0x3e, 0x74,
	0xf5, 0x0f, 0x14, 0x71, 0x4f, 0x1a, 0x1f, 0x4d, 0x98, 0xe7, 0x60, 0x6a, 0x57, 0x27, 0xac, 0xfb,
	0x1e, 0x23, 0x6f, 0x31, 0xa7, 0xe1, 0x4c, 0x8a, 0xbc, 0x88, 0x37, 0xf8, 0xc4, 0x30, 0xcf, 0x02,
	0x49, 0x31, 0x5e, 0x72, 0x5c, 0x52, 0xe8, 0x6b, 0x65, 0xc9, 0xf7, 0x6d, 0x52, 0xec, 0x23, 0xdf,
	0xe6, 0xe4, 0x21, 0xf3, 0x3c, 0x98, 0x29, 0xf2, 0x66, 0xc4, 0x98, 0x4b, 0x86, 0xcd, 0x4b, 0x30,
	0x93, 0xa2, 0xab, 0xe3, 0xc7, 0x79, 0x3f, 0x8c, 0xc8, 0x88, 0xf9, 0x28, 0x5c, 0x48, 0xb1, 0x37,
	0x58, 0x10, 0xfa, 0x1e, 0x15, 0xf7, 0x3d, 0xa4, 0x64, 0xce, 0xc0, 0xb9, 0xb4, 0xcc, 0xfb, 0x5d,
	0x36, 0xef, 0x3b, 0x1e, 0x29, 0xf7, 0xa9, 0x73, 0xcb, 0xe9, 0x2e, 0xee, 0x77, 0xc9, 0xa8, 0x79,
	0x01, 0xce, 0xa7, 0x18, 0x2b, 0x2c, 0xf0, 0xb7, 0xfc, 0x5d, 0xe6, 0x11, 0x30, 0x2f, 0xc2, 0x74,
	0x8a, 0xd7, 0x60, 0xdd, 0x5e, 0x84, 0xcb, 0x19, 0xa9, 0xf4, 0xc9, 0xba, 0xe9, 0x58, 0xcc, 0xb3,
	0x98, 0x90, 0x65, 0x2c, 0xb7, 0xdd, 0x0e, 0xb3, 0xa9, 0x4b, 0xc6, 0xeb, 0x9f, 0x2c, 0xc8, 0xa3,
	0xde, 0xd4, 0x40, 0xf0, 0x1a, 0x7d, 0x54, 0x39, 0x1a, 0x5c, 0xb3, 0x3e, 0x9e, 0xb0, 0x7c, 0x6e,
	0x35, 0x69, 0xfe, 0x5c, 0x9e, 0x1c, 0x03, 0xae, 0x5c, 0x1f, 0x4f, 0x0d, 0xc4, 0x15, 0x78, 0xa4,
	0x9f, 0xb9, 0x1c, 0x9f, 0x71, 0x93, 0x32, 0xaa, 0xdf, 0x8f, 0x70, 0x5a, 0xd1, 0x8b, 0xec, 0x80,
	0x8c, 0x9a, 0x8f, 0x40, 0x35, 0x9f, 0xbd, 0x11, 0x11, 0xc8, 0x57, 0x87, 0x8f, 0xc7, 0x98, 0x79,
	0x06, 0x26, 0x05, 0xeb, 0x36, 0x0d, 0xb6, 0x1c, 0x6b, 0x97, 0x45, 0xe4, 0x6c, 0xfd, 0x09, 0x18,
	0x9b, 0x77, 0xa2, 0x83, 0xd9, 0x28, 0x0a, 0x12, 0x9f, 0xd5, 0x08, 0xc2, 0x4a, 0xf5, 0xdf, 0x19,
	0x86, 0x33, 0x22, 0x03, 0xe7, 0x0c, 0x67, 0xbb, 0x27, 0xae, 0x31, 0xb0, 0xcd, 0x84, 0xae, 0x39,
	0x78, 0x42, 0x54, 0x82, 0x10, 0x23, 0x83, 0x5e, 0x8d, 0x58, 0x87, 0x14, 0xd0, 0x63, 0x13, 0xa2,
	0xbc, 0x78, 0x23, 0x43, 0x38, 0x1b, 0x12, 0x3a, 0x6e, 0x04, 0xc9, 0x30, 0xda, 0x3d, 0x8d, 0xde,
	0x14, 0xd7, 0xbb, 0x64, 0x04, 0x2d, 0x93, 0xf0, 0x52, 0x56, 0x20, 0x25, 0x73, 0x0a, 0xc6, 0x35,
	0xee, 0x2c, 0xf7, 0xd0, 0xb4, 0x3c, 0xbc, 0x31, 0x52, 0x31, 0xab, 0x70, 0x36, 0xdb, 0x0a, 0xb7,
	0x2e, 0x19, 0x43, 0xdb, 0x26, 0x9c, 0x05, 0xea, 0xb8, 0x07, 0x9b, 0x96, 0x1f, 0x30, 0x32, 0x9e,
	0x69, 0x69, 0x36, 0xe8, 0x1c, 0x90, 0x89, 0x8c, 0x66, 0xb7, 0xc5, 0xe1, 0x0d, 0x99, 0xcc, 0xf4,
	0x10, 0x5f, 0xfa, 0x12, 0x92, 0xe1, 0xe0, 0xda, 0xbf, 0x44, 0x2d, 0x46, 0xa6, 0x32, 0x36, 0x5d,
	0xf1, 0x3d, 0x1f, 0x95, 0x3e, 0x93, 0x51, 0x1a, 0x19, 0xcb, 0xbe, 0x6b, 0xcf, 0xd3, 0xc0, 0x26,
	0x67, 0xfb, 0x34, 0xa4, 0x36, 0x39, 0x9f, 0xb1, 0xec, 0x52, 0x40, 0x3b, 0x8c, 0x4c, 0xa3, 0xd7,
	0x26, 0xd4, 0x4d, 0xda, 0x62, 0xb1, 0xf1, 0xaa, 0x19, 0xd5, 0x17, 0xf7, 0xbb, 0xae, 0x1f, 0xa0,
	0x5b, 0xcd, 0x64, 0x58, 0x1b, 0x81, 0x1f, 0x76, 0x59, 0xe0, 0x44, 0x07, 0xe4, 0x91, 0x8c, 0x01,
	0x36, 0x2d, 0x87, 0x4f, 0x63, 0x72, 0x29, 0x23, 0x55, 0xa3, 0xe7, 0x31, 0x62, 0x99, 0xe7, 0x61,
	0x4a, 0x07, 0xe3, 0xb2, 0x4b, 0xbe, 0xc4, 0x43, 0x8f, 0x6e, 0x93, 0x17, 0xd5, 0xb3, 0x36, 0xf2,
	0x8f, 0x26, 0xcd, 0xcb, 0x70, 0x41, 0x77, 0xb4, 0xf4, 0xd3, 0x3b, 0xf2, 0x3b, 0x93, 0xe6, 0x23,
	0x29, 0x9d, 0x36, 0xfc, 0x4e, 0x97, 0x39, 0x8e, 0x98, 0x67, 0xff, 0x78, 0xb2, 0x1e, 0x41, 0x55,
	0x30, 0x37, 0x02, 0xbf, 0xcb, 0x82, 0xe8, 0x60, 0xdd, 0x8f, 0x1c, 0xf1, 0xe2, 0x45, 0xb3, 0x77,
	0xc2, 0x44, 0xe7, 0xbe, 0x0c, 0x17, 0x33, 0x0c, 0x7d, 0x4f, 0x4a, 0x0c, 0x0c, 0xa5, 0x69, 0x00,
	0xfa, 0xae, 0x38, 0x82, 0x26, 0x85, 0xfa, 0xf7, 0x16, 0x61, 0x6c, 0x8d, 0x7a, 0xed, 0x1e, 0x6d,
	0x8b, 0xae, 0xb8, 0x63, 0x2a, 0x82, 0xec, 0x84, 0x8f, 0x90, 0x22, 0x2d, 0x7a, 0x6d, 0xd7, 0x09,
	0x77, 0x88, 0x81, 0xe6, 0x54, 0xd4, 0xf9, 0x1d, 0xc7, 0x63, 0x21, 0x9b, 0x5f, 0x97, 0x33, 0x28,
	0x43, 0xdf, 0xba, 0x4d, 0x8a, 0x68, 0x66, 0x45, 0x5f, 0xe2, 0x23, 0xb9, 0x23, 0xa7, 0x95, 0x22,
	0xae, 0x46, 0xd4, 0x75, 0xa8, 0x47, 0x86, 0x53, 0xd0, 0x65, 0x16, 0x74, 0xa8, 0x47, 0x46, 0x52,
	0xd0, 0xcd, 0x2e, 0xf5, 0xb8, 0x14, 0xa5, 0x14, 0xb5, 0xd1, 0x0b, 0x43, 0xde, 0x40, 0x39, 0xd5,
	0xc0, 0x8b, 0x7e, 0xc0, 0xa8, 0x47, 0x46, 0x31, 0x98, 0x28, 0xe2, 0x9f, 0xa2, 0x5d, 0xca, 0x25,
	0x23, 0x80, 0xb6, 0x55, 0xe4, 0x0d, 0x3f, 0x88, 0x7a, 0xed, 0x1e, 0x67, 0x8c, 0xa5, 0x1a, 0x99,
	0x0d, 0xe8, 0xb6, 0x63, 0x91, 0xf1, 0x54, 0x7f, 0x5b, 0xbd, 0x60, 0x97, 0x4b, 0x41, 0x52, 0x6d,
	0xdc, 0x72, 0x58, 0xc4, 0x37, 0xa0, 0x21, 0x23, 0x17, 0x52, 0xd6, 0xdc, 0xda, 0xa1, 0x0e, 0xb9,
	0x98, 0xc2, 0xae, 0x7a, 0xb6, 0xef, 0x31, 0x14, 0xfa, 0xd1, 0xfa, 0xc3, 0x22, 0x4c, 0x6c, 0xe2,
	0x66, 0x92, 0xef, 0x92, 0x71, 0x30, 0x26, 0xa1, 0xb2, 0xcb, 0x0b, 0x4b, 0x81, 0xdf, 0x59, 0x0e,
	0xc9, 0x5b, 0x4c, 0x80, 0x11, 0x11, 0x35, 0x89, 0x61, 0x4e, 0x00, 0xec, 0x6e, 0xb1, 0x20, 0x70,
	0xf8, 0x66, 0x9e, 0x14, 0x4c, 0x02, 0x63, 0xbb, 0x37, 0x7b, 0x6e, 0xe4, 0x6c, 0x46, 0x81, 0xb3,
	0xcb, 0x48, 0x11, 0x29, 0x8b, 0x5e, 0xc4, 0xf3, 0x64, 0x9e, 0xf1, 0x92, 0x21, 0x73, 0x1c, 0x46,
	0x77, 0xd7, 0x7d, 0x59, 0x1c, 0xc6, 0x26, 0x30, 0x6a, 0xed, 0x3a, 0xae, 0x4b, 0x46, 0xb0, 0xbf,
	0x06, 0x8f, 0x0c, 0x78, 0xb1, 0x47, 0x4a, 0x28, 0x6c, 0x42, 0xd8, 0xf2, 0x17, 0x71, 0x7b, 0x4a,
	0xca, 0xd8, 0x34, 0xd6, 0x92, 0x53, 0x63, 0xd4, 0xac, 0x40, 0x69, 0xb7, 0xc1, 0xda, 0x7c, 0xd1,
	0x04, 0x21, 0x1b, 0xcf, 0xdb, 0xb9, 0xf4, 0xa4, 0x62, 0x9a, 0x30, 0xb1, 0x2b, 0xea, 0xbe, 0xe4,
	0x35, 0x18, 0xb5, 0x0f, 0x64, 0x00, 0xe3, 0x9d, 0xcf, 0x7a, 0x36, 0x46, 0x1d, 0xe5, 0xa0, 0x64,
	0x1c, 0xbb, 0xd5, 0x5a, 0x5f, 0xf2, 0x03, 0xb6, 0xc7, 0x02, 0x32, 0x21, 0xc2, 0x82, 0x98, 0x38,
	0xf3, 0x3d, 0x37, 0xea, 0x05, 0x6c, 0x8b, 0x7a, 0x68, 0x22, 0x32, 0x89, 0xd1, 0x58, 0x65, 0x12,
	0xb1, 0x61, 0x90, 0x47, 0x70, 0x30, 0x79, 0x3a, 0xb6, 0x14, 0x38, 0xcc, 0xb3, 0x91, 0x38, 0x65,
	0x96, 0x61, 0x68, 0xf7, 0x26, 0xdd, 0x27, 0xb6, 0x79, 0x15, 0x1e, 0x89, 0x0d, 0xbd, 0x19, 0x05,
	0xbe, 0xd7, 0xde, 0xf1, 0x5d, 0xfb, 0xa6, 0xef, 0x85, 0x11, 0x0b, 0x96, 0x43, 0xf2, 0x95, 0xa2,
	0x79, 0x16, 0x26, 0x63, 0x08, 0x17, 0x7b, 0x39, 0x24, 0x6f, 0xf2, 0x95, 0xf7, 0x5c, 0x4e, 0xc5,
	0xe5, 0x90, 0x7c, 0xb5, 0x88, 0xb1, 0x22, 0xe6, 0x31, 0xb7, 0xb5, 0x29, 0x73, 0x8a, 0xaf, 0xf1,
	0xc9, 0x30, 0x21, 0xec, 0x23, 0xb2, 0x9f, 0x56, 0x8b, 0x7c, 0xbd, 0x58, 0xff, 0xf2, 0x9f, 0x80,
	0x73, 0x62, 0xae, 0x8a, 0x4d, 0x73, 0xbc, 0xb8, 0xa1, 0xf4, 0x09, 0x4d, 0x4e, 0xcb, 0x73, 0x40,
	0x34, 0x22, 0x5f, 0x78, 0x22, 0xf2, 0xd1, 0x75, 0x94, 0x48, 0x90, 0xd1, 0xb8, 0x51, 0x14, 0x34,
	0x63, 0x1e, 0x0f, 0x51, 0x19, 0x1e, 0x86, 0x03, 0xbc, 0x47, 0x25, 0x2f, 0xaf, 0xa3, 0x1d, 0x32,
	0x80, 0x05, 0xf1, 0xea, 0x45, 0x40, 0x5e, 0x59, 0x37, 0x1f, 0x85, 0x99, 0x2c, 0x64, 0xcd, 0x69,
	0x49, 0xfe, 0xdd, 0x75, 0x73, 0x06, 0xce, 0x64, 0xf9, 0x8b, 0x9e, 0x4d, 0x7e, 0xe4, 0xd0, 0x30,
	0x6b, 0x71, 0xeb, 0xb8, 0xa0, 0x3b, 0x1d, 0xb6, 0xea, 0x59, 0x0d, 0xbe, 0x33, 0x17, 0x12, 0xfe,
	0xb5, 0x43, 0xc3, 0x7c, 0x02, 0x2e, 0x0f, 0xc0, 0xa8, 0xa1, 0x25, 0x3f, 0x7a, 0x68, 0x98, 0x8f,
	0xc3, 0xa3, 0x83, 0x9a, 0x92, 0x81, 0xfd, 0xc7, 0x0e, 0x0d, 0xf3, 0xed, 0xf0, 0xd8, 0x00, 0x14,
	0xee, 0xac, 0x1c, 0xaf, 0x8d, 0x8b, 0xe3, 0x8f, 0x1f, 0x1a, 0xe6, 0x55, 0xb8, 0x38, 0x00, 0xca,
	0x77, 0x58, 0xe4, 0x27, 0x0e, 0x0d, 0xf3, 0x72, 0xac, 0xb9, 0x08, 0xf0, 0x61, 0x94, 0xc8, 0x45,
	0x7e, 0xb2, 0xaf, 0x8d, 0x18, 0xa0, 0x24, 0xfa, 0xc4, 0xa1, 0x61, 0x3e, 0x06, 0x97, 0x06, 0xb6,
	0xd1, 0x9c, 0xdd, 0x0e, 0xc9, 0x5f, 0x3f, 0x34, 0xcc, 0xb7, 0xc2, 0x95, 0x01, 0xb2, 0xc4, 0x57,
	0xbb, 0xe4, 0xa7, 0x0e, 0x79, 0x70, 0xaf, 0x6a, 0xb8, 0x5d, 0x05, 0xc2, 0xa4, 0xf0, 0xa7, 0x07,
	0xf3, 0x31, 0x31, 0xfc, 0x1b, 0x7d, 0x0a, 0xed, 0x26, 0x83, 0xc1, 0x93, 0xc3, 0x9f, 0x39, 0x34,
	0xcc, 0x4b, 0x30, 0x9d, 0x07, 0xe0, 0x09, 0xe9, 0xcf, 0x0e, 0x66, 0xcf, 0xba, 0x2e, 0xf9, 0xb9,
	0x43, 0xc3, 0x7c, 0x1b, 0x5c, 0xcd, 0x6f, 0xde, 0x0f, 0xd8, 0x3c, 0xed, 0x52, 0x8b, 0x87, 0x92,
	0xcf, 0x1c, 0x1a, 0x66, 0x1d, 0x1e, 0xcf, 0x03, 0xaa, 0xdb, 0xaa, 0x18, 0xfb, 0xd9, 0xc1, 0x8d,
	0xe2, 0x78, 0xf2, 0xc1, 0x44, 0x23, 0xfe, 0xc2, 0xa1, 0x61, 0x5e, 0x80, 0xb3, 0x1a, 0x10, 0x47,
	0x11, 0xb7, 0x17, 0xbf, 0x72, 0x68, 0x98, 0x4f, 0xc1, 0x13, 0x79, 0x8d, 0x60, 0x8a, 0x83, 0xff,
	0xcc, 0xa0, 0x7a, 0xfc, 0xf5, 0x37, 0x0c, 0xf3, 0x59, 0xa8, 0xe7, 0x81, 0x31, 0x0c, 0xf7, 0xd7,
	0xf8, 0x8d, 0x37, 0x06, 0xda, 0x65, 0x8b, 0xee, 0x93, 0xdf, 0x7c, 0xc3, 0x30, 0xaf, 0xc4, 0xb3,
	0x30, 0xc5, 0x9e, 0xf7, 0xbb, 0x5d, 0x16, 0x90, 0xdf, 0x7a, 0x23, 0xeb, 0xb7, 0xa9, 0x81, 0x13,
	0xa3, 0xd3, 0x5c, 0xa2, 0x41, 0x87, 0x7c, 0xe1, 0x0d, 0xc3, 0xac, 0x82, 0x29, 0xa1, 0x6b, 0x7e,
	0x80, 0x70, 0x3e, 0xdb, 0x7e, 0xfe, 0x81, 0xde, 0x8d, 0x38, 0x94, 0x45, 0x33, 0xdc, 0xa4, 0x5d,
	0x31, 0xd7, 0x8e, 0x1e, 0x64, 0xe7, 0x9a, 0x26, 0x08, 0xa6, 0x2e, 0xe8, 0x46, 0xf7, 0x4f, 0x84,
	0xa1, 0x37, 0x7d, 0xea, 0x41, 0xd6, 0x6b, 0xb3, 0x30, 0xe1, 0x54, 0x9f, 0x7e, 0x90, 0x9d, 0xba,
	0x59, 0x1c, 0x77, 0x9e, 0xcf, 0x3c, 0x18, 0x68, 0x82, 0xf8, 0x4a, 0xde, 0x0a, 0x18, 0x0d, 0x19,
	0xf9, 0xec, 0x83, 0x81, 0xf6, 0x9c, 0xeb, 0x05, 0x36, 0xf3, 0xc8, 0x2f, 0x9c, 0xd8, 0xd8, 0xac,
	0xeb, 0x2e, 0xee, 0x47, 0x01, 0x25, 0xbf, 0xf8, 0xc0, 0x30, 0xa7, 0x61, 0x4a, 0x83, 0x2e, 0x30,
	0xab, 0x39, 0xbb, 0x41, 0x7e, 0xe9, 0x41, 0x76, 0xe6, 0x26, 0xce, 0xde, 0x6d, 0x30, 0xcb, 0xe7,
	0xab, 0xd3, 0xdf, 0x7c, 0x60, 0x98, 0xcf, 0xc0, 0x93, 0x79, 0x20, 0x9e, 0x27, 0xce, 0xd1, 0x60,
	0x9b, 0x06, 0x0e, 0xf5, 0x42, 0xf1, 0xda, 0x9b, 0xfc, 0xf2, 0x60, 0xd3, 0x6e, 0x30, 0x6a, 0xb1,
	0xcd, 0x1d, 0x87, 0xb9, 0x36, 0xf9, 0x3b, 0x0f, 0x0c, 0xf3, 0x49, 0xa8, 0x69, 0xb0, 0x0d, 0x97,
	0xe7, 0xee, 0x81, 0x3a, 0x87, 0x8e, 0x6d, 0xf1, 0x6b, 0x83, 0x35, 0xdd, 0xb4, 0xfc, 0x5e, 0x84,
	0x0b, 0x8e, 0xc8, 0x46, 0xff, 0xee, 0x83, 0x6c, 0x74, 0x68, 0x2e, 0x38, 0x21, 0xdd, 0x76, 0x19,
	0x22, 0xc9, 0xdf, 0x7b, 0xa0, 0x7b, 0x71, 0xb2, 0xb0, 0x35, 0xf1, 0xf6, 0x8b, 0x7c, 0x21, 0x35,
	0xdc, 0x22, 0x9d, 0xc0, 0x50, 0xc5, 0x7b, 0xc0, 0x13, 0x8f, 0x5d, 0x8c, 0x02, 0xaf, 0xbf, 0x5c,
	0xd0, 0xe6, 0x5a, 0x3e, 0x6e, 0xd5, 0x6b, 0x51, 0x2f, 0x0a, 0x0e, 0xc8, 0xe7, 0x5e, 0x2e, 0x68,
	0x91, 0x20, 0x1f, 0x3c, 0x4f, 0xf7, 0xa8, 0x1b, 0x1c, 0x90, 0x5f, 0x7a, 0xb9, 0xa0, 0xa9, 0x3a,
	0x40, 0x80, 0xc0, 0xda, 0xe1, 0xc3, 0x72, 0x8a, 0x66, 0x67, 0x5d, 0x17, 0xe3, 0xc6, 0xe1, 0x2b,
	0x05, 0xf3, 0x9d, 0xf0, 0xf6, 0x53, 0xc9, 0x8b, 0x15, 0x7e, 0xe8, 0x95, 0x82, 0x36, 0xe6, 0xc7,
	0xca, 0x8c, 0xf8, 0x1f, 0x7e, 0xa5, 0x60, 0xbe, 0x03, 0xde, 0x76, 0x0a, 0xb9, 0x11, 0xfe, 0x23,
	0xaf, 0x14, 0xb4, 0x80, 0x97, 0x81, 0xe3, 0xc2, 0x6c, 0x89, 0x70, 0xfb, 0x5d, 0x77, 0x0b, 0xe6,
	0xd3, 0xf0, 0xd6, 0xe3, 0x81, 0xb1, 0xa5, 0x3f, 0x70, 0xf7, 0x98, 0x61, 0x51, 0x68, 0x65, 0xea,
	0xef, 0xbe, 0x7b, 0x8c, 0xfd, 0x62, 0x19, 0x84, 0xad, 0x3f, 0x78, 0xf7, 0x18, 0x73, 0xa4, 0xb1,
	0xa8, 0xdf, 0x07, 0x4f, 0x23, 0x88, 0x1a, 0x9c, 0xff, 0x78, 0xb7, 0xa0, 0xc5, 0xe2, 0x13, 0x74,
	0xc4, 0x1a, 0xff, 0xe9, 0xee, 0x31, 0xc3, 0x99, 0xd1, 0x13, 0x2b, 0xfc, 0xe7, 0xbb, 0x05, 0x2d,
	0x49, 0xc9, 0x54, 0x58, 0xe9, 0xa2, 0xa9, 0xff, 0xfe, 0xc7, 0x8e, 0x19, 0x93, 0x95, 0x6e, 0x62,
	0xe5, 0x5f, 0xff, 0x58, 0x61, 0xf0, 0x24, 0x59, 0xe9, 0xc6, 0x06, 0xfe, 0x8d, 0x8f, 0x15, 0xb4,
	0x38, 0x90, 0xd3, 0xa9, 0xb0, 0xed, 0x3f, 0x38, 0xa1, 0x39, 0x65, 0xa6, 0x9f, 0x7d, 0xf5, 0x18,
	0x9b, 0x6a, 0xf2, 0x21, 0xf8, 0xe7, 0x5e, 0x3d, 0x66, 0x70, 0x13, 0x19, 0x11, 0xfb, 0xc9, 0x57,
	0x8f, 0x99, 0x73, 0xb1, 0x9c, 0x08, 0xfd, 0xf9, 0x57, 0x8f, 0x51, 0x09, 0xaf, 0xaf, 0xd0, 0x94,
	0x1f, 0x7d, 0xed, 0x98, 0xde, 0x05, 0x2c, 0xb6, 0xe6, 0xcb, 0xaf, 0x1d, 0xd3, 0xbb, 0xc0, 0x2a,
	0x83, 0xbe, 0xf2, 0x5a, 0x41, 0x8b, 0x98, 0xf9, 0xbd, 0x0b, 0x9b, 0xde, 0x7d, 0xed, 0x98, 0x69,
	0x23, 0xa6, 0x23, 0x3e, 0x42, 0x17, 0x39, 0xe0, 0x57, 0x5e, 0xcb, 0x1f, 0xf9, 0x79, 0x1a, 0x46,
	0x2b, 0x8c, 0xba, 0x71, 0x20, 0x7e, 0xf3, 0xb5, 0x7c, 0xf5, 0x45, 0x44, 0x8f, 0x61, 0xff, 0xec,
	0xaf, 0xe6, 0xab, 0x34, 0x1b, 0xbf, 0x1a, 0x8f, 0xa1, 0xbf, 0xfc, 0x83, 0xf9, 0x83, 0x8a, 0x29,
	0x76, 0xd0, 0x39, 0x68, 0xe0, 0x66, 0x52, 0x82, 0x3f, 0xff, 0x83, 0x83, 0xdb, 0x5d, 0xa0, 0x1d,
	0x1d, 0xfa, 0x3d, 0xf7, 0x0a, 0xe6, 0x75, 0x78, 0x3a, 0x5f, 0x04, 0x7c, 0x24, 0x36, 0x1b, 0xed,
	0x66, 0xea, 0xfc, 0xc5, 0x7b, 0x05, 0xf3, 0x39, 0x78, 0x47, 0x6e, 0x1d, 0x5c, 0x5d, 0x58, 0xd0,
	0x5f, 0xe9, 0x43, 0xf7, 0xfa, 0x65, 0x12, 0x10, 0x7b, 0xee, 0x40, 0x3e, 0xef, 0x96, 0xd0, 0x0f,
	0xdf, 0xcb, 0x8f, 0x91, 0xca, 0x15, 0x32, 0x2d, 0x7f, 0xef, 0xbd, 0xfc, 0x31, 0x94, 0xde, 0x90,
	0x41, 0x7f, 0xdf, 0xbd, 0x7c, 0x43, 0x0a, 0x87, 0x58, 0x15, 0x68, 0x05, 0xfe, 0xfe, 0x7b, 0xf9,
	0xf1, 0x43, 0xa0, 0xb6, 0x7c, 0x25, 0x51, 0xdc, 0xfa, 0xef, 0xde, 0xcb, 0x8f, 0x7f, 0xaa, 0x82,
	0x94, 0x29, 0xc6, 0x7f, 0x71, 0x80, 0xaa, 0x0a, 0x2f, 0xa5, 0x52, 0xf0, 0x07, 0xc7, 0xc2, 0xd5,
	0xfe, 0x28, 0x86, 0x7f, 0xe9, 0xde, 0x49, 0x7e, 0xb0, 0xc0, 0x24, 0xf4, 0x37, 0x3f, 0x9e, 0x2f,
	0x78, 0xda, 0xe6, 0x76, 0x8c, 0xff, 0xad, 0x8f, 0xe7, 0x4b, 0x92, 0x32, 0x7a, 0x02, 0xff, 0xc2,
	0xc7, 0xf3, 0xc7, 0x48, 0xe8, 0x97, 0x45, 0xff, 0xf6, 0xc7, 0xf3, 0x9d, 0x72, 0x4e, 0x7a, 0xcc,
	0x5c, 0xe2, 0x9a, 0xb1, 0xae, 0x47, 0x87, 0xf9, 0x8b, 0xc3, 0x1c, 0x93, 0x2e, 0xc9, 0xec, 0x8c,
	0x27, 0xdc, 0x3f, 0xec, 0xf7, 0x84, 0xb9, 0x41, 0x3e, 0xf9, 0xa9, 0xc3, 0xe3, 0x45, 0xb2, 0xe7,
	0x0e, 0x62, 0x53, 0x29, 0x35, 0x3e, 0x7d, 0x58, 0x30, 0xaf, 0xc1, 0x53, 0xc7, 0xd5, 0x51, 0xe6,
	0x52, 0x55, 0x3e, 0x33, 0x50, 0x8b, 0xb8, 0x8a, 0x34, 0x99, 0xaa, 0xf1, 0xd9, 0xc3, 0xc2, 0x09,
	0x09, 0x35, 0xdf, 0xac, 0xfd, 0xf3, 0xa3, 0x93, 0x50, 0xcb, 0xac, 0x43, 0xfe, 0xc5, 0x51, 0x21,
	0x93, 0x4b, 0xf3, 0x60, 0xee, 0xbb, 0xbd, 0x88, 0x2d, 0xf8, 0x1d, 0xea, 0x78, 0xe4, 0x5f, 0x1e,
	0xe9, 0x13, 0xe2, 0xc4, 0x14, 0xf7, 0x3a, 0xf9, 0x57, 0x47, 0x85, 0xcc, 0xae, 0x38, 0xd9, 0xdd,
	0xc9, 0xb3, 0xf5, 0x7f, 0x7d, 0x54, 0xc8, 0x6c, 0x44, 0x45, 0xb6, 0x2a, 0x77, 0xcd, 0xd7, 0xc8,
	0xbf, 0x39, 0x1e, 0x70, 0x9d, 0xfc, 0xdb, 0x23, 0xdd, 0xd0, 0x69, 0xed, 0xf0, 0x3f, 0x59, 0x1b,
	0x8c, 0x79, 0x2d, 0x3f, 0xb0, 0x92, 0x5d, 0xe7, 0xbf, 0x3b, 0x2a, 0x0c, 0xda, 0x75, 0xea, 0xfb,
	0x95, 0x97, 0xba, 0xcc, 0x23, 0xff, 0xfe, 0xa8, 0x90, 0x49, 0xc0, 0x73, 0x4c, 0x8c, 0xc8, 0x37,
	0x4e, 0x44, 0x2e, 0xb3, 0x0e, 0x22, 0xff, 0xc3, 0xd1, 0x31, 0x4b, 0x94, 0xcc, 0x03, 0x37, 0x1d,
	0xd6, 0x66, 0xe4, 0xbf, 0x1c, 0x9d, 0x9c, 0x31, 0xde, 0xa6, 0x91, 0xb5, 0xb3, 0x85, 0x77, 0x12,
	0xbf, 0x7b, 0x74, 0xcc, 0x32, 0xa9, 0x52, 0x1e, 0xd1, 0xf2, 0x17, 0x8f, 0x4e, 0x91, 0xac, 0x69,
	0x4d, 0x3f, 0x48, 0x39, 0x51, 0xff, 0xfa, 0x2f, 0x5a, 0xfd, 0xd2, 0xd1, 0xf1, 0x59, 0x82, 0xd6,
	0xe0, 0xef, 0x1d, 0x1d, 0x93, 0x49, 0x89, 0x75, 0x5a, 0xb4, 0xf9, 0xfb, 0x29, 0x2f, 0xd2, 0xd6,
	0x53, 0x74, 0x03, 0x0e, 0x24, 0x7f, 0x30, 0x40, 0x38, 0xf5, 0xac, 0x47, 0xa0, 0xfe, 0xeb, 0xd1,
	0x89, 0xe9, 0xba, 0x58, 0xef, 0x65, 0x7e, 0xf0, 0x87, 0x47, 0xf9, 0x09, 0x8a, 0x5a, 0x72, 0xf5,
	0x08, 0xf4, 0x47, 0x47, 0xf9, 0x31, 0x2e, 0x51, 0x58, 0x47, 0x7f, 0xf9, 0xa8, 0x60, 0xde, 0x80,
	0x77, 0x1e, 0x83, 0xde, 0xf2, 0x73, 0xe2, 0xf4, 0x1f, 0x0f, 0xa8, 0xc6, 0xa1, 0x5b, 0x7e, 0x52,
	0x39, 0x13, 0xeb, 0xbe, 0x72, 0x94, 0xbf, 0x90, 0x0d, 0xac, 0xf0, 0xa6, 0x9c, 0x52, 0xb9, 0xc7,
	0x91, 0x68, 0xad, 0x6b, 0xd7, 0x6f, 0xc4, 0xb2, 0x71, 0x0f, 0x27, 0x5f, 0x3d, 0xb9, 0xca, 0x73,
	0xcf, 0xa5, 0xab, 0x7c, 0xed, 0x14, 0xbd, 0xbc, 0x0b, 0x3d, 0xd1, 0x96, 0xf3, 0x88, 0x7c, 0xfd,
	0x14, 0xbd, 0xdc, 0x48, 0x57, 0xf9, 0x6f, 0x72, 0xd0, 0x8f, 0xeb, 0xe5, 0x05, 0x31, 0x36, 0x88,
	0xff, 0xef, 0x27, 0xe3, 0x9f, 0x7b, 0x5e, 0xc3, 0xff, 0x8f, 0x53, 0xb4, 0x7f, 0x5d, 0xc3, 0xff,
	0xcf, 0x53, 0xb4, 0xff, 0xac, 0x86, 0xff, 0x5f, 0xa7, 0x68, 0xff, 0xdb, 0x34, 0xfc, 0xc3, 0x53,
	0xb4, 0xaf, 0xeb, 0xfb, 0xbf, 0x4f, 0x36, 0xe9, 0x8d, 0x17, 0xd2, 0x03, 0xf7, 0x5d, 0xf7, 0x4f,
	0xae, 0xf2, 0x5c, 0x7a, 0x14, 0x3e, 0x70, 0xff, 0x44, 0xa9, 0x6e, 0xe8, 0x56, 0xfd, 0xee, 0x53,
	0xe0, 0xaf, 0x69, 0xf8, 0x0f, 0x9e, 0x02, 0xaf, 0x5b, 0xe9, 0x7b, 0xee, 0x0f, 0xd8, 0x26, 0xf9,
	0xc9, 0x2a, 0x96, 0xa4, 0xbc, 0xf7, 0xf3, 0x97, 0xff, 0x65, 0x1e, 0x5d, 0x42, 0xc7, 0xf7, 0x44,
	0xec, 0x50, 0x78, 0xdc, 0xdc, 0x7c, 0xe8, 0x7e, 0x7e, 0x9a, 0x1c, 0xd7, 0x91, 0x21, 0x36, 0x55,
	0xe9, 0xc3, 0xf7, 0xf3, 0x03, 0x54, 0x52, 0x29, 0x93, 0xfc, 0x9e, 0x0e, 0x1f, 0xc7, 0x8f, 0xef,
	0xbb, 0x9f, 0x1f, 0x08, 0x84, 0xfc, 0xf3, 0x4e, 0x94, 0xcd, 0x97, 0xbf, 0xff, 0x7e, 0xff, 0x42,
	0x75, 0x93, 0x7a, 0x3d, 0xea, 0x62, 0x82, 0x34, 0xbf, 0x10, 0x37, 0xfd, 0x97, 0xee, 0x17, 0xcc,
	0x17, 0xe0, 0xd9, 0xbc, 0x0c, 0x7f, 0xcb, 0x5f, 0x67, 0xbd, 0x28, 0xa0, 0x6e, 0x5e, 0xe6, 0xf6,
	0x97, 0x73, 0x6c, 0xdb, 0x5f, 0x2f, 0x9d, 0x8e, 0xfd, 0x95, 0x9c, 0xc1, 0x8b, 0x33, 0x24, 0x59,
	0x27, 0x06, 0x7f, 0x64, 0xb0, 0x60, 0x31, 0x38, 0x4f, 0xb0, 0x1f, 0x18, 0x2c, 0x98, 0x56, 0x2f,
	0x2d, 0xd8, 0x47, 0xef, 0xf7, 0xaf, 0x7e, 0xf2, 0x16, 0x69, 0xd5, 0xbe, 0xf1, 0xec, 0xb3, 0xd7,
	0x62, 0xf3, 0x92, 0x97, 0x4f, 0x80, 0x5e, 0x4f, 0xa0, 0xaf, 0xdc, 0x1f, 0x9c, 0xe0, 0x88, 0xbc,
	0x02, 0xcf, 0xfc, 0xb5, 0xf3, 0x61, 0x72, 0xf7, 0xfe, 0xc0, 0xc4, 0x6b, 0x99, 0x45, 0xf8, 0xd8,
	0xe1, 0x63, 0xf7, 0x0b, 0x83, 0x0e, 0x35, 0xe3, 0x63, 0x6d, 0xf2, 0x6a, 0xca, 0xd2, 0x39, 0x20,
	0x35, 0xc5, 0x16, 0x3d, 0x9b, 0x7c, 0xfe, 0xf5, 0x82, 0x76, 0xaa, 0x98, 0x3e, 0x75, 0xe6, 0xfc,
	0x5f, 0x7d, 0xbd, 0x60, 0x5e, 0x8c, 0xaf, 0xa7, 0xf0, 0x00, 0x3d, 0xb9, 0xba, 0xfa, 0x5b, 0xaf,
	0xeb, 0x9b, 0xe6, 0x98, 0xd9, 0xbc, 0xc9, 0xf8, 0x4e, 0x38, 0xce, 0xdc, 0xfe, 0xf6, 0xeb, 0x7a,
	0x92, 0x9a, 0xc0, 0x96, 0x5c, 0xda, 0x16, 0x67, 0x9b, 0x5f, 0x7c, 0xa8, 0xab, 0x9e, 0x20, 0x66,
	0xc3, 0xd0, 0x09, 0xf1, 0xdd, 0x14, 0x79, 0x30, 0x00, 0xa2, 0xb6, 0x50, 0x2b, 0x1b, 0xe4, 0x4b,
	0x0f, 0xf5, 0x84, 0xa2, 0x1f, 0x22, 0x12, 0x8a, 0xdf, 0x1b, 0x80, 0x4a, 0xdf, 0x71, 0xfc, 0xfe,
	0x43, 0xdd, 0xd2, 0xfd, 0x6d, 0xe1, 0xbd, 0xc4, 0x1f, 0x3c, 0xd4, 0xcf, 0x77, 0x12, 0x50, 0x72,
	0xcf, 0x20, 0x73, 0x98, 0x87, 0xf9, 0x06, 0x68, 0x50, 0xd7, 0x3d, 0x40, 0xed, 0xfe, 0xf0, 0xa1,
	0x3e, 0x67, 0x13, 0x04, 0x9f, 0xde, 0x88, 0x8a, 0x05, 0xfb, 0xa3, 0x87, 0x7a, 0x8c, 0x4a, 0x90,
	0xf1, 0xed, 0xa9, 0x96, 0x18, 0x25, 0xa9, 0xcb, 0xc3, 0x82, 0xf9, 0x3c, 0x3c, 0x73, 0x42, 0xa5,
	0x4c, 0x74, 0x23, 0x7f, 0xfc, 0x50, 0x8f, 0x3c, 0x83, 0x6a, 0xad, 0x6c, 0x24, 0x39, 0xcb, 0x43,
	0x3d, 0xf7, 0x1a, 0x54, 0x41, 0xd8, 0xe4, 0xcd, 0x01, 0x36, 0x99, 0xeb, 0x05, 0x9e, 0x40, 0x7c,
	0x75, 0x40, 0xf7, 0x22, 0x50, 0xfa, 0x9e, 0x32, 0x49, 0xdc, 0xfd, 0xd7, 0x1e, 0xea, 0x79, 0x77,
	0x66, 0x38, 0xb8, 0xb3, 0xa5, 0x1d, 0xe1, 0xeb, 0x0f, 0x0b, 0xda, 0xcd, 0x67, 0x0c, 0xe7, 0x5e,
	0xff, 0xdb, 0x1f, 0x2a, 0x9a, 0x67, 0x61, 0x42, 0x9b, 0x42, 0x9c, 0xfa, 0x0f, 0x3f, 0x54, 0xbc,
	0x50, 0x20, 0x46, 0xfd, 0xa7, 0x46, 0x00, 0xc4, 0xe4, 0x97, 0x3f, 0x11, 0x43, 0x76, 0x93, 0x62,
	0x53, 0x5e, 0xf5, 0x5e, 0x82, 0x19, 0x8d, 0x9a, 0xde, 0x6a, 0x11, 0x23, 0xc3, 0x4e, 0x58, 0x4b,
	0x7e, 0x10, 0xc9, 0x17, 0x19, 0x09, 0xfb, 0xb6, 0xe3, 0xda, 0x1b, 0xb7, 0x36, 0x48, 0x31, 0x43,
	0x97, 0x91, 0x44, 0xbe, 0x18, 0xd3, 0xe8, 0xb8, 0x85, 0xda, 0x74, 0xbc, 0x36, 0x3e, 0x19, 0x48,
	0x57, 0xda, 0xa0, 0x61, 0xb8, 0xde, 0xb5, 0xe4, 0x9b, 0xbc, 0x34, 0x5d, 0xac, 0xc4, 0xa4, 0x8c,
	0xef, 0x88, 0x12, 0xd6, 0x16, 0xeb, 0x74, 0x5d, 0xc6, 0x2b, 0x8d, 0x66, 0x7a, 0x12, 0x1c, 0x59,
	0x0d, 0x32, 0xd5, 0x62, 0xbb, 0x93, 0x8a, 0xb8, 0xe8, 0x4f, 0x73, 0x84, 0x94, 0x64, 0x0c, 0x5f,
	0xc4, 0x24, 0x3c, 0x71, 0x73, 0xb1, 0xe2, 0xbb, 0xb6, 0x7c, 0xb9, 0x30, 0x9e, 0x31, 0x16, 0xbe,
	0xa8, 0x76, 0x2c, 0x19, 0x78, 0xc9, 0x04, 0xbe, 0x60, 0xd2, 0xea, 0xf7, 0x3a, 0x1d, 0xdf, 0x53,
	0xdc, 0xc9, 0x4c, 0xe5, 0xc5, 0x7d, 0xd5, 0xc3, 0x8e, 0xef, 0xda, 0x84, 0x64, 0x2a, 0x73, 0xf6,
	0xa2, 0xc7, 0x3a, 0x07, 0x38, 0x0e, 0x53, 0x39, 0x95, 0x97, 0x03, 0xbf, 0xd7, 0xc5, 0xb9, 0x4d,
	0xcc, 0x8c, 0x56, 0x5b, 0x01, 0x6d, 0xb5, 0x1c, 0xeb, 0xfd, 0x9e, 0x13, 0x91, 0x33, 0xf8, 0x4e,
	0x4f, 0xb3, 0xae, 0x78, 0x01, 0x91, 0xfc, 0x2f, 0x3a, 0x39, 0x6b, 0x3e, 0x06, 0x97, 0x07, 0x20,
	0x1a, 0xcc, 0xf5, 0x2d, 0x9e, 0xf2, 0x9c, 0xcb, 0x48, 0x20, 0x41, 0x4a, 0xbb, 0xf3, 0x19, 0x09,
	0x54, 0x1b, 0x7e, 0x18, 0x92, 0x69, 0xb3, 0x06, 0x8f, 0xf6, 0xf3, 0xe2, 0xf7, 0xc9, 0x8e, 0xef,
	0x91, 0x6a, 0x16, 0x13, 0x38, 0x7b, 0x34, 0x62, 0x0d, 0x6a, 0xd3, 0x40, 0xf5, 0x31, 0x63, 0x5e,
	0x85, 0x4b, 0x3a, 0xa6, 0xb7, 0xed, 0x3a, 0x56, 0x0a, 0x72, 0x21, 0xe3, 0x62, 0xeb, 0x5d, 0x0b,
	0xed, 0x77, 0xb1, 0xfe, 0xa7, 0xe1, 0xec, 0x3a, 0xbb, 0x13, 0xbf, 0x66, 0x8a, 0x98, 0x15, 0xc9,
	0x5f, 0xcb, 0x9b, 0xd9, 0xcd, 0x63, 0xc8, 0xc9, 0xc3, 0x7b, 0xcc, 0x63, 0xcf, 0x53, 0xcf, 0x62,
	0x2e, 0xb3, 0x89, 0x51, 0xff, 0x33, 0x30, 0xd1, 0x60, 0x2d, 0xc7, 0x63, 0xf6, 0xbc, 0xef, 0x85,
	0xbd, 0x0e, 0xc3, 0x07, 0x2c, 0xf8, 0x2a, 0x45, 0x36, 0x32, 0x05, 0xe3, 0xa2, 0xfc, 0xbe, 0x1e,
	0x75, 0xb9, 0x23, 0x19, 0xe8, 0x9f, 0x3a, 0x69, 0xd6, 0xb3, 0x79, 0xb3, 0xa4, 0xa0, 0x55, 0xa6,
	0x1d, 0x46, 0x8a, 0xf5, 0x5f, 0xd1, 0x7f, 0xfc, 0x07, 0x45, 0xe6, 0x2a, 0xa6, 0x28, 0xb2, 0x9b,
	0x3e, 0xfa, 0x6c, 0xd0, 0x09, 0xf5, 0xbe, 0x14, 0x7d, 0x85, 0xb9, 0x1d, 0xc6, 0x27, 0xf7, 0x34,
	0x0f, 0x3a, 0x99, 0x1a, 0x7e, 0x40, 0x8a, 0xfd, 0x8c, 0x0d, 0xea, 0x45, 0x21, 0x19, 0xea, 0x67,
	0xcc, 0xf9, 0x7e, 0x14, 0x92, 0xe1, 0xfe, 0x4e, 0x96, 0x5d, 0x7f, 0x8f, 0x85, 0x64, 0xa4, 0xbe,
	0x22, 0x7e, 0x77, 0x27, 0x7e, 0x20, 0xa6, 0x0a, 0x52, 0xea, 0x33, 0x30, 0x19, 0x93, 0xe4, 0xf4,
	0x15, 0xef, 0x87, 0x15, 0x51, 0x8d, 0x6d, 0xa1, 0xfe, 0x5e, 0x18, 0x97, 0xcf, 0x24, 0xa3, 0x24,
	0xe0, 0xc5, 0x14, 0x91, 0x84, 0x91, 0xb7, 0xa0, 0x28, 0x31, 0x95, 0xcf, 0x14, 0xf1, 0x03, 0x29,
	0xc4, 0xa8, 0xff, 0x74, 0x11, 0x26, 0xd4, 0xc3, 0x12, 0x4c, 0x3c, 0xc2, 0x58, 0x22, 0xed, 0x6d,
	0xcc, 0x24, 0x54, 0x62, 0xd2, 0xda, 0x1e, 0x31, 0x52, 0x18, 0x9e, 0x6f, 0xc8, 0xf7, 0x52, 0x8a,
	0xb4, 0xb8, 0xdf, 0x95, 0xef, 0xa5, 0xe2, 0xe7, 0x50, 0x6b, 0x7b, 0x64, 0x28, 0x79, 0x20, 0xc5,
	0xe5, 0x20, 0xc3, 0xb1, 0xb4, 0xaa, 0x19, 0xf1, 0xd4, 0xd3, 0x84, 0x09, 0x81, 0x52, 0x3f, 0xfc,
	0x43, 0x4a, 0x31, 0x4d, 0x3c, 0xf5, 0x13, 0x6f, 0x69, 0xf9, 0xe8, 0x2a, 0x5a, 0xfc, 0x53, 0x21,
	0xf2, 0x6d, 0xb2, 0x4e, 0x4f, 0x1e, 0x61, 0x42, 0x6c, 0xdb, 0xcd, 0xf8, 0x07, 0x6f, 0xe4, 0x73,
	0x2a, 0x4d, 0x8c, 0x36, 0xd3, 0x9f, 0x53, 0x29, 0x1a, 0x4a, 0xb3, 0xb6, 0x47, 0xc6, 0x33, 0xb2,
	0xdc, 0xc1, 0x38, 0xa7, 0x6b, 0x22, 0x9f, 0xf8, 0x90, 0xc9, 0x94, 0x99, 0xd6, 0x9c, 0x16, 0x93,
	0x2f, 0xa7, 0xd4, 0x35, 0x83, 0xb8, 0x95, 0x20, 0x53, 0xf8, 0x96, 0x4e, 0x11, 0xd5, 0xaf, 0xd7,
	0x10, 0x13, 0x9f, 0x97, 0x71, 0xf2, 0x9a, 0x4f, 0x6d, 0x72, 0xa6, 0xbe, 0x23, 0x86, 0x4a, 0xfc,
	0xda, 0x50, 0xfc, 0x42, 0x37, 0x21, 0x69, 0xef, 0x0b, 0x13, 0xa2, 0x10, 0xd0, 0x88, 0x8d, 0x25,
	0xa8, 0x4a, 0xc4, 0x42, 0xa6, 0x09, 0x14, 0xb2, 0x58, 0xff, 0x88, 0x01, 0x93, 0x9c, 0x28, 0xa7,
	0x22, 0xf6, 0xa5, 0x7c, 0x48, 0xa3, 0x69, 0x4f, 0x82, 0x35, 0x8e, 0xfc, 0xaf, 0x1a, 0x62, 0xc4,
	0x36, 0x94, 0x8c, 0xc5, 0x7d, 0x8b, 0xb9, 0x2e, 0x1f, 0x87, 0x42, 0xac, 0xb1, 0x62, 0xb9, 0x4e,
	0xc4, 0xe4, 0x1a, 0xaa, 0x91, 0xd7, 0x58, 0x9b, 0x79, 0x36, 0x19, 0xaa, 0xdf, 0x80, 0xf1, 0xd4,
	0x4f, 0xac, 0xa0, 0x47, 0x26, 0xb7, 0x2a, 0x72, 0xd2, 0x70, 0x42, 0xca, 0xbb, 0x0f, 0x0d, 0x98,
	0xcc, 0xfc, 0xd4, 0x09, 0xea, 0x91, 0xa1, 0x49, 0x3d, 0xf8, 0xf2, 0x99, 0xe1, 0xf0, 0x2f, 0xc7,
	0x6b, 0x13, 0x03, 0xd7, 0xa2, 0x9c, 0x6a, 0x0b, 0x8c, 0xaa, 0xd7, 0xe4, 0x19, 0x2e, 0xfe, 0xe0,
	0xd2, 0x2e, 0x29, 0xe6, 0x75, 0x38, 0xd7, 0x0b, 0x0f, 0xc8, 0x50, 0xfd, 0xc3, 0x05, 0x98, 0x5a,
	0x66, 0x9d, 0x79, 0xdf, 0xdb, 0x63, 0x01, 0xdf, 0x5e, 0xc6, 0x83, 0x9a, 0x90, 0x34, 0xd9, 0x34,
	0x9c, 0xd3, 0x89, 0xef, 0x27, 0x88, 0x21, 0x1e, 0xcd, 0xa7, 0x98, 0xea, 0x8d, 0x54, 0x41, 0x3c,
	0xee, 0x4f, 0xf1, 0x30, 0xd1, 0x0b, 0x65, 0x48, 0x4b, 0xb3, 0xf0, 0x5e, 0x6e, 0x08, 0x75, 0x4d,
	0x33, 0x92, 0x87, 0x52, 0xc3, 0xe8, 0xfe, 0x09, 0xf7, 0x25, 0xc7, 0x25, 0xad, 0x8c, 0xcc, 0xf8,
	0xd4, 0xa5, 0x9d, 0x21, 0xe2, 0xc3, 0x96, 0x1d, 0xf1, 0x7f, 0x10, 0x31, 0x51, 0xec, 0xae, 0x9c,
	0xfa, 0x7b, 0x61, 0x4a, 0x2c, 0x51, 0xb7, 0x1c, 0x0b, 0x93, 0x51, 0x6e, 0x08, 0xee, 0xfe, 0x73,
	0xb7, 0xb6, 0x9a, 0x0b, 0x01, 0xbd, 0x43, 0xde, 0x62, 0x8e, 0x41, 0x19, 0x8b, 0xb7, 0x1d, 0x8f,
	0x18, 0x31, 0x73, 0xcd, 0xe7, 0x6e, 0x5c, 0xff, 0x09, 0x03, 0xa6, 0xfa, 0x7e, 0xd0, 0x05, 0x0d,
	0xd3, 0x47, 0xd5, 0x2c, 0xda, 0xc7, 0x9b, 0x93, 0x8f, 0x41, 0xb9, 0x05, 0x72, 0x2a, 0xa2, 0xaf,
	0x15, 0xf2, 0x9b, 0xe5, 0xc9, 0x31, 0x29, 0xe6, 0xd7, 0x6c, 0xb0, 0x2e, 0x75, 0x02, 0x32, 0x54,
	0xdf, 0x4e, 0x49, 0x29, 0xfe, 0x75, 0x33, 0xdb, 0x9c, 0xa0, 0x6a, 0x2b, 0x58, 0x1f, 0x4f, 0x4e,
	0xad, 0x9c, 0x3a, 0x11, 0x29, 0xd4, 0xbf, 0x5d, 0xfc, 0x27, 0xb2, 0x7a, 0xb5, 0x8c, 0x53, 0x4d,
	0x27, 0xc4, 0xef, 0x1d, 0xd3, 0xe4, 0x17, 0xd1, 0x97, 0xea, 0x7f, 0x5e, 0xfc, 0xb7, 0x7c, 0xfc,
	0x1f, 0x84, 0x28, 0x41, 0x8a, 0xb2, 0xde, 0x73, 0xf9, 0x84, 0xe3, 0x52, 0xa7, 0xe8, 0x9a, 0x43,
	0xf6, 0xd5, 0xc1, 0x53, 0xfa, 0x02, 0x3e, 0x9f, 0x4e, 0xd1, 0xf1, 0xfd, 0xcb, 0x4d, 0xf1, 0x6f,
	0x83, 0xa4, 0x58, 0x3f, 0x80, 0x89, 0xf4, 0x3f, 0xfa, 0x61, 0x04, 0x9d, 0xdf, 0x71, 0x58, 0x4b,
	0x45, 0x15, 0x91, 0x3b, 0xdc, 0x72, 0x2c, 0x26, 0x29, 0xd7, 0xe4, 0x72, 0xa4, 0x91, 0xae, 0xcb,
	0x2c, 0x5d, 0x6c, 0x51, 0xa9, 0x17, 0xc5, 0xd0, 0x62, 0x2e, 0xfd, 0x3a, 0x19, 0xaa, 0xb7, 0x60,
	0x66, 0xe0, 0x3f, 0x8b, 0x61, 0x26, 0x36, 0x90, 0x2b, 0xed, 0xf9, 0x04, 0x5c, 0x1d, 0x8c, 0x89,
	0xe3, 0x48, 0xfd, 0x25, 0x80, 0xdb, 0x54, 0xbd, 0xc4, 0x8d, 0xdf, 0xd1, 0xa6, 0x5a, 0xe2, 0x23,
	0x93, 0x10, 0xe5, 0xeb, 0x62, 0x23, 0x43, 0x96, 0x2e, 0x55, 0xa8, 0x7f, 0x27, 0x98, 0xc9, 0x3f,
	0x46, 0xcd, 0xfb, 0x5e, 0xcb, 0x69, 0xe3, 0x6f, 0x96, 0x4e, 0xaa, 0x7f, 0xf5, 0xa0, 0xd6, 0x8e,
	0x6c, 0xb8, 0xca, 0x27, 0x7c, 0x4c, 0x14, 0x2d, 0xac, 0xda, 0xe4, 0x27, 0xd7, 0xcd, 0x69, 0x30,
	0x35, 0xce, 0x7c, 0x40, 0x5b, 0xd1, 0xaa, 0x4d, 0x3e, 0xb1, 0xbe, 0x3d, 0x82, 0xff, 0x4a, 0xf7,
	0xdc, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x95, 0x81, 0xa5, 0x79, 0xc7, 0x59, 0x00, 0x00,
}
