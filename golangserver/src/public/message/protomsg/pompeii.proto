syntax = "proto3";
import "msg_common_pompeii.proto";
import "msg_common.proto";


package protomsg;

// GS->CL (登录, 变更)通知各种状态
message MsgGS2CLPompeiiStatusNotice {
    repeated PompeiiActStageInfo stage_info = 1;    // 各阶段信息
    PompeiiActStage cur_stage = 2;    // 当前所处的阶段
    bool is_guild_auth = 3;    // 本公会是否有参赛资格
    bool is_regist_list_not_full = 4;    // 报名成员列表未满
    bool is_regist_available = 5;    // 报名可用
    int32 regist_round = 6;    // 参加的场次
}


// CL->GS 请求主UI信息
message MsgCL2GSPompeiiGetMainUiRequest {
}


// GS->CL 响应主UI信息
message MsgGS2CLPompeiiGetMainUiReply {
    int32 error_code = 1;
    int32 regist_round = 2;    // 参加的场次
    int64 round_begin_time = 3;    // 参加的场次开始时间
    PompeiiRegistMemberStatus regist_status = 4;    // 我的报名状态
}



// CL->GS 请求往届赛季公会战绩
message MsgCL2GSPompeiiGetPreGuildResultRequest
{
}


// GS->CL 响应往届赛季公会战绩
message MsgGS2CLPompeiiGetPreGuildResultReply
{
    int32 error_code                            = 1;
    repeated PompeiiGuildResult guild_result    = 2;
}


// CL->GS 请求提交报名
message MsgCL2GSPompeiiSubmitRegistRequest
{
    int32 regist_round  = 1;    // 参加的场次
}


// GS->CL 响应提交报名
message MsgGS2CLPompeiiSubmitRegistReply
{
    int32 error_code    = 1;
    int32 regist_round  = 2;
}


// CL->GS 请求获取报名细节信息
message MsgCL2GSPompeiiGetRegistDetailRequest
{
}


// GS->CL 响应获取报名细节信息
message MsgGS2CLPompeiiGetRegistDetailReply
{
    int32 error_code                                = 1;
    repeated PompeiiRegistMemberInfo member_info    = 2;
}


// CL->GS 请求更新报名细节信息
message MsgCL2GSPompeiiSetupRegistDetailRequest
{
    repeated PompeiiRegistMemberInfo member_info    = 1;
}


// GS->CL 响应更新报名细节信息
message MsgGS2CLPompeiiSetupRegistDetailReply
{
    int32 error_code                                = 1;
    repeated PompeiiRegistMemberInfo member_info    = 2;
}


// CL->GS 请求获取配对信息
message MsgCL2GSPompeiiGetPairingInfoRequest
{
}


// GS->CL 响应获取配对信息
message MsgGS2CLPompeiiGetPairingInfoReply
{
    int32 error_code                    = 1;
    PompeiiGetPairingInfoSide blue_side = 2;
    PompeiiGetPairingInfoSide red_side  = 3;
    bool is_end = 4;
}


// CL->GS 请求建立聊天组
message MsgCL2GSPompeiiSetupChatGroupRequest
{
}


// GS->CL 响应建立聊天组
message MsgGS2CLPompeiiSetupChatGroupReply
{
    int32 error_code    = 1;
}


// CL->GS 请求候选人排行榜
message MsgCL2GSPompeiiGetCandidateListRequest
{
}


// GS->CL 响应候选人排行榜
message MsgGS2CLPompeiiGetCandidateListReply
{
    int32 error_code                            = 1;
    repeated PompeiiCandidateListItem list_item = 2;
}

//////////////////////////////////////////////////////////////////////////
///  庞贝的战术板 开始
//////////////////////////////////////////////////////////////////////////

message MsgCL2GSPompeiiEventQueryRequest
{
    uint64 region_id    = 1;
}

message MsgGS2CLPompeiiEventQueryReply
{
    repeated protomsg.PompeiiEventBaseData datas    = 1;
    int32 error_code                                = 99;
}

message MsgGS2CLPompeiiDataNotice
{
    repeated protomsg.PompeiiEventBaseData datas    = 1;
}

message MsgGS2CLPompeiiBuildBattleDataNotice
{
    uint32 config_id    = 1;
    uint32 status       = 2;    // 建筑的状态PompeiiBuildStatus
    bool is_battle      = 3;
    uint64 guild_id     = 4;
}

//////////////////////////////////////////////////////////////////////////
///  庞贝的战术板 结束
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
///  庞贝的怪 开始
//////////////////////////////////////////////////////////////////////////

// boss 刷新通知
message MsgGS2CLPompeiiBossNotice
{
    uint32 monster_id    = 1;
    int64 rebirth_time   = 2; // 重生时间
    vector2d position = 3;
}

//////////////////////////////////////////////////////////////////////////
///  庞贝的怪 结束
//////////////////////////////////////////////////////////////////////////

message MsgCL2GSPompeiiGameDataRequest
{
    uint64 region_id    = 1;
}

message MsgGS2CLPompeiiGameDataReply
{
    PompeiiGameData data = 1;

    int32 error_code      = 99;
}

message MsgCL2GSPompeiiIntoRequest
{
}

message MsgGS2CLPompeiiIntoReply
{
    uint64 region_id = 1;
    int32 error_code      = 99;
}

message MsgCL2GSPompeiiLeaveRequest
{
    uint64 region_id    = 1;
}

message MsgGS2CLPompeiiLeaveReply
{
    int32 error_code      = 99;
}

message MsgCL2GSPompeiiGameBaseDataRequest
{
    uint64 region_id    = 1;
}

message MsgGS2CLPompeiiGameBaseDataReply
{
    PompeiiGameBaseData data = 1;
    int32 error_code         = 99;
}

message MsgGS2CLPompeiiGuildBaseDataNotice
{
    PompeiiGuildBaseData data = 1;
}

message MsgCL2GSPompeiiTempLeaveRequest
{
    uint64 region_id    = 1;
}

message MsgGS2CLPompeiiTempLeaveReply
{
    int32 error_code      = 99;
}

message MsgGS2CLPompeiiEndNotice
{
    uint32     winner_force_id  = 1;
    PompeiiGameRecord      data = 2;
}