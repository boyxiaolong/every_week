// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MsgCL2GSTaskInfoRequest struct {
}

func (m *MsgCL2GSTaskInfoRequest) Reset()                    { *m = MsgCL2GSTaskInfoRequest{} }
func (m *MsgCL2GSTaskInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSTaskInfoRequest) ProtoMessage()               {}
func (*MsgCL2GSTaskInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{0} }

type MsgGS2CLTaskInfoReply struct {
	Chapter *ChapterData `protobuf:"bytes,1,opt,name=chapter" json:"chapter,omitempty"`
	Branch  *BranchData  `protobuf:"bytes,2,opt,name=branch" json:"branch,omitempty"`
	Daily   *DailyData   `protobuf:"bytes,3,opt,name=daily" json:"daily,omitempty"`
}

func (m *MsgGS2CLTaskInfoReply) Reset()                    { *m = MsgGS2CLTaskInfoReply{} }
func (m *MsgGS2CLTaskInfoReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskInfoReply) ProtoMessage()               {}
func (*MsgGS2CLTaskInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{1} }

func (m *MsgGS2CLTaskInfoReply) GetChapter() *ChapterData {
	if m != nil {
		return m.Chapter
	}
	return nil
}

func (m *MsgGS2CLTaskInfoReply) GetBranch() *BranchData {
	if m != nil {
		return m.Branch
	}
	return nil
}

func (m *MsgGS2CLTaskInfoReply) GetDaily() *DailyData {
	if m != nil {
		return m.Daily
	}
	return nil
}

// 主线任务更新通知
type MsgGS2CLTaskMainTaskUpdateNotice struct {
	MainTask *TaskData `protobuf:"bytes,1,opt,name=main_task,json=mainTask" json:"main_task,omitempty"`
}

func (m *MsgGS2CLTaskMainTaskUpdateNotice) Reset()         { *m = MsgGS2CLTaskMainTaskUpdateNotice{} }
func (m *MsgGS2CLTaskMainTaskUpdateNotice) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskMainTaskUpdateNotice) ProtoMessage()    {}
func (*MsgGS2CLTaskMainTaskUpdateNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{2}
}

func (m *MsgGS2CLTaskMainTaskUpdateNotice) GetMainTask() *TaskData {
	if m != nil {
		return m.MainTask
	}
	return nil
}

// 请求领取主线任务奖励
type MsgCL2GSTaskMainTaskAwardRequest struct {
	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
}

func (m *MsgCL2GSTaskMainTaskAwardRequest) Reset()         { *m = MsgCL2GSTaskMainTaskAwardRequest{} }
func (m *MsgCL2GSTaskMainTaskAwardRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSTaskMainTaskAwardRequest) ProtoMessage()    {}
func (*MsgCL2GSTaskMainTaskAwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{3}
}

func (m *MsgCL2GSTaskMainTaskAwardRequest) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type MsgGS2CLTaskMainTaskAwardReply struct {
	TaskId    uint32      `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Awards    []*Resource `protobuf:"bytes,2,rep,name=awards" json:"awards,omitempty"`
	ErrorCode int32       `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLTaskMainTaskAwardReply) Reset()                    { *m = MsgGS2CLTaskMainTaskAwardReply{} }
func (m *MsgGS2CLTaskMainTaskAwardReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskMainTaskAwardReply) ProtoMessage()               {}
func (*MsgGS2CLTaskMainTaskAwardReply) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{4} }

func (m *MsgGS2CLTaskMainTaskAwardReply) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *MsgGS2CLTaskMainTaskAwardReply) GetAwards() []*Resource {
	if m != nil {
		return m.Awards
	}
	return nil
}

func (m *MsgGS2CLTaskMainTaskAwardReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 开启主线任务章节
type MsgGS2CLTaskOpenChapterNotice struct {
	ChapterId uint32 `protobuf:"varint,1,opt,name=chapter_id,json=chapterId" json:"chapter_id,omitempty"`
}

func (m *MsgGS2CLTaskOpenChapterNotice) Reset()                    { *m = MsgGS2CLTaskOpenChapterNotice{} }
func (m *MsgGS2CLTaskOpenChapterNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskOpenChapterNotice) ProtoMessage()               {}
func (*MsgGS2CLTaskOpenChapterNotice) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{5} }

func (m *MsgGS2CLTaskOpenChapterNotice) GetChapterId() uint32 {
	if m != nil {
		return m.ChapterId
	}
	return 0
}

type MsgCL2GSTaskChapterAwardRequest struct {
}

func (m *MsgCL2GSTaskChapterAwardRequest) Reset()         { *m = MsgCL2GSTaskChapterAwardRequest{} }
func (m *MsgCL2GSTaskChapterAwardRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSTaskChapterAwardRequest) ProtoMessage()    {}
func (*MsgCL2GSTaskChapterAwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{6}
}

type MsgGS2CLTaskChapterAwardReply struct {
	ChapterId uint32      `protobuf:"varint,1,opt,name=chapter_id,json=chapterId" json:"chapter_id,omitempty"`
	Awards    []*Resource `protobuf:"bytes,2,rep,name=awards" json:"awards,omitempty"`
	ErrorCode int32       `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLTaskChapterAwardReply) Reset()                    { *m = MsgGS2CLTaskChapterAwardReply{} }
func (m *MsgGS2CLTaskChapterAwardReply) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskChapterAwardReply) ProtoMessage()               {}
func (*MsgGS2CLTaskChapterAwardReply) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{7} }

func (m *MsgGS2CLTaskChapterAwardReply) GetChapterId() uint32 {
	if m != nil {
		return m.ChapterId
	}
	return 0
}

func (m *MsgGS2CLTaskChapterAwardReply) GetAwards() []*Resource {
	if m != nil {
		return m.Awards
	}
	return nil
}

func (m *MsgGS2CLTaskChapterAwardReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////
// 分支任务更新通知
type MsgGS2CLTaskBranchTaskUpdateNotice struct {
	BranchTask *TaskData `protobuf:"bytes,1,opt,name=branch_task,json=branchTask" json:"branch_task,omitempty"`
}

func (m *MsgGS2CLTaskBranchTaskUpdateNotice) Reset()         { *m = MsgGS2CLTaskBranchTaskUpdateNotice{} }
func (m *MsgGS2CLTaskBranchTaskUpdateNotice) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskBranchTaskUpdateNotice) ProtoMessage()    {}
func (*MsgGS2CLTaskBranchTaskUpdateNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{8}
}

func (m *MsgGS2CLTaskBranchTaskUpdateNotice) GetBranchTask() *TaskData {
	if m != nil {
		return m.BranchTask
	}
	return nil
}

// 请求领取分支任务奖励
type MsgCL2GSTaskBranchTaskAwardRequest struct {
	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
}

func (m *MsgCL2GSTaskBranchTaskAwardRequest) Reset()         { *m = MsgCL2GSTaskBranchTaskAwardRequest{} }
func (m *MsgCL2GSTaskBranchTaskAwardRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSTaskBranchTaskAwardRequest) ProtoMessage()    {}
func (*MsgCL2GSTaskBranchTaskAwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{9}
}

func (m *MsgCL2GSTaskBranchTaskAwardRequest) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type MsgGS2CLTaskBranchTaskAwardReply struct {
	TaskId    uint32      `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Awards    []*Resource `protobuf:"bytes,2,rep,name=awards" json:"awards,omitempty"`
	ErrorCode int32       `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLTaskBranchTaskAwardReply) Reset()         { *m = MsgGS2CLTaskBranchTaskAwardReply{} }
func (m *MsgGS2CLTaskBranchTaskAwardReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskBranchTaskAwardReply) ProtoMessage()    {}
func (*MsgGS2CLTaskBranchTaskAwardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{10}
}

func (m *MsgGS2CLTaskBranchTaskAwardReply) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *MsgGS2CLTaskBranchTaskAwardReply) GetAwards() []*Resource {
	if m != nil {
		return m.Awards
	}
	return nil
}

func (m *MsgGS2CLTaskBranchTaskAwardReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type MsgGS2CLTaskDailyTaskUpdateNotice struct {
	DailyTask *TaskData `protobuf:"bytes,1,opt,name=daily_task,json=dailyTask" json:"daily_task,omitempty"`
}

func (m *MsgGS2CLTaskDailyTaskUpdateNotice) Reset()         { *m = MsgGS2CLTaskDailyTaskUpdateNotice{} }
func (m *MsgGS2CLTaskDailyTaskUpdateNotice) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskDailyTaskUpdateNotice) ProtoMessage()    {}
func (*MsgGS2CLTaskDailyTaskUpdateNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{11}
}

func (m *MsgGS2CLTaskDailyTaskUpdateNotice) GetDailyTask() *TaskData {
	if m != nil {
		return m.DailyTask
	}
	return nil
}

// 请求领取分支任务奖励
type MsgCL2GSTaskDailyTaskAwardRequest struct {
	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
}

func (m *MsgCL2GSTaskDailyTaskAwardRequest) Reset()         { *m = MsgCL2GSTaskDailyTaskAwardRequest{} }
func (m *MsgCL2GSTaskDailyTaskAwardRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCL2GSTaskDailyTaskAwardRequest) ProtoMessage()    {}
func (*MsgCL2GSTaskDailyTaskAwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{12}
}

func (m *MsgCL2GSTaskDailyTaskAwardRequest) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type MsgGS2CLTaskDailyTaskAwardReply struct {
	TaskId    uint32      `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Awards    []*Resource `protobuf:"bytes,2,rep,name=awards" json:"awards,omitempty"`
	ErrorCode int32       `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLTaskDailyTaskAwardReply) Reset()         { *m = MsgGS2CLTaskDailyTaskAwardReply{} }
func (m *MsgGS2CLTaskDailyTaskAwardReply) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskDailyTaskAwardReply) ProtoMessage()    {}
func (*MsgGS2CLTaskDailyTaskAwardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{13}
}

func (m *MsgGS2CLTaskDailyTaskAwardReply) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *MsgGS2CLTaskDailyTaskAwardReply) GetAwards() []*Resource {
	if m != nil {
		return m.Awards
	}
	return nil
}

func (m *MsgGS2CLTaskDailyTaskAwardReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 每日全部活跃任务数据下发
type MsgGS2CLTaskDailyTaskInfoNotice struct {
	Data *DailyData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *MsgGS2CLTaskDailyTaskInfoNotice) Reset()         { *m = MsgGS2CLTaskDailyTaskInfoNotice{} }
func (m *MsgGS2CLTaskDailyTaskInfoNotice) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskDailyTaskInfoNotice) ProtoMessage()    {}
func (*MsgGS2CLTaskDailyTaskInfoNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor75, []int{14}
}

func (m *MsgGS2CLTaskDailyTaskInfoNotice) GetData() *DailyData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 每日活跃度更新
type MsgGS2CLTaskDailyScoreNotice struct {
	Score uint32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
}

func (m *MsgGS2CLTaskDailyScoreNotice) Reset()                    { *m = MsgGS2CLTaskDailyScoreNotice{} }
func (m *MsgGS2CLTaskDailyScoreNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLTaskDailyScoreNotice) ProtoMessage()               {}
func (*MsgGS2CLTaskDailyScoreNotice) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{15} }

func (m *MsgGS2CLTaskDailyScoreNotice) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// 公会任务
type MsgGS2CLGuildTaskNotice struct {
	TaskDatas       []*TaskData `protobuf:"bytes,1,rep,name=task_datas,json=taskDatas" json:"task_datas,omitempty"`
	RefreshPlayerId uint64      `protobuf:"varint,2,opt,name=refresh_player_id,json=refreshPlayerId" json:"refresh_player_id,omitempty"`
}

func (m *MsgGS2CLGuildTaskNotice) Reset()                    { *m = MsgGS2CLGuildTaskNotice{} }
func (m *MsgGS2CLGuildTaskNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLGuildTaskNotice) ProtoMessage()               {}
func (*MsgGS2CLGuildTaskNotice) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{16} }

func (m *MsgGS2CLGuildTaskNotice) GetTaskDatas() []*TaskData {
	if m != nil {
		return m.TaskDatas
	}
	return nil
}

func (m *MsgGS2CLGuildTaskNotice) GetRefreshPlayerId() uint64 {
	if m != nil {
		return m.RefreshPlayerId
	}
	return 0
}

type MsgGS2CLGuildTaskUpdateNotice struct {
	TaskData *TaskData `protobuf:"bytes,1,opt,name=task_data,json=taskData" json:"task_data,omitempty"`
}

func (m *MsgGS2CLGuildTaskUpdateNotice) Reset()                    { *m = MsgGS2CLGuildTaskUpdateNotice{} }
func (m *MsgGS2CLGuildTaskUpdateNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLGuildTaskUpdateNotice) ProtoMessage()               {}
func (*MsgGS2CLGuildTaskUpdateNotice) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{17} }

func (m *MsgGS2CLGuildTaskUpdateNotice) GetTaskData() *TaskData {
	if m != nil {
		return m.TaskData
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgCL2GSTaskInfoRequest)(nil), "protomsg.MsgCL2GSTaskInfoRequest")
	proto.RegisterType((*MsgGS2CLTaskInfoReply)(nil), "protomsg.MsgGS2CLTaskInfoReply")
	proto.RegisterType((*MsgGS2CLTaskMainTaskUpdateNotice)(nil), "protomsg.MsgGS2CLTaskMainTaskUpdateNotice")
	proto.RegisterType((*MsgCL2GSTaskMainTaskAwardRequest)(nil), "protomsg.MsgCL2GSTaskMainTaskAwardRequest")
	proto.RegisterType((*MsgGS2CLTaskMainTaskAwardReply)(nil), "protomsg.MsgGS2CLTaskMainTaskAwardReply")
	proto.RegisterType((*MsgGS2CLTaskOpenChapterNotice)(nil), "protomsg.MsgGS2CLTaskOpenChapterNotice")
	proto.RegisterType((*MsgCL2GSTaskChapterAwardRequest)(nil), "protomsg.MsgCL2GSTaskChapterAwardRequest")
	proto.RegisterType((*MsgGS2CLTaskChapterAwardReply)(nil), "protomsg.MsgGS2CLTaskChapterAwardReply")
	proto.RegisterType((*MsgGS2CLTaskBranchTaskUpdateNotice)(nil), "protomsg.MsgGS2CLTaskBranchTaskUpdateNotice")
	proto.RegisterType((*MsgCL2GSTaskBranchTaskAwardRequest)(nil), "protomsg.MsgCL2GSTaskBranchTaskAwardRequest")
	proto.RegisterType((*MsgGS2CLTaskBranchTaskAwardReply)(nil), "protomsg.MsgGS2CLTaskBranchTaskAwardReply")
	proto.RegisterType((*MsgGS2CLTaskDailyTaskUpdateNotice)(nil), "protomsg.MsgGS2CLTaskDailyTaskUpdateNotice")
	proto.RegisterType((*MsgCL2GSTaskDailyTaskAwardRequest)(nil), "protomsg.MsgCL2GSTaskDailyTaskAwardRequest")
	proto.RegisterType((*MsgGS2CLTaskDailyTaskAwardReply)(nil), "protomsg.MsgGS2CLTaskDailyTaskAwardReply")
	proto.RegisterType((*MsgGS2CLTaskDailyTaskInfoNotice)(nil), "protomsg.MsgGS2CLTaskDailyTaskInfoNotice")
	proto.RegisterType((*MsgGS2CLTaskDailyScoreNotice)(nil), "protomsg.MsgGS2CLTaskDailyScoreNotice")
	proto.RegisterType((*MsgGS2CLGuildTaskNotice)(nil), "protomsg.MsgGS2CLGuildTaskNotice")
	proto.RegisterType((*MsgGS2CLGuildTaskUpdateNotice)(nil), "protomsg.MsgGS2CLGuildTaskUpdateNotice")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor75) }

var fileDescriptor75 = []byte{
	// 573 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0xf6, 0xd1, 0xad, 0x77, 0x9a, 0x80, 0xb0, 0x6a, 0x61, 0xa2, 0xd0, 0xf9, 0x85, 0x31,
	0xa1, 0x4e, 0x74, 0xbc, 0xf1, 0x21, 0x41, 0x27, 0x55, 0x45, 0x2b, 0x4c, 0x29, 0x20, 0xf1, 0x54,
	0xb9, 0xb1, 0xd7, 0x46, 0x6b, 0xea, 0x60, 0xa7, 0x82, 0xbe, 0x03, 0x12, 0x3f, 0x83, 0x7f, 0x8a,
	0x7c, 0xe3, 0xc4, 0xe9, 0xb2, 0xaf, 0x07, 0xb4, 0xa7, 0xc4, 0xd7, 0xe7, 0x9e, 0x7b, 0x7c, 0x7c,
	0x7d, 0x01, 0x12, 0xaa, 0xce, 0x9a, 0xb1, 0x14, 0x89, 0x70, 0xd7, 0xf1, 0x13, 0xa9, 0xd1, 0x4e,
	0x2d, 0x52, 0xa3, 0x41, 0x20, 0xa2, 0x48, 0x4c, 0x07, 0x16, 0xb0, 0x73, 0xd7, 0x86, 0xd3, 0x08,
	0x79, 0x00, 0xdb, 0x3d, 0x35, 0x6a, 0x1f, 0xb7, 0x3a, 0xfd, 0x4f, 0x54, 0x9d, 0x75, 0xa7, 0xa7,
	0xc2, 0xe7, 0xdf, 0x66, 0x5c, 0x25, 0xe4, 0xaf, 0x03, 0xb5, 0x9e, 0x1a, 0x75, 0xfa, 0xad, 0xf6,
	0xb1, 0xdd, 0x8b, 0x27, 0x73, 0xf7, 0x00, 0xd6, 0x82, 0x31, 0x8d, 0x13, 0x2e, 0x3d, 0xa7, 0xe1,
	0xec, 0x6d, 0xb4, 0x6a, 0xcd, 0xac, 0x72, 0xb3, 0x9d, 0x6e, 0x1c, 0xd1, 0x84, 0xfa, 0x19, 0xca,
	0x7d, 0x06, 0x95, 0xa1, 0xa4, 0xd3, 0x60, 0xec, 0x2d, 0x21, 0x7e, 0xcb, 0xe2, 0xdf, 0x61, 0x1c,
	0xe1, 0x06, 0xe3, 0x3e, 0x85, 0x55, 0x46, 0xc3, 0xc9, 0xdc, 0x5b, 0x46, 0xf0, 0x7d, 0x0b, 0x3e,
	0xd2, 0x61, 0xc4, 0xa6, 0x08, 0xd2, 0x87, 0x46, 0x51, 0x62, 0x8f, 0x86, 0x53, 0xfd, 0xfd, 0x1c,
	0x33, 0x9a, 0xf0, 0x0f, 0x22, 0x09, 0x03, 0xee, 0x1e, 0x40, 0x35, 0xa2, 0x61, 0xea, 0x83, 0xd1,
	0xeb, 0x5a, 0x4a, 0x0d, 0x47, 0xc6, 0xf5, 0xc8, 0x24, 0x93, 0x97, 0x48, 0x9a, 0x7b, 0x92, 0x91,
	0xbe, 0xfd, 0x4e, 0x25, 0x33, 0xe6, 0xb8, 0xdb, 0xb0, 0xa6, 0xf9, 0x06, 0x21, 0x43, 0xca, 0x4d,
	0xbf, 0xa2, 0x97, 0x5d, 0x46, 0x7e, 0x3a, 0xf0, 0xe8, 0x22, 0x49, 0x26, 0x5b, 0xdb, 0x77, 0x59,
	0xae, 0xbb, 0x0f, 0x15, 0xaa, 0x61, 0xca, 0x5b, 0x6a, 0x2c, 0x2f, 0xca, 0xf4, 0xb9, 0x12, 0x33,
	0x19, 0x70, 0xdf, 0x20, 0xdc, 0x3a, 0x00, 0x97, 0x52, 0xc8, 0x41, 0x20, 0x18, 0xf7, 0x82, 0x86,
	0xb3, 0xb7, 0xea, 0x57, 0x31, 0xd2, 0x16, 0x8c, 0x93, 0x37, 0x50, 0x2f, 0xaa, 0xf8, 0x18, 0xf3,
	0xa9, 0xb9, 0x19, 0xe3, 0x4a, 0x1d, 0xc0, 0xdc, 0x8e, 0xd5, 0x51, 0x35, 0x91, 0x2e, 0x23, 0xbb,
	0xf0, 0xb8, 0xe8, 0x81, 0xc9, 0x2d, 0x5a, 0x40, 0xfe, 0x38, 0x8b, 0x35, 0x16, 0x31, 0xfa, 0xa0,
	0x57, 0xd7, 0xf8, 0x9f, 0xc7, 0xfd, 0x0a, 0xa4, 0x28, 0x25, 0x6d, 0xaa, 0x52, 0x27, 0x1c, 0xc2,
	0x46, 0xda, 0x62, 0xd7, 0xf5, 0x02, 0x0c, 0x73, 0x02, 0xf2, 0x1a, 0xa9, 0x73, 0x27, 0x2c, 0xf5,
	0xcd, 0xfa, 0xe1, 0xb7, 0xb3, 0xd8, 0xa2, 0xa5, 0xfc, 0xdb, 0xea, 0x88, 0x2f, 0xb0, 0x5b, 0xd4,
	0x81, 0x4f, 0xa9, 0xe4, 0xd0, 0x73, 0x00, 0x7c, 0x58, 0xd7, 0x19, 0x54, 0x65, 0x59, 0x3a, 0x79,
	0x85, 0xbc, 0xb9, 0x3f, 0x39, 0xef, 0xcd, 0xec, 0xf9, 0xe5, 0x60, 0xa3, 0x95, 0x65, 0xdd, 0xb2,
	0x3b, 0xef, 0x2f, 0x91, 0xa1, 0x87, 0x9e, 0xf1, 0xe6, 0x09, 0xac, 0x30, 0x9a, 0x50, 0xe3, 0xca,
	0x85, 0x53, 0x09, 0x01, 0xe4, 0x05, 0x3c, 0x2c, 0x71, 0xf5, 0x03, 0x21, 0x33, 0x93, 0xb7, 0x60,
	0x55, 0xe9, 0x25, 0x0e, 0xc3, 0x4d, 0x3f, 0x5d, 0x90, 0x1f, 0x38, 0x89, 0x31, 0xab, 0x33, 0x0b,
	0x27, 0x4c, 0xa7, 0xda, 0x5b, 0x41, 0x03, 0x34, 0xbb, 0xf2, 0x9c, 0xf3, 0x67, 0xb5, 0xb7, 0x92,
	0x98, 0x3f, 0xe5, 0xee, 0xc3, 0x3d, 0xc9, 0x4f, 0x25, 0x57, 0xe3, 0x41, 0x3c, 0xa1, 0xf3, 0xf4,
	0x05, 0xea, 0x7a, 0x2b, 0xfe, 0x1d, 0xb3, 0x71, 0x82, 0xf1, 0x2e, 0x23, 0x27, 0xf6, 0x1d, 0xe7,
	0x95, 0xcf, 0x4f, 0xd0, 0xbc, 0xfe, 0x55, 0x13, 0x34, 0x2b, 0x3f, 0xac, 0xe0, 0xe6, 0xe1, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x89, 0x0c, 0x3c, 0x7f, 0x9d, 0x06, 0x00, 0x00,
}
