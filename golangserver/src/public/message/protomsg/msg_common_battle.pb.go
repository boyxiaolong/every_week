// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_common_battle.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BRExtraType int32

const (
	BRExtraType_kBRExtraType_None              BRExtraType = 0
	BRExtraType_kBRExtraType_Player            BRExtraType = 1
	BRExtraType_kBRExtraType_Barbarians        BRExtraType = 2
	BRExtraType_kBRExtraType_Castle            BRExtraType = 3
	BRExtraType_kBRExtraType_BarbarianFort     BRExtraType = 4
	BRExtraType_kBRExtraType_GuildBuildingFort BRExtraType = 5
	BRExtraType_kBRExtraType_GuildBuildingFlag BRExtraType = 6
	BRExtraType_kBRExtraType_Temple            BRExtraType = 7
	BRExtraType_kBRExtraType_Pass              BRExtraType = 8
	BRExtraType_kBRExtraType_StrongHold        BRExtraType = 9
	BRExtraType_kBRExtraType_Monster           BRExtraType = 10
	BRExtraType_kBRExtraType_PompeiiBuild      BRExtraType = 11
	BRExtraType_kBRExtraType_PompeiiMonster    BRExtraType = 12
	BRExtraType_kBRExtraType_PompeiiBoss       BRExtraType = 13
	BRExtraType_kBRExtraType_NewStronghold     BRExtraType = 14
)

var BRExtraType_name = map[int32]string{
	0:  "kBRExtraType_None",
	1:  "kBRExtraType_Player",
	2:  "kBRExtraType_Barbarians",
	3:  "kBRExtraType_Castle",
	4:  "kBRExtraType_BarbarianFort",
	5:  "kBRExtraType_GuildBuildingFort",
	6:  "kBRExtraType_GuildBuildingFlag",
	7:  "kBRExtraType_Temple",
	8:  "kBRExtraType_Pass",
	9:  "kBRExtraType_StrongHold",
	10: "kBRExtraType_Monster",
	11: "kBRExtraType_PompeiiBuild",
	12: "kBRExtraType_PompeiiMonster",
	13: "kBRExtraType_PompeiiBoss",
	14: "kBRExtraType_NewStronghold",
}
var BRExtraType_value = map[string]int32{
	"kBRExtraType_None":              0,
	"kBRExtraType_Player":            1,
	"kBRExtraType_Barbarians":        2,
	"kBRExtraType_Castle":            3,
	"kBRExtraType_BarbarianFort":     4,
	"kBRExtraType_GuildBuildingFort": 5,
	"kBRExtraType_GuildBuildingFlag": 6,
	"kBRExtraType_Temple":            7,
	"kBRExtraType_Pass":              8,
	"kBRExtraType_StrongHold":        9,
	"kBRExtraType_Monster":           10,
	"kBRExtraType_PompeiiBuild":      11,
	"kBRExtraType_PompeiiMonster":    12,
	"kBRExtraType_PompeiiBoss":       13,
	"kBRExtraType_NewStronghold":     14,
}

func (x BRExtraType) String() string {
	return proto.EnumName(BRExtraType_name, int32(x))
}
func (BRExtraType) EnumDescriptor() ([]byte, []int) { return fileDescriptor38, []int{0} }

type BattleDetailAOrB int32

const (
	BattleDetailAOrB_kBattleDetailAOrB_None          BattleDetailAOrB = 0
	BattleDetailAOrB_kBattleDetailAOrB_a             BattleDetailAOrB = 1
	BattleDetailAOrB_kBattleDetailAOrB_b             BattleDetailAOrB = 2
	BattleDetailAOrB_kBattleDetailAOrB_a_friend      BattleDetailAOrB = 3
	BattleDetailAOrB_kBattleDetailAOrB_b_friend      BattleDetailAOrB = 4
	BattleDetailAOrB_kBattleDetailAOrB_a_and_b_enemy BattleDetailAOrB = 5
)

var BattleDetailAOrB_name = map[int32]string{
	0: "kBattleDetailAOrB_None",
	1: "kBattleDetailAOrB_a",
	2: "kBattleDetailAOrB_b",
	3: "kBattleDetailAOrB_a_friend",
	4: "kBattleDetailAOrB_b_friend",
	5: "kBattleDetailAOrB_a_and_b_enemy",
}
var BattleDetailAOrB_value = map[string]int32{
	"kBattleDetailAOrB_None":          0,
	"kBattleDetailAOrB_a":             1,
	"kBattleDetailAOrB_b":             2,
	"kBattleDetailAOrB_a_friend":      3,
	"kBattleDetailAOrB_b_friend":      4,
	"kBattleDetailAOrB_a_and_b_enemy": 5,
}

func (x BattleDetailAOrB) String() string {
	return proto.EnumName(BattleDetailAOrB_name, int32(x))
}
func (BattleDetailAOrB) EnumDescriptor() ([]byte, []int) { return fileDescriptor38, []int{1} }

type SkillType int32

const (
	SkillType_kSkillTypeDamage            SkillType = 0
	SkillType_kSkillTypeRateCast          SkillType = 1
	SkillType_kSkillTypeDecay             SkillType = 2
	SkillType_kSkillTypeTaunt             SkillType = 3
	SkillType_kSkillTypeIgnoreDef         SkillType = 4
	SkillType_kSkillTypeAssault           SkillType = 5
	SkillType_kSkillTypeTroopPercent      SkillType = 6
	SkillType_kSkillTypeBuildDamage       SkillType = 7
	SkillType_kSkillTypeDisperse          SkillType = 8
	SkillType_kSkillTypeTrap              SkillType = 9
	SkillType_kSkillTypeSepecialNormalAtk SkillType = 18
	SkillType_kSkillTypeTroopDamageRate   SkillType = 20
	SkillType_kSkillTypeUseDefenceToAtk   SkillType = 24
	// 取生命系数攻击
	SkillType_kSkillTypeUseHpToAtk SkillType = 25
	// 吸血：取生命系数攻击，伤害量的千分比转化为治疗量
	SkillType_kSkillTypeUseHpToAtkAndHeal      SkillType = 27
	SkillType_kSkillTypeCleanUnGoodStatus      SkillType = 28
	SkillType_kSkillTypeDefenseAtk             SkillType = 50
	SkillType_kSkillTypePowerAtk               SkillType = 51
	SkillType_kSkillTypeDamageAddTroop         SkillType = 52
	SkillType_kSkillTypeDamageByDotOverlap     SkillType = 53
	SkillType_kSkillTypeDotOverlapDouble       SkillType = 54
	SkillType_kSkillTypeDamageAddedByCondition SkillType = 55
	SkillType_kSkillTypeCureAddedByCondition   SkillType = 56
	SkillType_kSkillTypeLoseTroopAddBuff       SkillType = 57
	SkillType_kSkillTypeCastSkillRate          SkillType = 60
)

var SkillType_name = map[int32]string{
	0:  "kSkillTypeDamage",
	1:  "kSkillTypeRateCast",
	2:  "kSkillTypeDecay",
	3:  "kSkillTypeTaunt",
	4:  "kSkillTypeIgnoreDef",
	5:  "kSkillTypeAssault",
	6:  "kSkillTypeTroopPercent",
	7:  "kSkillTypeBuildDamage",
	8:  "kSkillTypeDisperse",
	9:  "kSkillTypeTrap",
	18: "kSkillTypeSepecialNormalAtk",
	20: "kSkillTypeTroopDamageRate",
	24: "kSkillTypeUseDefenceToAtk",
	25: "kSkillTypeUseHpToAtk",
	27: "kSkillTypeUseHpToAtkAndHeal",
	28: "kSkillTypeCleanUnGoodStatus",
	50: "kSkillTypeDefenseAtk",
	51: "kSkillTypePowerAtk",
	52: "kSkillTypeDamageAddTroop",
	53: "kSkillTypeDamageByDotOverlap",
	54: "kSkillTypeDotOverlapDouble",
	55: "kSkillTypeDamageAddedByCondition",
	56: "kSkillTypeCureAddedByCondition",
	57: "kSkillTypeLoseTroopAddBuff",
	60: "kSkillTypeCastSkillRate",
}
var SkillType_value = map[string]int32{
	"kSkillTypeDamage":                 0,
	"kSkillTypeRateCast":               1,
	"kSkillTypeDecay":                  2,
	"kSkillTypeTaunt":                  3,
	"kSkillTypeIgnoreDef":              4,
	"kSkillTypeAssault":                5,
	"kSkillTypeTroopPercent":           6,
	"kSkillTypeBuildDamage":            7,
	"kSkillTypeDisperse":               8,
	"kSkillTypeTrap":                   9,
	"kSkillTypeSepecialNormalAtk":      18,
	"kSkillTypeTroopDamageRate":        20,
	"kSkillTypeUseDefenceToAtk":        24,
	"kSkillTypeUseHpToAtk":             25,
	"kSkillTypeUseHpToAtkAndHeal":      27,
	"kSkillTypeCleanUnGoodStatus":      28,
	"kSkillTypeDefenseAtk":             50,
	"kSkillTypePowerAtk":               51,
	"kSkillTypeDamageAddTroop":         52,
	"kSkillTypeDamageByDotOverlap":     53,
	"kSkillTypeDotOverlapDouble":       54,
	"kSkillTypeDamageAddedByCondition": 55,
	"kSkillTypeCureAddedByCondition":   56,
	"kSkillTypeLoseTroopAddBuff":       57,
	"kSkillTypeCastSkillRate":          60,
}

func (x SkillType) String() string {
	return proto.EnumName(SkillType_name, int32(x))
}
func (SkillType) EnumDescriptor() ([]byte, []int) { return fileDescriptor38, []int{2} }

type SkillCondition int32

const (
	SkillCondition_kSkillConditionNone        SkillCondition = 0
	SkillCondition_kSkillConditionBiggerThan  SkillCondition = 1
	SkillCondition_kSkillConditionLittlerThan SkillCondition = 2
)

var SkillCondition_name = map[int32]string{
	0: "kSkillConditionNone",
	1: "kSkillConditionBiggerThan",
	2: "kSkillConditionLittlerThan",
}
var SkillCondition_value = map[string]int32{
	"kSkillConditionNone":        0,
	"kSkillConditionBiggerThan":  1,
	"kSkillConditionLittlerThan": 2,
}

func (x SkillCondition) String() string {
	return proto.EnumName(SkillCondition_name, int32(x))
}
func (SkillCondition) EnumDescriptor() ([]byte, []int) { return fileDescriptor38, []int{3} }

type SkillConditionCompareType int32

const (
	SkillConditionCompareType_kSkillConditionCompareTypeNone            SkillConditionCompareType = 0
	SkillConditionCompareType_kSkillConditionCompareTypeForce           SkillConditionCompareType = 1
	SkillConditionCompareType_kSkillConditionCompareTypeIntelligence    SkillConditionCompareType = 2
	SkillConditionCompareType_kSkillConditionCompareTypeCommander       SkillConditionCompareType = 3
	SkillConditionCompareType_kSkillConditionCompareTypeEnemyInitTroops SkillConditionCompareType = 4
	SkillConditionCompareType_kSkillConditionCompareTypeNowTroops       SkillConditionCompareType = 5
	SkillConditionCompareType_kSkillConditionCompareTypeUsInitTroops    SkillConditionCompareType = 6
	SkillConditionCompareType_kSkillConditionCompareTypeBuff            SkillConditionCompareType = 7
	SkillConditionCompareType_kSkillConditionCompareTypeDot             SkillConditionCompareType = 8
)

var SkillConditionCompareType_name = map[int32]string{
	0: "kSkillConditionCompareTypeNone",
	1: "kSkillConditionCompareTypeForce",
	2: "kSkillConditionCompareTypeIntelligence",
	3: "kSkillConditionCompareTypeCommander",
	4: "kSkillConditionCompareTypeEnemyInitTroops",
	5: "kSkillConditionCompareTypeNowTroops",
	6: "kSkillConditionCompareTypeUsInitTroops",
	7: "kSkillConditionCompareTypeBuff",
	8: "kSkillConditionCompareTypeDot",
}
var SkillConditionCompareType_value = map[string]int32{
	"kSkillConditionCompareTypeNone":            0,
	"kSkillConditionCompareTypeForce":           1,
	"kSkillConditionCompareTypeIntelligence":    2,
	"kSkillConditionCompareTypeCommander":       3,
	"kSkillConditionCompareTypeEnemyInitTroops": 4,
	"kSkillConditionCompareTypeNowTroops":       5,
	"kSkillConditionCompareTypeUsInitTroops":    6,
	"kSkillConditionCompareTypeBuff":            7,
	"kSkillConditionCompareTypeDot":             8,
}

func (x SkillConditionCompareType) String() string {
	return proto.EnumName(SkillConditionCompareType_name, int32(x))
}
func (SkillConditionCompareType) EnumDescriptor() ([]byte, []int) { return fileDescriptor38, []int{4} }

type SkillDotType int32

const (
	SkillDotType_kSkillDotTypeNone      SkillDotType = 0
	SkillDotType_kSkillDotTypeBurn      SkillDotType = 1
	SkillDotType_kSkillDotTypePoisoning SkillDotType = 2
)

var SkillDotType_name = map[int32]string{
	0: "kSkillDotTypeNone",
	1: "kSkillDotTypeBurn",
	2: "kSkillDotTypePoisoning",
}
var SkillDotType_value = map[string]int32{
	"kSkillDotTypeNone":      0,
	"kSkillDotTypeBurn":      1,
	"kSkillDotTypePoisoning": 2,
}

func (x SkillDotType) String() string {
	return proto.EnumName(SkillDotType_name, int32(x))
}
func (SkillDotType) EnumDescriptor() ([]byte, []int) { return fileDescriptor38, []int{5} }

type BattleDetailLogActionType int32

const (
	BattleDetailLogActionType_kBattleDetailLogActionType_None                        BattleDetailLogActionType = 0
	BattleDetailLogActionType_kBattleDetailLogActionType_NormalAtk                   BattleDetailLogActionType = 1
	BattleDetailLogActionType_kBattleDetailLogActionType_CounterAtk                  BattleDetailLogActionType = 2
	BattleDetailLogActionType_kBattleDetailLogActionType_UseRage                     BattleDetailLogActionType = 3
	BattleDetailLogActionType_kBattleDetailLogActionType_UseDirect                   BattleDetailLogActionType = 4
	BattleDetailLogActionType_kBattleDetailLogActionType_StatusEffect                BattleDetailLogActionType = 6
	BattleDetailLogActionType_kBattleDetailLogActionType_MultiStrikeBuff             BattleDetailLogActionType = 7
	BattleDetailLogActionType_kBattleDetailLogActionType_RageParpare                 BattleDetailLogActionType = 8
	BattleDetailLogActionType_kBattleDetailLogActionType_NormalNag                   BattleDetailLogActionType = 9
	BattleDetailLogActionType_kBattleDetailLogActionType_BeenTaunt                   BattleDetailLogActionType = 10
	BattleDetailLogActionType_kBattleDetailLogActionType_CounterNag                  BattleDetailLogActionType = 11
	BattleDetailLogActionType_kBattleDetailLogActionType_RageNag                     BattleDetailLogActionType = 12
	BattleDetailLogActionType_kBattleDetailLogActionType_OnDamageNag                 BattleDetailLogActionType = 13
	BattleDetailLogActionType_kBattleDetailLogActionType_HpHighNagSkill              BattleDetailLogActionType = 14
	BattleDetailLogActionType_kBattleDetailLogActionType_HpLowerNagSkill             BattleDetailLogActionType = 15
	BattleDetailLogActionType_kBattleDetailLogActionType_WatchTowerDamage            BattleDetailLogActionType = 16
	BattleDetailLogActionType_kBattleDetailLogActionType_ShieldMinDamage             BattleDetailLogActionType = 17
	BattleDetailLogActionType_kBattleDetailLogActionType_MultiStrikeNag              BattleDetailLogActionType = 18
	BattleDetailLogActionType_kBattleDetailLogActionType_DisperseDamage              BattleDetailLogActionType = 19
	BattleDetailLogActionType_kBattleDetailLogActionType_GoodStatusNag               BattleDetailLogActionType = 21
	BattleDetailLogActionType_kBattleDetailLogActionType_StatusHasNag                BattleDetailLogActionType = 22
	BattleDetailLogActionType_kBattleDetailLogActionType_EnterBattleNag              BattleDetailLogActionType = 23
	BattleDetailLogActionType_kBattleDetailLogActionType_DefenceCityNag              BattleDetailLogActionType = 24
	BattleDetailLogActionType_kBattleDetailLogActionType_AtkCityNag                  BattleDetailLogActionType = 25
	BattleDetailLogActionType_kBattleDetailLogActionType_GuildMarchNag               BattleDetailLogActionType = 26
	BattleDetailLogActionType_kBattleDetailLogActionType_SingleMarchNag              BattleDetailLogActionType = 27
	BattleDetailLogActionType_kBattleDetailLogActionType_MixArmyNag                  BattleDetailLogActionType = 28
	BattleDetailLogActionType_kBattleDetailLogActionType_OnDamage                    BattleDetailLogActionType = 29
	BattleDetailLogActionType_kBattleDetailLogActionType_OnHeal                      BattleDetailLogActionType = 30
	BattleDetailLogActionType_kBattleDetailLogActionType_AddRage                     BattleDetailLogActionType = 31
	BattleDetailLogActionType_kBattleDetailLogActionType_MinRage                     BattleDetailLogActionType = 32
	BattleDetailLogActionType_kBattleDetailLogActionType_AddStatus                   BattleDetailLogActionType = 33
	BattleDetailLogActionType_kBattleDetailLogActionType_OnFriendSkillEffect         BattleDetailLogActionType = 34
	BattleDetailLogActionType_kBattleDetailLogActionType_BanSkill                    BattleDetailLogActionType = 35
	BattleDetailLogActionType_kBattleDetailLogActionType_BanNormalAtk                BattleDetailLogActionType = 36
	BattleDetailLogActionType_kBattleDetailLogActionType_RageNextNag                 BattleDetailLogActionType = 37
	BattleDetailLogActionType_kBattleDetailLogActionType_StatusDeleteNag             BattleDetailLogActionType = 38
	BattleDetailLogActionType_kBattleDetailLogActionType_TrapNag                     BattleDetailLogActionType = 39
	BattleDetailLogActionType_kBattleDetailLogActionType_Addbuff                     BattleDetailLogActionType = 40
	BattleDetailLogActionType_kBattleDetailLogActionType_OnHealNag                   BattleDetailLogActionType = 41
	BattleDetailLogActionType_kBattleDetailLogActionType_UnGoodStatusNag             BattleDetailLogActionType = 42
	BattleDetailLogActionType_kBattleDetailLogActionType_SecondHeroNag               BattleDetailLogActionType = 43
	BattleDetailLogActionType_kBattleDetailLogActionType_CollectNag                  BattleDetailLogActionType = 44
	BattleDetailLogActionType_kBattleDetailLogActionType_InGuildField                BattleDetailLogActionType = 45
	BattleDetailLogActionType_kBattleDetailLogActionType_OutGuildField               BattleDetailLogActionType = 46
	BattleDetailLogActionType_kBattleDetailLogActionType_CleanUnGoodStatus           BattleDetailLogActionType = 47
	BattleDetailLogActionType_kBattleDetailLogActionType_StatusNormalNag             BattleDetailLogActionType = 48
	BattleDetailLogActionType_kBattleDetailLogActionType_AddMarch                    BattleDetailLogActionType = 49
	BattleDetailLogActionType_kBattleDetailLogActionType_CastleAddArmyTrain          BattleDetailLogActionType = 50
	BattleDetailLogActionType_kBattleDetailLogActionType_CastleAddArmyHeal           BattleDetailLogActionType = 51
	BattleDetailLogActionType_kBattleDetailLogActionType_LeaveMarch                  BattleDetailLogActionType = 52
	BattleDetailLogActionType_kBattleDetailLogActionType_GarrisonHeroChange          BattleDetailLogActionType = 53
	BattleDetailLogActionType_kBattleDetailLogActionType_LeaderChange                BattleDetailLogActionType = 54
	BattleDetailLogActionType_kBattleDetailLogActionType_SubOnDamage                 BattleDetailLogActionType = 401
	BattleDetailLogActionType_kBattleDetailLogActionType_SubOnHeal                   BattleDetailLogActionType = 402
	BattleDetailLogActionType_kBattleDetailLogActionType_SubAddRage                  BattleDetailLogActionType = 403
	BattleDetailLogActionType_kBattleDetailLogActionType_SubMinRage                  BattleDetailLogActionType = 404
	BattleDetailLogActionType_kBattleDetailLogActionType_BuffChangeGood              BattleDetailLogActionType = 405
	BattleDetailLogActionType_kBattleDetailLogActionType_BuffChangeUnGood            BattleDetailLogActionType = 406
	BattleDetailLogActionType_kBattleDetailLogActionType_AddShield                   BattleDetailLogActionType = 407
	BattleDetailLogActionType_kBattleDetailLogActionType_BeenTauntCanNotChangeTarget BattleDetailLogActionType = 409
)

var BattleDetailLogActionType_name = map[int32]string{
	0:   "kBattleDetailLogActionType_None",
	1:   "kBattleDetailLogActionType_NormalAtk",
	2:   "kBattleDetailLogActionType_CounterAtk",
	3:   "kBattleDetailLogActionType_UseRage",
	4:   "kBattleDetailLogActionType_UseDirect",
	6:   "kBattleDetailLogActionType_StatusEffect",
	7:   "kBattleDetailLogActionType_MultiStrikeBuff",
	8:   "kBattleDetailLogActionType_RageParpare",
	9:   "kBattleDetailLogActionType_NormalNag",
	10:  "kBattleDetailLogActionType_BeenTaunt",
	11:  "kBattleDetailLogActionType_CounterNag",
	12:  "kBattleDetailLogActionType_RageNag",
	13:  "kBattleDetailLogActionType_OnDamageNag",
	14:  "kBattleDetailLogActionType_HpHighNagSkill",
	15:  "kBattleDetailLogActionType_HpLowerNagSkill",
	16:  "kBattleDetailLogActionType_WatchTowerDamage",
	17:  "kBattleDetailLogActionType_ShieldMinDamage",
	18:  "kBattleDetailLogActionType_MultiStrikeNag",
	19:  "kBattleDetailLogActionType_DisperseDamage",
	21:  "kBattleDetailLogActionType_GoodStatusNag",
	22:  "kBattleDetailLogActionType_StatusHasNag",
	23:  "kBattleDetailLogActionType_EnterBattleNag",
	24:  "kBattleDetailLogActionType_DefenceCityNag",
	25:  "kBattleDetailLogActionType_AtkCityNag",
	26:  "kBattleDetailLogActionType_GuildMarchNag",
	27:  "kBattleDetailLogActionType_SingleMarchNag",
	28:  "kBattleDetailLogActionType_MixArmyNag",
	29:  "kBattleDetailLogActionType_OnDamage",
	30:  "kBattleDetailLogActionType_OnHeal",
	31:  "kBattleDetailLogActionType_AddRage",
	32:  "kBattleDetailLogActionType_MinRage",
	33:  "kBattleDetailLogActionType_AddStatus",
	34:  "kBattleDetailLogActionType_OnFriendSkillEffect",
	35:  "kBattleDetailLogActionType_BanSkill",
	36:  "kBattleDetailLogActionType_BanNormalAtk",
	37:  "kBattleDetailLogActionType_RageNextNag",
	38:  "kBattleDetailLogActionType_StatusDeleteNag",
	39:  "kBattleDetailLogActionType_TrapNag",
	40:  "kBattleDetailLogActionType_Addbuff",
	41:  "kBattleDetailLogActionType_OnHealNag",
	42:  "kBattleDetailLogActionType_UnGoodStatusNag",
	43:  "kBattleDetailLogActionType_SecondHeroNag",
	44:  "kBattleDetailLogActionType_CollectNag",
	45:  "kBattleDetailLogActionType_InGuildField",
	46:  "kBattleDetailLogActionType_OutGuildField",
	47:  "kBattleDetailLogActionType_CleanUnGoodStatus",
	48:  "kBattleDetailLogActionType_StatusNormalNag",
	49:  "kBattleDetailLogActionType_AddMarch",
	50:  "kBattleDetailLogActionType_CastleAddArmyTrain",
	51:  "kBattleDetailLogActionType_CastleAddArmyHeal",
	52:  "kBattleDetailLogActionType_LeaveMarch",
	53:  "kBattleDetailLogActionType_GarrisonHeroChange",
	54:  "kBattleDetailLogActionType_LeaderChange",
	401: "kBattleDetailLogActionType_SubOnDamage",
	402: "kBattleDetailLogActionType_SubOnHeal",
	403: "kBattleDetailLogActionType_SubAddRage",
	404: "kBattleDetailLogActionType_SubMinRage",
	405: "kBattleDetailLogActionType_BuffChangeGood",
	406: "kBattleDetailLogActionType_BuffChangeUnGood",
	407: "kBattleDetailLogActionType_AddShield",
	409: "kBattleDetailLogActionType_BeenTauntCanNotChangeTarget",
}
var BattleDetailLogActionType_value = map[string]int32{
	"kBattleDetailLogActionType_None":                        0,
	"kBattleDetailLogActionType_NormalAtk":                   1,
	"kBattleDetailLogActionType_CounterAtk":                  2,
	"kBattleDetailLogActionType_UseRage":                     3,
	"kBattleDetailLogActionType_UseDirect":                   4,
	"kBattleDetailLogActionType_StatusEffect":                6,
	"kBattleDetailLogActionType_MultiStrikeBuff":             7,
	"kBattleDetailLogActionType_RageParpare":                 8,
	"kBattleDetailLogActionType_NormalNag":                   9,
	"kBattleDetailLogActionType_BeenTaunt":                   10,
	"kBattleDetailLogActionType_CounterNag":                  11,
	"kBattleDetailLogActionType_RageNag":                     12,
	"kBattleDetailLogActionType_OnDamageNag":                 13,
	"kBattleDetailLogActionType_HpHighNagSkill":              14,
	"kBattleDetailLogActionType_HpLowerNagSkill":             15,
	"kBattleDetailLogActionType_WatchTowerDamage":            16,
	"kBattleDetailLogActionType_ShieldMinDamage":             17,
	"kBattleDetailLogActionType_MultiStrikeNag":              18,
	"kBattleDetailLogActionType_DisperseDamage":              19,
	"kBattleDetailLogActionType_GoodStatusNag":               21,
	"kBattleDetailLogActionType_StatusHasNag":                22,
	"kBattleDetailLogActionType_EnterBattleNag":              23,
	"kBattleDetailLogActionType_DefenceCityNag":              24,
	"kBattleDetailLogActionType_AtkCityNag":                  25,
	"kBattleDetailLogActionType_GuildMarchNag":               26,
	"kBattleDetailLogActionType_SingleMarchNag":              27,
	"kBattleDetailLogActionType_MixArmyNag":                  28,
	"kBattleDetailLogActionType_OnDamage":                    29,
	"kBattleDetailLogActionType_OnHeal":                      30,
	"kBattleDetailLogActionType_AddRage":                     31,
	"kBattleDetailLogActionType_MinRage":                     32,
	"kBattleDetailLogActionType_AddStatus":                   33,
	"kBattleDetailLogActionType_OnFriendSkillEffect":         34,
	"kBattleDetailLogActionType_BanSkill":                    35,
	"kBattleDetailLogActionType_BanNormalAtk":                36,
	"kBattleDetailLogActionType_RageNextNag":                 37,
	"kBattleDetailLogActionType_StatusDeleteNag":             38,
	"kBattleDetailLogActionType_TrapNag":                     39,
	"kBattleDetailLogActionType_Addbuff":                     40,
	"kBattleDetailLogActionType_OnHealNag":                   41,
	"kBattleDetailLogActionType_UnGoodStatusNag":             42,
	"kBattleDetailLogActionType_SecondHeroNag":               43,
	"kBattleDetailLogActionType_CollectNag":                  44,
	"kBattleDetailLogActionType_InGuildField":                45,
	"kBattleDetailLogActionType_OutGuildField":               46,
	"kBattleDetailLogActionType_CleanUnGoodStatus":           47,
	"kBattleDetailLogActionType_StatusNormalNag":             48,
	"kBattleDetailLogActionType_AddMarch":                    49,
	"kBattleDetailLogActionType_CastleAddArmyTrain":          50,
	"kBattleDetailLogActionType_CastleAddArmyHeal":           51,
	"kBattleDetailLogActionType_LeaveMarch":                  52,
	"kBattleDetailLogActionType_GarrisonHeroChange":          53,
	"kBattleDetailLogActionType_LeaderChange":                54,
	"kBattleDetailLogActionType_SubOnDamage":                 401,
	"kBattleDetailLogActionType_SubOnHeal":                   402,
	"kBattleDetailLogActionType_SubAddRage":                  403,
	"kBattleDetailLogActionType_SubMinRage":                  404,
	"kBattleDetailLogActionType_BuffChangeGood":              405,
	"kBattleDetailLogActionType_BuffChangeUnGood":            406,
	"kBattleDetailLogActionType_AddShield":                   407,
	"kBattleDetailLogActionType_BeenTauntCanNotChangeTarget": 409,
}

func (x BattleDetailLogActionType) String() string {
	return proto.EnumName(BattleDetailLogActionType_name, int32(x))
}
func (BattleDetailLogActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor38, []int{6} }

// 技能来源来信
type SkillSourceType int32

const (
	SkillSourceType_kSkillSourceTypeNone  SkillSourceType = 0
	SkillSourceType_kSkillSourceTypeHero  SkillSourceType = 1
	SkillSourceType_kSkillSourceTypeTroop SkillSourceType = 2
	SkillSourceType_kSkillSourceTypeEquip SkillSourceType = 3
)

var SkillSourceType_name = map[int32]string{
	0: "kSkillSourceTypeNone",
	1: "kSkillSourceTypeHero",
	2: "kSkillSourceTypeTroop",
	3: "kSkillSourceTypeEquip",
}
var SkillSourceType_value = map[string]int32{
	"kSkillSourceTypeNone":  0,
	"kSkillSourceTypeHero":  1,
	"kSkillSourceTypeTroop": 2,
	"kSkillSourceTypeEquip": 3,
}

func (x SkillSourceType) String() string {
	return proto.EnumName(SkillSourceType_name, int32(x))
}
func (SkillSourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor38, []int{7} }

type BRHeroSimple struct {
	HeroId    uint32 `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	HeroLevel uint32 `protobuf:"varint,2,opt,name=hero_level,json=heroLevel" json:"hero_level,omitempty"`
}

func (m *BRHeroSimple) Reset()                    { *m = BRHeroSimple{} }
func (m *BRHeroSimple) String() string            { return proto.CompactTextString(m) }
func (*BRHeroSimple) ProtoMessage()               {}
func (*BRHeroSimple) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{0} }

func (m *BRHeroSimple) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *BRHeroSimple) GetHeroLevel() uint32 {
	if m != nil {
		return m.HeroLevel
	}
	return 0
}

type BRHeroMail struct {
	HeroId    uint32 `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	HeroLevel uint32 `protobuf:"varint,2,opt,name=hero_level,json=heroLevel" json:"hero_level,omitempty"`
	// 战斗增加的经验
	Exp uint32 `protobuf:"varint,3,opt,name=exp" json:"exp,omitempty"`
	// 星级别
	Star uint32 `protobuf:"varint,4,opt,name=star" json:"star,omitempty"`
}

func (m *BRHeroMail) Reset()                    { *m = BRHeroMail{} }
func (m *BRHeroMail) String() string            { return proto.CompactTextString(m) }
func (*BRHeroMail) ProtoMessage()               {}
func (*BRHeroMail) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{1} }

func (m *BRHeroMail) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *BRHeroMail) GetHeroLevel() uint32 {
	if m != nil {
		return m.HeroLevel
	}
	return 0
}

func (m *BRHeroMail) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *BRHeroMail) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

type BRArmyData struct {
	Hero1              *BRHeroSimple `protobuf:"bytes,1,opt,name=hero1" json:"hero1,omitempty"`
	Hero2              *BRHeroSimple `protobuf:"bytes,2,opt,name=hero2" json:"hero2,omitempty"`
	Hero3              *BRHeroSimple `protobuf:"bytes,3,opt,name=hero3" json:"hero3,omitempty"`
	Hero4              *BRHeroSimple `protobuf:"bytes,4,opt,name=hero4" json:"hero4,omitempty"`
	Hero5              *BRHeroSimple `protobuf:"bytes,5,opt,name=hero5" json:"hero5,omitempty"`
	HealTroops         []*TroopData  `protobuf:"bytes,9,rep,name=heal_troops,json=healTroops" json:"heal_troops,omitempty"`
	InitTroops         []*TroopData  `protobuf:"bytes,10,rep,name=init_troops,json=initTroops" json:"init_troops,omitempty"`
	CurrentTroops      []*TroopData  `protobuf:"bytes,11,rep,name=current_troops,json=currentTroops" json:"current_troops,omitempty"`
	SlightWoodTroops   []*TroopData  `protobuf:"bytes,12,rep,name=slight_wood_troops,json=slightWoodTroops" json:"slight_wood_troops,omitempty"`
	DeadTroops         []*TroopData  `protobuf:"bytes,13,rep,name=dead_troops,json=deadTroops" json:"dead_troops,omitempty"`
	PlayerName         string        `protobuf:"bytes,14,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	SinjuredWoodTroops []*TroopData  `protobuf:"bytes,15,rep,name=sinjured_wood_troops,json=sinjuredWoodTroops" json:"sinjured_wood_troops,omitempty"`
	EntityId           uint64        `protobuf:"varint,30,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	PlayerId           uint64        `protobuf:"varint,31,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	SiegeId            uint32        `protobuf:"varint,32,opt,name=siege_id,json=siegeId" json:"siege_id,omitempty"`
	SiegeLevel         uint32        `protobuf:"varint,33,opt,name=siege_level,json=siegeLevel" json:"siege_level,omitempty"`
}

func (m *BRArmyData) Reset()                    { *m = BRArmyData{} }
func (m *BRArmyData) String() string            { return proto.CompactTextString(m) }
func (*BRArmyData) ProtoMessage()               {}
func (*BRArmyData) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{2} }

func (m *BRArmyData) GetHero1() *BRHeroSimple {
	if m != nil {
		return m.Hero1
	}
	return nil
}

func (m *BRArmyData) GetHero2() *BRHeroSimple {
	if m != nil {
		return m.Hero2
	}
	return nil
}

func (m *BRArmyData) GetHero3() *BRHeroSimple {
	if m != nil {
		return m.Hero3
	}
	return nil
}

func (m *BRArmyData) GetHero4() *BRHeroSimple {
	if m != nil {
		return m.Hero4
	}
	return nil
}

func (m *BRArmyData) GetHero5() *BRHeroSimple {
	if m != nil {
		return m.Hero5
	}
	return nil
}

func (m *BRArmyData) GetHealTroops() []*TroopData {
	if m != nil {
		return m.HealTroops
	}
	return nil
}

func (m *BRArmyData) GetInitTroops() []*TroopData {
	if m != nil {
		return m.InitTroops
	}
	return nil
}

func (m *BRArmyData) GetCurrentTroops() []*TroopData {
	if m != nil {
		return m.CurrentTroops
	}
	return nil
}

func (m *BRArmyData) GetSlightWoodTroops() []*TroopData {
	if m != nil {
		return m.SlightWoodTroops
	}
	return nil
}

func (m *BRArmyData) GetDeadTroops() []*TroopData {
	if m != nil {
		return m.DeadTroops
	}
	return nil
}

func (m *BRArmyData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *BRArmyData) GetSinjuredWoodTroops() []*TroopData {
	if m != nil {
		return m.SinjuredWoodTroops
	}
	return nil
}

func (m *BRArmyData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *BRArmyData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *BRArmyData) GetSiegeId() uint32 {
	if m != nil {
		return m.SiegeId
	}
	return 0
}

func (m *BRArmyData) GetSiegeLevel() uint32 {
	if m != nil {
		return m.SiegeLevel
	}
	return 0
}

type BRResource struct {
	Resource   []*Resource   `protobuf:"bytes,1,rep,name=resource" json:"resource,omitempty"`
	Hero1      *BRHeroSimple `protobuf:"bytes,2,opt,name=hero1" json:"hero1,omitempty"`
	Hero2      *BRHeroSimple `protobuf:"bytes,3,opt,name=hero2" json:"hero2,omitempty"`
	PlayerName string        `protobuf:"bytes,4,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	PlayerId   uint64        `protobuf:"varint,5,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
}

func (m *BRResource) Reset()                    { *m = BRResource{} }
func (m *BRResource) String() string            { return proto.CompactTextString(m) }
func (*BRResource) ProtoMessage()               {}
func (*BRResource) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{3} }

func (m *BRResource) GetResource() []*Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *BRResource) GetHero1() *BRHeroSimple {
	if m != nil {
		return m.Hero1
	}
	return nil
}

func (m *BRResource) GetHero2() *BRHeroSimple {
	if m != nil {
		return m.Hero2
	}
	return nil
}

func (m *BRResource) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *BRResource) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type BRExtraPlayer struct {
	PlayerId       uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName     string `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	GuildId        uint64 `protobuf:"varint,3,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName      string `protobuf:"bytes,4,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	Head           string `protobuf:"bytes,6,opt,name=head" json:"head,omitempty"`
	GuildShortName string `protobuf:"bytes,7,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
}

func (m *BRExtraPlayer) Reset()                    { *m = BRExtraPlayer{} }
func (m *BRExtraPlayer) String() string            { return proto.CompactTextString(m) }
func (*BRExtraPlayer) ProtoMessage()               {}
func (*BRExtraPlayer) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{4} }

func (m *BRExtraPlayer) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *BRExtraPlayer) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *BRExtraPlayer) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *BRExtraPlayer) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *BRExtraPlayer) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *BRExtraPlayer) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

type BRExtraCastle struct {
	PlayerId       uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName     string `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	GuildId        uint64 `protobuf:"varint,3,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName      string `protobuf:"bytes,4,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	Head           string `protobuf:"bytes,6,opt,name=head" json:"head,omitempty"`
	GuildShortName string `protobuf:"bytes,7,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
}

func (m *BRExtraCastle) Reset()                    { *m = BRExtraCastle{} }
func (m *BRExtraCastle) String() string            { return proto.CompactTextString(m) }
func (*BRExtraCastle) ProtoMessage()               {}
func (*BRExtraCastle) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{5} }

func (m *BRExtraCastle) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *BRExtraCastle) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *BRExtraCastle) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *BRExtraCastle) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *BRExtraCastle) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *BRExtraCastle) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

type BRExtraMonster struct {
	MonsterCsvId uint32     `protobuf:"varint,1,opt,name=monster_csv_id,json=monsterCsvId" json:"monster_csv_id,omitempty"`
	EntityType   EntityType `protobuf:"varint,2,opt,name=entity_type,json=entityType,enum=protomsg.EntityType" json:"entity_type,omitempty"`
}

func (m *BRExtraMonster) Reset()                    { *m = BRExtraMonster{} }
func (m *BRExtraMonster) String() string            { return proto.CompactTextString(m) }
func (*BRExtraMonster) ProtoMessage()               {}
func (*BRExtraMonster) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{6} }

func (m *BRExtraMonster) GetMonsterCsvId() uint32 {
	if m != nil {
		return m.MonsterCsvId
	}
	return 0
}

func (m *BRExtraMonster) GetEntityType() EntityType {
	if m != nil {
		return m.EntityType
	}
	return EntityType_kEntityType_None
}

type BRExtraBarbarians struct {
	// 怪物配置id
	BarbariansId uint32 `protobuf:"varint,8,opt,name=barbarians_id,json=barbariansId" json:"barbarians_id,omitempty"`
}

func (m *BRExtraBarbarians) Reset()                    { *m = BRExtraBarbarians{} }
func (m *BRExtraBarbarians) String() string            { return proto.CompactTextString(m) }
func (*BRExtraBarbarians) ProtoMessage()               {}
func (*BRExtraBarbarians) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{7} }

func (m *BRExtraBarbarians) GetBarbariansId() uint32 {
	if m != nil {
		return m.BarbariansId
	}
	return 0
}

// 野蛮人城寨
type BRExtraBarbarianFort struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *BRExtraBarbarianFort) Reset()                    { *m = BRExtraBarbarianFort{} }
func (m *BRExtraBarbarianFort) String() string            { return proto.CompactTextString(m) }
func (*BRExtraBarbarianFort) ProtoMessage()               {}
func (*BRExtraBarbarianFort) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{8} }

func (m *BRExtraBarbarianFort) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 联盟要塞
type BRExtraGuildBuildingFort struct {
	ConfigId uint32           `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Owner    *EntityOwnerData `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *BRExtraGuildBuildingFort) Reset()                    { *m = BRExtraGuildBuildingFort{} }
func (m *BRExtraGuildBuildingFort) String() string            { return proto.CompactTextString(m) }
func (*BRExtraGuildBuildingFort) ProtoMessage()               {}
func (*BRExtraGuildBuildingFort) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{9} }

func (m *BRExtraGuildBuildingFort) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *BRExtraGuildBuildingFort) GetOwner() *EntityOwnerData {
	if m != nil {
		return m.Owner
	}
	return nil
}

// 联盟旗帜
type BRExtraGuildBuildingFlag struct {
	ConfigId uint32           `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Owner    *EntityOwnerData `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *BRExtraGuildBuildingFlag) Reset()                    { *m = BRExtraGuildBuildingFlag{} }
func (m *BRExtraGuildBuildingFlag) String() string            { return proto.CompactTextString(m) }
func (*BRExtraGuildBuildingFlag) ProtoMessage()               {}
func (*BRExtraGuildBuildingFlag) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{10} }

func (m *BRExtraGuildBuildingFlag) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *BRExtraGuildBuildingFlag) GetOwner() *EntityOwnerData {
	if m != nil {
		return m.Owner
	}
	return nil
}

// 据点
type BRExtraStrongHold struct {
	ConfigId uint32           `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Owner    *EntityOwnerData `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *BRExtraStrongHold) Reset()                    { *m = BRExtraStrongHold{} }
func (m *BRExtraStrongHold) String() string            { return proto.CompactTextString(m) }
func (*BRExtraStrongHold) ProtoMessage()               {}
func (*BRExtraStrongHold) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{11} }

func (m *BRExtraStrongHold) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *BRExtraStrongHold) GetOwner() *EntityOwnerData {
	if m != nil {
		return m.Owner
	}
	return nil
}

// 新版据点
type BRNewExtraStrongHold struct {
	ConfigId uint32           `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Owner    *EntityOwnerData `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *BRNewExtraStrongHold) Reset()                    { *m = BRNewExtraStrongHold{} }
func (m *BRNewExtraStrongHold) String() string            { return proto.CompactTextString(m) }
func (*BRNewExtraStrongHold) ProtoMessage()               {}
func (*BRNewExtraStrongHold) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{12} }

func (m *BRNewExtraStrongHold) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *BRNewExtraStrongHold) GetOwner() *EntityOwnerData {
	if m != nil {
		return m.Owner
	}
	return nil
}

// 关卡
type BRExtraPass struct {
	ConfigId       uint32 `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	GuildId        uint64 `protobuf:"varint,4,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName      string `protobuf:"bytes,5,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	GuildIcon      uint32 `protobuf:"varint,6,opt,name=guild_icon,json=guildIcon" json:"guild_icon,omitempty"`
	GuildShortName string `protobuf:"bytes,7,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
}

func (m *BRExtraPass) Reset()                    { *m = BRExtraPass{} }
func (m *BRExtraPass) String() string            { return proto.CompactTextString(m) }
func (*BRExtraPass) ProtoMessage()               {}
func (*BRExtraPass) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{13} }

func (m *BRExtraPass) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *BRExtraPass) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *BRExtraPass) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *BRExtraPass) GetGuildIcon() uint32 {
	if m != nil {
		return m.GuildIcon
	}
	return 0
}

func (m *BRExtraPass) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

// 奇观
type BRExtraTemple struct {
	ConfigId       uint32 `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	GuildId        uint64 `protobuf:"varint,4,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName      string `protobuf:"bytes,5,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	GuildIcon      uint32 `protobuf:"varint,6,opt,name=guild_icon,json=guildIcon" json:"guild_icon,omitempty"`
	GuildShortName string `protobuf:"bytes,7,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
}

func (m *BRExtraTemple) Reset()                    { *m = BRExtraTemple{} }
func (m *BRExtraTemple) String() string            { return proto.CompactTextString(m) }
func (*BRExtraTemple) ProtoMessage()               {}
func (*BRExtraTemple) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{14} }

func (m *BRExtraTemple) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *BRExtraTemple) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *BRExtraTemple) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *BRExtraTemple) GetGuildIcon() uint32 {
	if m != nil {
		return m.GuildIcon
	}
	return 0
}

func (m *BRExtraTemple) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

// 战报邮件对象
type BREntity struct {
	Position  *Vector2D            `protobuf:"bytes,5,opt,name=position" json:"position,omitempty"`
	Power     uint32               `protobuf:"varint,7,opt,name=power" json:"power,omitempty"`
	ExtraType BRExtraType          `protobuf:"varint,8,opt,name=extra_type,json=extraType,enum=protomsg.BRExtraType" json:"extra_type,omitempty"`
	ExtraAny  *google_protobuf.Any `protobuf:"bytes,9,opt,name=extra_any,json=extraAny" json:"extra_any,omitempty"`
	// 初始兵量
	InitArmy uint32 `protobuf:"varint,11,opt,name=init_army,json=initArmy" json:"init_army,omitempty"`
	// 治疗兵量
	HealArmy uint32 `protobuf:"varint,12,opt,name=heal_army,json=healArmy" json:"heal_army,omitempty"`
	// 死亡兵量
	DeadArmy uint32 `protobuf:"varint,13,opt,name=dead_army,json=deadArmy" json:"dead_army,omitempty"`
	// 重伤兵量
	SinjuredArmy uint32 `protobuf:"varint,14,opt,name=sinjured_army,json=sinjuredArmy" json:"sinjured_army,omitempty"`
	// 轻伤兵量
	SlightArmy uint32 `protobuf:"varint,15,opt,name=slight_army,json=slightArmy" json:"slight_army,omitempty"`
	// 剩余兵量
	RemainArmy uint32 `protobuf:"varint,16,opt,name=remain_army,json=remainArmy" json:"remain_army,omitempty"`
	// 警戒塔兵量
	TowerArmy uint32      `protobuf:"varint,17,opt,name=tower_army,json=towerArmy" json:"tower_army,omitempty"`
	Hero1     *BRHeroMail `protobuf:"bytes,21,opt,name=hero1" json:"hero1,omitempty"`
	Hero2     *BRHeroMail `protobuf:"bytes,22,opt,name=hero2" json:"hero2,omitempty"`
	// 击杀奖励
	KillReward *ResourceSet `protobuf:"bytes,26,opt,name=kill_reward,json=killReward" json:"kill_reward,omitempty"`
	// 掠夺资源
	PlunderReward []*BRResource `protobuf:"bytes,27,rep,name=plunder_reward,json=plunderReward" json:"plunder_reward,omitempty"`
	// entity_id
	EntityId         uint64 `protobuf:"varint,28,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	PositionRegionId uint64 `protobuf:"varint,29,opt,name=position_region_id,json=positionRegionId" json:"position_region_id,omitempty"`
	// 独杀奖励
	FirstKillReward *ResourceSet `protobuf:"bytes,30,opt,name=first_kill_reward,json=firstKillReward" json:"first_kill_reward,omitempty"`
}

func (m *BREntity) Reset()                    { *m = BREntity{} }
func (m *BREntity) String() string            { return proto.CompactTextString(m) }
func (*BREntity) ProtoMessage()               {}
func (*BREntity) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{15} }

func (m *BREntity) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *BREntity) GetPower() uint32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *BREntity) GetExtraType() BRExtraType {
	if m != nil {
		return m.ExtraType
	}
	return BRExtraType_kBRExtraType_None
}

func (m *BREntity) GetExtraAny() *google_protobuf.Any {
	if m != nil {
		return m.ExtraAny
	}
	return nil
}

func (m *BREntity) GetInitArmy() uint32 {
	if m != nil {
		return m.InitArmy
	}
	return 0
}

func (m *BREntity) GetHealArmy() uint32 {
	if m != nil {
		return m.HealArmy
	}
	return 0
}

func (m *BREntity) GetDeadArmy() uint32 {
	if m != nil {
		return m.DeadArmy
	}
	return 0
}

func (m *BREntity) GetSinjuredArmy() uint32 {
	if m != nil {
		return m.SinjuredArmy
	}
	return 0
}

func (m *BREntity) GetSlightArmy() uint32 {
	if m != nil {
		return m.SlightArmy
	}
	return 0
}

func (m *BREntity) GetRemainArmy() uint32 {
	if m != nil {
		return m.RemainArmy
	}
	return 0
}

func (m *BREntity) GetTowerArmy() uint32 {
	if m != nil {
		return m.TowerArmy
	}
	return 0
}

func (m *BREntity) GetHero1() *BRHeroMail {
	if m != nil {
		return m.Hero1
	}
	return nil
}

func (m *BREntity) GetHero2() *BRHeroMail {
	if m != nil {
		return m.Hero2
	}
	return nil
}

func (m *BREntity) GetKillReward() *ResourceSet {
	if m != nil {
		return m.KillReward
	}
	return nil
}

func (m *BREntity) GetPlunderReward() []*BRResource {
	if m != nil {
		return m.PlunderReward
	}
	return nil
}

func (m *BREntity) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *BREntity) GetPositionRegionId() uint64 {
	if m != nil {
		return m.PositionRegionId
	}
	return 0
}

func (m *BREntity) GetFirstKillReward() *ResourceSet {
	if m != nil {
		return m.FirstKillReward
	}
	return nil
}

type BRTroopSample struct {
	Time           int64  `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	RemainTroopNum uint32 `protobuf:"varint,2,opt,name=remain_troop_num,json=remainTroopNum" json:"remain_troop_num,omitempty"`
}

func (m *BRTroopSample) Reset()                    { *m = BRTroopSample{} }
func (m *BRTroopSample) String() string            { return proto.CompactTextString(m) }
func (*BRTroopSample) ProtoMessage()               {}
func (*BRTroopSample) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{16} }

func (m *BRTroopSample) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *BRTroopSample) GetRemainTroopNum() uint32 {
	if m != nil {
		return m.RemainTroopNum
	}
	return 0
}

type BRTroopDelta struct {
	Time          int64  `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	TroopNumDelta int32  `protobuf:"varint,2,opt,name=troop_num_delta,json=troopNumDelta" json:"troop_num_delta,omitempty"`
	PlayerName    string `protobuf:"bytes,3,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	Head          string `protobuf:"bytes,4,opt,name=head" json:"head,omitempty"`
}

func (m *BRTroopDelta) Reset()                    { *m = BRTroopDelta{} }
func (m *BRTroopDelta) String() string            { return proto.CompactTextString(m) }
func (*BRTroopDelta) ProtoMessage()               {}
func (*BRTroopDelta) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{17} }

func (m *BRTroopDelta) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *BRTroopDelta) GetTroopNumDelta() int32 {
	if m != nil {
		return m.TroopNumDelta
	}
	return 0
}

func (m *BRTroopDelta) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *BRTroopDelta) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

// 庞贝的复仇建筑
type BRExtraPompeiiBuild struct {
	ConfigId       uint32 `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	GuildId        uint64 `protobuf:"varint,4,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName      string `protobuf:"bytes,5,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	GuildIcon      uint32 `protobuf:"varint,6,opt,name=guild_icon,json=guildIcon" json:"guild_icon,omitempty"`
	GuildShortName string `protobuf:"bytes,7,opt,name=guild_short_name,json=guildShortName" json:"guild_short_name,omitempty"`
}

func (m *BRExtraPompeiiBuild) Reset()                    { *m = BRExtraPompeiiBuild{} }
func (m *BRExtraPompeiiBuild) String() string            { return proto.CompactTextString(m) }
func (*BRExtraPompeiiBuild) ProtoMessage()               {}
func (*BRExtraPompeiiBuild) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{18} }

func (m *BRExtraPompeiiBuild) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

func (m *BRExtraPompeiiBuild) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *BRExtraPompeiiBuild) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *BRExtraPompeiiBuild) GetGuildIcon() uint32 {
	if m != nil {
		return m.GuildIcon
	}
	return 0
}

func (m *BRExtraPompeiiBuild) GetGuildShortName() string {
	if m != nil {
		return m.GuildShortName
	}
	return ""
}

// 庞贝普通怪
type BRExtraPompeiiMonster struct {
	ConfigId uint32 `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
}

func (m *BRExtraPompeiiMonster) Reset()                    { *m = BRExtraPompeiiMonster{} }
func (m *BRExtraPompeiiMonster) String() string            { return proto.CompactTextString(m) }
func (*BRExtraPompeiiMonster) ProtoMessage()               {}
func (*BRExtraPompeiiMonster) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{19} }

func (m *BRExtraPompeiiMonster) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

// 庞贝boss
type BRExtraPompeiiBoss struct {
	ConfigId uint32 `protobuf:"varint,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
}

func (m *BRExtraPompeiiBoss) Reset()                    { *m = BRExtraPompeiiBoss{} }
func (m *BRExtraPompeiiBoss) String() string            { return proto.CompactTextString(m) }
func (*BRExtraPompeiiBoss) ProtoMessage()               {}
func (*BRExtraPompeiiBoss) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{20} }

func (m *BRExtraPompeiiBoss) GetConfigId() uint32 {
	if m != nil {
		return m.ConfigId
	}
	return 0
}

// 简单的详细战报信息
type BattleDetailLogSimple struct {
	LogGuid          string           `protobuf:"bytes,1,opt,name=log_guid,json=logGuid" json:"log_guid,omitempty"`
	ServerExpireTime int64            `protobuf:"varint,2,opt,name=server_expire_time,json=serverExpireTime" json:"server_expire_time,omitempty"`
	AOrB             BattleDetailAOrB `protobuf:"varint,3,opt,name=a_or_b,json=aOrB,enum=protomsg.BattleDetailAOrB" json:"a_or_b,omitempty"`
	RegionId         uint64           `protobuf:"varint,4,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
}

func (m *BattleDetailLogSimple) Reset()                    { *m = BattleDetailLogSimple{} }
func (m *BattleDetailLogSimple) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLogSimple) ProtoMessage()               {}
func (*BattleDetailLogSimple) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{21} }

func (m *BattleDetailLogSimple) GetLogGuid() string {
	if m != nil {
		return m.LogGuid
	}
	return ""
}

func (m *BattleDetailLogSimple) GetServerExpireTime() int64 {
	if m != nil {
		return m.ServerExpireTime
	}
	return 0
}

func (m *BattleDetailLogSimple) GetAOrB() BattleDetailAOrB {
	if m != nil {
		return m.AOrB
	}
	return BattleDetailAOrB_kBattleDetailAOrB_None
}

func (m *BattleDetailLogSimple) GetRegionId() uint64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

// 战报
type BattleReport struct {
	// 战斗日志id
	BattleLogId      uint32                 `protobuf:"varint,1,opt,name=battle_log_id,json=battleLogId" json:"battle_log_id,omitempty"`
	Entity1          *BREntity              `protobuf:"bytes,2,opt,name=entity1" json:"entity1,omitempty"`
	Entity2          *BREntity              `protobuf:"bytes,3,opt,name=entity2" json:"entity2,omitempty"`
	Position         *Vector2D              `protobuf:"bytes,5,opt,name=position" json:"position,omitempty"`
	StartTime        int64                  `protobuf:"varint,6,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime          int64                  `protobuf:"varint,7,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	BattleType       uint32                 `protobuf:"varint,10,opt,name=battle_type,json=battleType" json:"battle_type,omitempty"`
	Victor           BattleVictoryType      `protobuf:"varint,11,opt,name=victor,enum=protomsg.BattleVictoryType" json:"victor,omitempty"`
	DetailLogSimple  *BattleDetailLogSimple `protobuf:"bytes,12,opt,name=detail_log_simple,json=detailLogSimple" json:"detail_log_simple,omitempty"`
	ReportUrl        string                 `protobuf:"bytes,13,opt,name=report_url,json=reportUrl" json:"report_url,omitempty"`
	HideDetail       bool                   `protobuf:"varint,14,opt,name=hide_detail,json=hideDetail" json:"hide_detail,omitempty"`
	PositionRegionId uint64                 `protobuf:"varint,15,opt,name=position_region_id,json=positionRegionId" json:"position_region_id,omitempty"`
}

func (m *BattleReport) Reset()                    { *m = BattleReport{} }
func (m *BattleReport) String() string            { return proto.CompactTextString(m) }
func (*BattleReport) ProtoMessage()               {}
func (*BattleReport) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{22} }

func (m *BattleReport) GetBattleLogId() uint32 {
	if m != nil {
		return m.BattleLogId
	}
	return 0
}

func (m *BattleReport) GetEntity1() *BREntity {
	if m != nil {
		return m.Entity1
	}
	return nil
}

func (m *BattleReport) GetEntity2() *BREntity {
	if m != nil {
		return m.Entity2
	}
	return nil
}

func (m *BattleReport) GetPosition() *Vector2D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *BattleReport) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *BattleReport) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *BattleReport) GetBattleType() uint32 {
	if m != nil {
		return m.BattleType
	}
	return 0
}

func (m *BattleReport) GetVictor() BattleVictoryType {
	if m != nil {
		return m.Victor
	}
	return BattleVictoryType_kBVT_Draw
}

func (m *BattleReport) GetDetailLogSimple() *BattleDetailLogSimple {
	if m != nil {
		return m.DetailLogSimple
	}
	return nil
}

func (m *BattleReport) GetReportUrl() string {
	if m != nil {
		return m.ReportUrl
	}
	return ""
}

func (m *BattleReport) GetHideDetail() bool {
	if m != nil {
		return m.HideDetail
	}
	return false
}

func (m *BattleReport) GetPositionRegionId() uint64 {
	if m != nil {
		return m.PositionRegionId
	}
	return 0
}

// 战报邮件对象
type BREntityDetail struct {
	Hero1    *HeroInfo     `protobuf:"bytes,21,opt,name=hero1" json:"hero1,omitempty"`
	Hero2    *HeroInfo     `protobuf:"bytes,22,opt,name=hero2" json:"hero2,omitempty"`
	Army     []*BRArmyData `protobuf:"bytes,23,rep,name=army" json:"army,omitempty"`
	Effect   *EffectData   `protobuf:"bytes,24,opt,name=effect" json:"effect,omitempty"`
	EntityId uint64        `protobuf:"varint,28,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Hero3    *HeroInfo     `protobuf:"bytes,31,opt,name=hero3" json:"hero3,omitempty"`
	Hero4    *HeroInfo     `protobuf:"bytes,32,opt,name=hero4" json:"hero4,omitempty"`
	Hero5    *HeroInfo     `protobuf:"bytes,33,opt,name=hero5" json:"hero5,omitempty"`
}

func (m *BREntityDetail) Reset()                    { *m = BREntityDetail{} }
func (m *BREntityDetail) String() string            { return proto.CompactTextString(m) }
func (*BREntityDetail) ProtoMessage()               {}
func (*BREntityDetail) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{23} }

func (m *BREntityDetail) GetHero1() *HeroInfo {
	if m != nil {
		return m.Hero1
	}
	return nil
}

func (m *BREntityDetail) GetHero2() *HeroInfo {
	if m != nil {
		return m.Hero2
	}
	return nil
}

func (m *BREntityDetail) GetArmy() []*BRArmyData {
	if m != nil {
		return m.Army
	}
	return nil
}

func (m *BREntityDetail) GetEffect() *EffectData {
	if m != nil {
		return m.Effect
	}
	return nil
}

func (m *BREntityDetail) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *BREntityDetail) GetHero3() *HeroInfo {
	if m != nil {
		return m.Hero3
	}
	return nil
}

func (m *BREntityDetail) GetHero4() *HeroInfo {
	if m != nil {
		return m.Hero4
	}
	return nil
}

func (m *BREntityDetail) GetHero5() *HeroInfo {
	if m != nil {
		return m.Hero5
	}
	return nil
}

type BattleReportDetail struct {
	EntityA *BREntityDetail `protobuf:"bytes,2,opt,name=entity_a,json=entityA" json:"entity_a,omitempty"`
	EntityB *BREntityDetail `protobuf:"bytes,3,opt,name=entity_b,json=entityB" json:"entity_b,omitempty"`
}

func (m *BattleReportDetail) Reset()                    { *m = BattleReportDetail{} }
func (m *BattleReportDetail) String() string            { return proto.CompactTextString(m) }
func (*BattleReportDetail) ProtoMessage()               {}
func (*BattleReportDetail) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{24} }

func (m *BattleReportDetail) GetEntityA() *BREntityDetail {
	if m != nil {
		return m.EntityA
	}
	return nil
}

func (m *BattleReportDetail) GetEntityB() *BREntityDetail {
	if m != nil {
		return m.EntityB
	}
	return nil
}

type BattleMailBytes struct {
	BattleMail []byte `protobuf:"bytes,1,opt,name=battle_mail,json=battleMail,proto3" json:"battle_mail,omitempty"`
}

func (m *BattleMailBytes) Reset()                    { *m = BattleMailBytes{} }
func (m *BattleMailBytes) String() string            { return proto.CompactTextString(m) }
func (*BattleMailBytes) ProtoMessage()               {}
func (*BattleMailBytes) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{25} }

func (m *BattleMailBytes) GetBattleMail() []byte {
	if m != nil {
		return m.BattleMail
	}
	return nil
}

// 战斗邮件
type BattleMail struct {
	BattleReport   []*BattleReport   `protobuf:"bytes,1,rep,name=battle_report,json=battleReport" json:"battle_report,omitempty"`
	TroopNumSample []*BRTroopSample  `protobuf:"bytes,8,rep,name=troop_num_sample,json=troopNumSample" json:"troop_num_sample,omitempty"`
	TroopDelta     []*BRTroopDelta   `protobuf:"bytes,9,rep,name=troop_delta,json=troopDelta" json:"troop_delta,omitempty"`
	Victor         BattleVictoryType `protobuf:"varint,11,opt,name=victor,enum=protomsg.BattleVictoryType" json:"victor,omitempty"`
}

func (m *BattleMail) Reset()                    { *m = BattleMail{} }
func (m *BattleMail) String() string            { return proto.CompactTextString(m) }
func (*BattleMail) ProtoMessage()               {}
func (*BattleMail) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{26} }

func (m *BattleMail) GetBattleReport() []*BattleReport {
	if m != nil {
		return m.BattleReport
	}
	return nil
}

func (m *BattleMail) GetTroopNumSample() []*BRTroopSample {
	if m != nil {
		return m.TroopNumSample
	}
	return nil
}

func (m *BattleMail) GetTroopDelta() []*BRTroopDelta {
	if m != nil {
		return m.TroopDelta
	}
	return nil
}

func (m *BattleMail) GetVictor() BattleVictoryType {
	if m != nil {
		return m.Victor
	}
	return BattleVictoryType_kBVT_Draw
}

// 增援伤害
type BattleDetailPartnerDamage struct {
	EntityId uint64 `protobuf:"varint,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Damage   int32  `protobuf:"varint,2,opt,name=damage" json:"damage,omitempty"`
}

func (m *BattleDetailPartnerDamage) Reset()                    { *m = BattleDetailPartnerDamage{} }
func (m *BattleDetailPartnerDamage) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailPartnerDamage) ProtoMessage()               {}
func (*BattleDetailPartnerDamage) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{27} }

func (m *BattleDetailPartnerDamage) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *BattleDetailPartnerDamage) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

// 伤害
type BattleDetailDamage struct {
	Damage int32 `protobuf:"varint,1,opt,name=damage" json:"damage,omitempty"`
	// 增援对象的伤害统计.
	PartnerDamage []*BattleDetailPartnerDamage `protobuf:"bytes,2,rep,name=partner_damage,json=partnerDamage" json:"partner_damage,omitempty"`
}

func (m *BattleDetailDamage) Reset()                    { *m = BattleDetailDamage{} }
func (m *BattleDetailDamage) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailDamage) ProtoMessage()               {}
func (*BattleDetailDamage) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{28} }

func (m *BattleDetailDamage) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *BattleDetailDamage) GetPartnerDamage() []*BattleDetailPartnerDamage {
	if m != nil {
		return m.PartnerDamage
	}
	return nil
}

// 使用技能信息
type BattleDetailSkillUseInfo struct {
	SkillId uint32 `protobuf:"varint,1,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	HeroId  uint32 `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
}

func (m *BattleDetailSkillUseInfo) Reset()                    { *m = BattleDetailSkillUseInfo{} }
func (m *BattleDetailSkillUseInfo) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailSkillUseInfo) ProtoMessage()               {}
func (*BattleDetailSkillUseInfo) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{29} }

func (m *BattleDetailSkillUseInfo) GetSkillId() uint32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *BattleDetailSkillUseInfo) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

// 技能信息
type BattleDetailSkillInfo struct {
	SkillId uint32          `protobuf:"varint,1,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	Type    SkillSourceType `protobuf:"varint,2,opt,name=type,enum=protomsg.SkillSourceType" json:"type,omitempty"`
	CsvId   uint32          `protobuf:"varint,3,opt,name=csv_id,json=csvId" json:"csv_id,omitempty"`
}

func (m *BattleDetailSkillInfo) Reset()                    { *m = BattleDetailSkillInfo{} }
func (m *BattleDetailSkillInfo) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailSkillInfo) ProtoMessage()               {}
func (*BattleDetailSkillInfo) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{30} }

func (m *BattleDetailSkillInfo) GetSkillId() uint32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *BattleDetailSkillInfo) GetType() SkillSourceType {
	if m != nil {
		return m.Type
	}
	return SkillSourceType_kSkillSourceTypeNone
}

func (m *BattleDetailSkillInfo) GetCsvId() uint32 {
	if m != nil {
		return m.CsvId
	}
	return 0
}

// 普攻行为.
type BattleDetailLogNormalAtk struct {
	Damage *BattleDetailDamage `protobuf:"bytes,1,opt,name=damage" json:"damage,omitempty"`
}

func (m *BattleDetailLogNormalAtk) Reset()                    { *m = BattleDetailLogNormalAtk{} }
func (m *BattleDetailLogNormalAtk) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLogNormalAtk) ProtoMessage()               {}
func (*BattleDetailLogNormalAtk) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{31} }

func (m *BattleDetailLogNormalAtk) GetDamage() *BattleDetailDamage {
	if m != nil {
		return m.Damage
	}
	return nil
}

// 触发技能行为
type BattleDetailNagSkill struct {
	SkillInfo *BattleDetailSkillInfo `protobuf:"bytes,1,opt,name=skill_info,json=skillInfo" json:"skill_info,omitempty"`
}

func (m *BattleDetailNagSkill) Reset()                    { *m = BattleDetailNagSkill{} }
func (m *BattleDetailNagSkill) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailNagSkill) ProtoMessage()               {}
func (*BattleDetailNagSkill) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{32} }

func (m *BattleDetailNagSkill) GetSkillInfo() *BattleDetailSkillInfo {
	if m != nil {
		return m.SkillInfo
	}
	return nil
}

// 引爆伤害行为
type BattleDetailLogDisperseDamage struct {
	Damage        *BattleDetailDamage    `protobuf:"bytes,1,opt,name=damage" json:"damage,omitempty"`
	OverlapNum    uint32                 `protobuf:"varint,2,opt,name=overlap_num,json=overlapNum" json:"overlap_num,omitempty"`
	SkillStatusId uint32                 `protobuf:"varint,3,opt,name=skill_status_id,json=skillStatusId" json:"skill_status_id,omitempty"`
	Skill         *BattleDetailSkillInfo `protobuf:"bytes,4,opt,name=skill" json:"skill,omitempty"`
}

func (m *BattleDetailLogDisperseDamage) Reset()                    { *m = BattleDetailLogDisperseDamage{} }
func (m *BattleDetailLogDisperseDamage) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLogDisperseDamage) ProtoMessage()               {}
func (*BattleDetailLogDisperseDamage) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{33} }

func (m *BattleDetailLogDisperseDamage) GetDamage() *BattleDetailDamage {
	if m != nil {
		return m.Damage
	}
	return nil
}

func (m *BattleDetailLogDisperseDamage) GetOverlapNum() uint32 {
	if m != nil {
		return m.OverlapNum
	}
	return 0
}

func (m *BattleDetailLogDisperseDamage) GetSkillStatusId() uint32 {
	if m != nil {
		return m.SkillStatusId
	}
	return 0
}

func (m *BattleDetailLogDisperseDamage) GetSkill() *BattleDetailSkillInfo {
	if m != nil {
		return m.Skill
	}
	return nil
}

// 反击行为.
type BattleDetailLogCounterAtk struct {
	Damage *BattleDetailDamage `protobuf:"bytes,1,opt,name=damage" json:"damage,omitempty"`
}

func (m *BattleDetailLogCounterAtk) Reset()                    { *m = BattleDetailLogCounterAtk{} }
func (m *BattleDetailLogCounterAtk) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLogCounterAtk) ProtoMessage()               {}
func (*BattleDetailLogCounterAtk) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{34} }

func (m *BattleDetailLogCounterAtk) GetDamage() *BattleDetailDamage {
	if m != nil {
		return m.Damage
	}
	return nil
}

// 使用怒气技能行为
type BattleDetailLogUseRage struct {
	SkillUseInfo *BattleDetailSkillUseInfo `protobuf:"bytes,1,opt,name=skill_use_info,json=skillUseInfo" json:"skill_use_info,omitempty"`
}

func (m *BattleDetailLogUseRage) Reset()                    { *m = BattleDetailLogUseRage{} }
func (m *BattleDetailLogUseRage) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLogUseRage) ProtoMessage()               {}
func (*BattleDetailLogUseRage) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{35} }

func (m *BattleDetailLogUseRage) GetSkillUseInfo() *BattleDetailSkillUseInfo {
	if m != nil {
		return m.SkillUseInfo
	}
	return nil
}

// 使用主动技能行为
type BattleDetailLogUseDirect struct {
	SkillUseInfo *BattleDetailSkillUseInfo `protobuf:"bytes,1,opt,name=skill_use_info,json=skillUseInfo" json:"skill_use_info,omitempty"`
}

func (m *BattleDetailLogUseDirect) Reset()                    { *m = BattleDetailLogUseDirect{} }
func (m *BattleDetailLogUseDirect) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLogUseDirect) ProtoMessage()               {}
func (*BattleDetailLogUseDirect) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{36} }

func (m *BattleDetailLogUseDirect) GetSkillUseInfo() *BattleDetailSkillUseInfo {
	if m != nil {
		return m.SkillUseInfo
	}
	return nil
}

// 受到伤害行为
type BattleDetailLogOnDamage struct {
	Damage *BattleDetailDamage    `protobuf:"bytes,1,opt,name=damage" json:"damage,omitempty"`
	Skill  *BattleDetailSkillInfo `protobuf:"bytes,2,opt,name=skill" json:"skill,omitempty"`
}

func (m *BattleDetailLogOnDamage) Reset()                    { *m = BattleDetailLogOnDamage{} }
func (m *BattleDetailLogOnDamage) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLogOnDamage) ProtoMessage()               {}
func (*BattleDetailLogOnDamage) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{37} }

func (m *BattleDetailLogOnDamage) GetDamage() *BattleDetailDamage {
	if m != nil {
		return m.Damage
	}
	return nil
}

func (m *BattleDetailLogOnDamage) GetSkill() *BattleDetailSkillInfo {
	if m != nil {
		return m.Skill
	}
	return nil
}

// 受到友军治疗行为
type BattleDetailLogOnFriendSkillEffect struct {
	FriendEntityId uint64                    `protobuf:"varint,1,opt,name=friend_entity_id,json=friendEntityId" json:"friend_entity_id,omitempty"`
	Heal           int32                     `protobuf:"varint,2,opt,name=heal" json:"heal,omitempty"`
	SkillId        uint32                    `protobuf:"varint,3,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	SubActionId    BattleDetailLogActionType `protobuf:"varint,4,opt,name=sub_action_id,json=subActionId,enum=protomsg.BattleDetailLogActionType" json:"sub_action_id,omitempty"`
	SkillInfo      *BattleDetailSkillInfo    `protobuf:"bytes,5,opt,name=skill_info,json=skillInfo" json:"skill_info,omitempty"`
}

func (m *BattleDetailLogOnFriendSkillEffect) Reset()         { *m = BattleDetailLogOnFriendSkillEffect{} }
func (m *BattleDetailLogOnFriendSkillEffect) String() string { return proto.CompactTextString(m) }
func (*BattleDetailLogOnFriendSkillEffect) ProtoMessage()    {}
func (*BattleDetailLogOnFriendSkillEffect) Descriptor() ([]byte, []int) {
	return fileDescriptor38, []int{38}
}

func (m *BattleDetailLogOnFriendSkillEffect) GetFriendEntityId() uint64 {
	if m != nil {
		return m.FriendEntityId
	}
	return 0
}

func (m *BattleDetailLogOnFriendSkillEffect) GetHeal() int32 {
	if m != nil {
		return m.Heal
	}
	return 0
}

func (m *BattleDetailLogOnFriendSkillEffect) GetSkillId() uint32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *BattleDetailLogOnFriendSkillEffect) GetSubActionId() BattleDetailLogActionType {
	if m != nil {
		return m.SubActionId
	}
	return BattleDetailLogActionType_kBattleDetailLogActionType_None
}

func (m *BattleDetailLogOnFriendSkillEffect) GetSkillInfo() *BattleDetailSkillInfo {
	if m != nil {
		return m.SkillInfo
	}
	return nil
}

// 状态消失触发技能行为
type BattleDetailStatusDeleteNag struct {
	StatusId         uint32                 `protobuf:"varint,1,opt,name=status_id,json=statusId" json:"status_id,omitempty"`
	StatusEntityType BattleDetailAOrB       `protobuf:"varint,2,opt,name=status_entity_type,json=statusEntityType,enum=protomsg.BattleDetailAOrB" json:"status_entity_type,omitempty"`
	StatusEntityId   uint64                 `protobuf:"varint,3,opt,name=status_entity_id,json=statusEntityId" json:"status_entity_id,omitempty"`
	SkillInfo        *BattleDetailSkillInfo `protobuf:"bytes,4,opt,name=skill_info,json=skillInfo" json:"skill_info,omitempty"`
}

func (m *BattleDetailStatusDeleteNag) Reset()                    { *m = BattleDetailStatusDeleteNag{} }
func (m *BattleDetailStatusDeleteNag) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailStatusDeleteNag) ProtoMessage()               {}
func (*BattleDetailStatusDeleteNag) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{39} }

func (m *BattleDetailStatusDeleteNag) GetStatusId() uint32 {
	if m != nil {
		return m.StatusId
	}
	return 0
}

func (m *BattleDetailStatusDeleteNag) GetStatusEntityType() BattleDetailAOrB {
	if m != nil {
		return m.StatusEntityType
	}
	return BattleDetailAOrB_kBattleDetailAOrB_None
}

func (m *BattleDetailStatusDeleteNag) GetStatusEntityId() uint64 {
	if m != nil {
		return m.StatusEntityId
	}
	return 0
}

func (m *BattleDetailStatusDeleteNag) GetSkillInfo() *BattleDetailSkillInfo {
	if m != nil {
		return m.SkillInfo
	}
	return nil
}

type BattleDetailNagSkillBuff struct {
	// 触发原因的entity_id
	TriReasonEntityId uint64 `protobuf:"varint,1,opt,name=tri_reason_entity_id,json=triReasonEntityId" json:"tri_reason_entity_id,omitempty"`
	// 触发原因的entity类型
	TriReasonEntityAOrB BattleDetailAOrB `protobuf:"varint,2,opt,name=tri_reason_entity_a_or_b,json=triReasonEntityAOrB,enum=protomsg.BattleDetailAOrB" json:"tri_reason_entity_a_or_b,omitempty"`
	// 技能信息
	SkillUseInfo *BattleDetailSkillInfo `protobuf:"bytes,3,opt,name=skill_use_info,json=skillUseInfo" json:"skill_use_info,omitempty"`
}

func (m *BattleDetailNagSkillBuff) Reset()                    { *m = BattleDetailNagSkillBuff{} }
func (m *BattleDetailNagSkillBuff) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailNagSkillBuff) ProtoMessage()               {}
func (*BattleDetailNagSkillBuff) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{40} }

func (m *BattleDetailNagSkillBuff) GetTriReasonEntityId() uint64 {
	if m != nil {
		return m.TriReasonEntityId
	}
	return 0
}

func (m *BattleDetailNagSkillBuff) GetTriReasonEntityAOrB() BattleDetailAOrB {
	if m != nil {
		return m.TriReasonEntityAOrB
	}
	return BattleDetailAOrB_kBattleDetailAOrB_None
}

func (m *BattleDetailNagSkillBuff) GetSkillUseInfo() *BattleDetailSkillInfo {
	if m != nil {
		return m.SkillUseInfo
	}
	return nil
}

// 队长变更
type BattleDetailLeaderChange struct {
	MainHeroId   uint32 `protobuf:"varint,1,opt,name=main_hero_id,json=mainHeroId" json:"main_hero_id,omitempty"`
	SecondHeroId uint32 `protobuf:"varint,2,opt,name=second_hero_id,json=secondHeroId" json:"second_hero_id,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *BattleDetailLeaderChange) Reset()                    { *m = BattleDetailLeaderChange{} }
func (m *BattleDetailLeaderChange) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLeaderChange) ProtoMessage()               {}
func (*BattleDetailLeaderChange) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{41} }

func (m *BattleDetailLeaderChange) GetMainHeroId() uint32 {
	if m != nil {
		return m.MainHeroId
	}
	return 0
}

func (m *BattleDetailLeaderChange) GetSecondHeroId() uint32 {
	if m != nil {
		return m.SecondHeroId
	}
	return 0
}

func (m *BattleDetailLeaderChange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 受到状态影响
type BattleDetailLogStatusEffect struct {
	StatusId       uint32                    `protobuf:"varint,1,opt,name=status_id,json=statusId" json:"status_id,omitempty"`
	CastEntityType BattleDetailAOrB          `protobuf:"varint,2,opt,name=cast_entity_type,json=castEntityType,enum=protomsg.BattleDetailAOrB" json:"cast_entity_type,omitempty"`
	CastEntityId   uint64                    `protobuf:"varint,3,opt,name=cast_entity_id,json=castEntityId" json:"cast_entity_id,omitempty"`
	SkillInfo      *BattleDetailSkillInfo    `protobuf:"bytes,4,opt,name=skill_info,json=skillInfo" json:"skill_info,omitempty"`
	SubActionType  BattleDetailLogActionType `protobuf:"varint,5,opt,name=sub_action_type,json=subActionType,enum=protomsg.BattleDetailLogActionType" json:"sub_action_type,omitempty"`
	Damage         *BattleDetailDamage       `protobuf:"bytes,6,opt,name=damage" json:"damage,omitempty"`
	Value          []int32                   `protobuf:"varint,7,rep,packed,name=value" json:"value,omitempty"`
}

func (m *BattleDetailLogStatusEffect) Reset()                    { *m = BattleDetailLogStatusEffect{} }
func (m *BattleDetailLogStatusEffect) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLogStatusEffect) ProtoMessage()               {}
func (*BattleDetailLogStatusEffect) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{42} }

func (m *BattleDetailLogStatusEffect) GetStatusId() uint32 {
	if m != nil {
		return m.StatusId
	}
	return 0
}

func (m *BattleDetailLogStatusEffect) GetCastEntityType() BattleDetailAOrB {
	if m != nil {
		return m.CastEntityType
	}
	return BattleDetailAOrB_kBattleDetailAOrB_None
}

func (m *BattleDetailLogStatusEffect) GetCastEntityId() uint64 {
	if m != nil {
		return m.CastEntityId
	}
	return 0
}

func (m *BattleDetailLogStatusEffect) GetSkillInfo() *BattleDetailSkillInfo {
	if m != nil {
		return m.SkillInfo
	}
	return nil
}

func (m *BattleDetailLogStatusEffect) GetSubActionType() BattleDetailLogActionType {
	if m != nil {
		return m.SubActionType
	}
	return BattleDetailLogActionType_kBattleDetailLogActionType_None
}

func (m *BattleDetailLogStatusEffect) GetDamage() *BattleDetailDamage {
	if m != nil {
		return m.Damage
	}
	return nil
}

func (m *BattleDetailLogStatusEffect) GetValue() []int32 {
	if m != nil {
		return m.Value
	}
	return nil
}

// 战报元素
type BattleDetailItem struct {
	AOrB     BattleDetailAOrB     `protobuf:"varint,1,opt,name=a_or_b,json=aOrB,enum=protomsg.BattleDetailAOrB" json:"a_or_b,omitempty"`
	ActionId uint32               `protobuf:"varint,2,opt,name=action_id,json=actionId" json:"action_id,omitempty"`
	Value    []int32              `protobuf:"varint,3,rep,packed,name=value" json:"value,omitempty"`
	Content  *google_protobuf.Any `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *BattleDetailItem) Reset()                    { *m = BattleDetailItem{} }
func (m *BattleDetailItem) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailItem) ProtoMessage()               {}
func (*BattleDetailItem) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{43} }

func (m *BattleDetailItem) GetAOrB() BattleDetailAOrB {
	if m != nil {
		return m.AOrB
	}
	return BattleDetailAOrB_kBattleDetailAOrB_None
}

func (m *BattleDetailItem) GetActionId() uint32 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

func (m *BattleDetailItem) GetValue() []int32 {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *BattleDetailItem) GetContent() *google_protobuf.Any {
	if m != nil {
		return m.Content
	}
	return nil
}

// 回合内的玩家数据
type BattleDetailRoundPlayerData struct {
	SrcTroopNum uint32 `protobuf:"varint,2,opt,name=src_troop_num,json=srcTroopNum" json:"src_troop_num,omitempty"`
	EndTroopNum int32  `protobuf:"varint,3,opt,name=end_troop_num,json=endTroopNum" json:"end_troop_num,omitempty"`
}

func (m *BattleDetailRoundPlayerData) Reset()                    { *m = BattleDetailRoundPlayerData{} }
func (m *BattleDetailRoundPlayerData) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailRoundPlayerData) ProtoMessage()               {}
func (*BattleDetailRoundPlayerData) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{44} }

func (m *BattleDetailRoundPlayerData) GetSrcTroopNum() uint32 {
	if m != nil {
		return m.SrcTroopNum
	}
	return 0
}

func (m *BattleDetailRoundPlayerData) GetEndTroopNum() int32 {
	if m != nil {
		return m.EndTroopNum
	}
	return 0
}

// 单个回合的战报
type BattleDetailRound struct {
	PlayerDataA    *BattleDetailRoundPlayerData `protobuf:"bytes,1,opt,name=player_data_a,json=playerDataA" json:"player_data_a,omitempty"`
	PlayerDataB    *BattleDetailRoundPlayerData `protobuf:"bytes,2,opt,name=player_data_b,json=playerDataB" json:"player_data_b,omitempty"`
	RoundTime      uint32                       `protobuf:"varint,3,opt,name=round_time,json=roundTime" json:"round_time,omitempty"`
	BattleItem     []*BattleDetailItem          `protobuf:"bytes,4,rep,name=battle_item,json=battleItem" json:"battle_item,omitempty"`
	BattleItemHead []*BattleDetailItem          `protobuf:"bytes,5,rep,name=battle_item_head,json=battleItemHead" json:"battle_item_head,omitempty"`
}

func (m *BattleDetailRound) Reset()                    { *m = BattleDetailRound{} }
func (m *BattleDetailRound) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailRound) ProtoMessage()               {}
func (*BattleDetailRound) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{45} }

func (m *BattleDetailRound) GetPlayerDataA() *BattleDetailRoundPlayerData {
	if m != nil {
		return m.PlayerDataA
	}
	return nil
}

func (m *BattleDetailRound) GetPlayerDataB() *BattleDetailRoundPlayerData {
	if m != nil {
		return m.PlayerDataB
	}
	return nil
}

func (m *BattleDetailRound) GetRoundTime() uint32 {
	if m != nil {
		return m.RoundTime
	}
	return 0
}

func (m *BattleDetailRound) GetBattleItem() []*BattleDetailItem {
	if m != nil {
		return m.BattleItem
	}
	return nil
}

func (m *BattleDetailRound) GetBattleItemHead() []*BattleDetailItem {
	if m != nil {
		return m.BattleItemHead
	}
	return nil
}

// 战斗双方简单数据
type BattleDetailPlayerSimpleData struct {
	PlayerId    uint64           `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName  string           `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	GuildId     uint64           `protobuf:"varint,3,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	GuildName   string           `protobuf:"bytes,4,opt,name=guild_name,json=guildName" json:"guild_name,omitempty"`
	EntityId    uint64           `protobuf:"varint,5,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	IsPartner   bool             `protobuf:"varint,6,opt,name=is_partner,json=isPartner" json:"is_partner,omitempty"`
	MainHeroId  uint64           `protobuf:"varint,7,opt,name=main_hero_id,json=mainHeroId" json:"main_hero_id,omitempty"`
	IsDead      bool             `protobuf:"varint,8,opt,name=is_dead,json=isDead" json:"is_dead,omitempty"`
	EntityType  EntityType       `protobuf:"varint,9,opt,name=entity_type,json=entityType,enum=protomsg.EntityType" json:"entity_type,omitempty"`
	CurTroopNum int32            `protobuf:"varint,10,opt,name=cur_troop_num,json=curTroopNum" json:"cur_troop_num,omitempty"`
	AOrB        BattleDetailAOrB `protobuf:"varint,11,opt,name=a_or_b,json=aOrB,enum=protomsg.BattleDetailAOrB" json:"a_or_b,omitempty"`
}

func (m *BattleDetailPlayerSimpleData) Reset()                    { *m = BattleDetailPlayerSimpleData{} }
func (m *BattleDetailPlayerSimpleData) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailPlayerSimpleData) ProtoMessage()               {}
func (*BattleDetailPlayerSimpleData) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{46} }

func (m *BattleDetailPlayerSimpleData) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *BattleDetailPlayerSimpleData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *BattleDetailPlayerSimpleData) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *BattleDetailPlayerSimpleData) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *BattleDetailPlayerSimpleData) GetEntityId() uint64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *BattleDetailPlayerSimpleData) GetIsPartner() bool {
	if m != nil {
		return m.IsPartner
	}
	return false
}

func (m *BattleDetailPlayerSimpleData) GetMainHeroId() uint64 {
	if m != nil {
		return m.MainHeroId
	}
	return 0
}

func (m *BattleDetailPlayerSimpleData) GetIsDead() bool {
	if m != nil {
		return m.IsDead
	}
	return false
}

func (m *BattleDetailPlayerSimpleData) GetEntityType() EntityType {
	if m != nil {
		return m.EntityType
	}
	return EntityType_kEntityType_None
}

func (m *BattleDetailPlayerSimpleData) GetCurTroopNum() int32 {
	if m != nil {
		return m.CurTroopNum
	}
	return 0
}

func (m *BattleDetailPlayerSimpleData) GetAOrB() BattleDetailAOrB {
	if m != nil {
		return m.AOrB
	}
	return BattleDetailAOrB_kBattleDetailAOrB_None
}

// 一整份战报
type BattleDetailLog struct {
	LogGuid         string                                   `protobuf:"bytes,1,opt,name=log_guid,json=logGuid" json:"log_guid,omitempty"`
	BattleTime      uint64                                   `protobuf:"varint,2,opt,name=battle_time,json=battleTime" json:"battle_time,omitempty"`
	SimplePlayerA   *BattleDetailPlayerSimpleData            `protobuf:"bytes,3,opt,name=simple_player_a,json=simplePlayerA" json:"simple_player_a,omitempty"`
	SimplePlayerB   *BattleDetailPlayerSimpleData            `protobuf:"bytes,4,opt,name=simple_player_b,json=simplePlayerB" json:"simple_player_b,omitempty"`
	RelationEntity  map[uint64]*BattleDetailPlayerSimpleData `protobuf:"bytes,5,rep,name=relation_entity,json=relationEntity" json:"relation_entity,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NotAtkSec       int32                                    `protobuf:"varint,6,opt,name=not_atk_sec,json=notAtkSec" json:"not_atk_sec,omitempty"`
	BattleType      BattleType                               `protobuf:"varint,7,opt,name=battle_type,json=battleType,enum=protomsg.BattleType" json:"battle_type,omitempty"`
	LeaderEntityIdA uint64                                   `protobuf:"varint,8,opt,name=leader_entity_id_a,json=leaderEntityIdA" json:"leader_entity_id_a,omitempty"`
	LeaderEntityIdB uint64                                   `protobuf:"varint,9,opt,name=leader_entity_id_b,json=leaderEntityIdB" json:"leader_entity_id_b,omitempty"`
	ReportDetail    *BattleReportDetail                      `protobuf:"bytes,10,opt,name=report_detail,json=reportDetail" json:"report_detail,omitempty"`
	IsDetailLogFull bool                                     `protobuf:"varint,11,opt,name=is_detail_log_full,json=isDetailLogFull" json:"is_detail_log_full,omitempty"`
	RoundData       []*BattleDetailRound                     `protobuf:"bytes,100,rep,name=round_data,json=roundData" json:"round_data,omitempty"`
}

func (m *BattleDetailLog) Reset()                    { *m = BattleDetailLog{} }
func (m *BattleDetailLog) String() string            { return proto.CompactTextString(m) }
func (*BattleDetailLog) ProtoMessage()               {}
func (*BattleDetailLog) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{47} }

func (m *BattleDetailLog) GetLogGuid() string {
	if m != nil {
		return m.LogGuid
	}
	return ""
}

func (m *BattleDetailLog) GetBattleTime() uint64 {
	if m != nil {
		return m.BattleTime
	}
	return 0
}

func (m *BattleDetailLog) GetSimplePlayerA() *BattleDetailPlayerSimpleData {
	if m != nil {
		return m.SimplePlayerA
	}
	return nil
}

func (m *BattleDetailLog) GetSimplePlayerB() *BattleDetailPlayerSimpleData {
	if m != nil {
		return m.SimplePlayerB
	}
	return nil
}

func (m *BattleDetailLog) GetRelationEntity() map[uint64]*BattleDetailPlayerSimpleData {
	if m != nil {
		return m.RelationEntity
	}
	return nil
}

func (m *BattleDetailLog) GetNotAtkSec() int32 {
	if m != nil {
		return m.NotAtkSec
	}
	return 0
}

func (m *BattleDetailLog) GetBattleType() BattleType {
	if m != nil {
		return m.BattleType
	}
	return BattleType_kBattleType_None
}

func (m *BattleDetailLog) GetLeaderEntityIdA() uint64 {
	if m != nil {
		return m.LeaderEntityIdA
	}
	return 0
}

func (m *BattleDetailLog) GetLeaderEntityIdB() uint64 {
	if m != nil {
		return m.LeaderEntityIdB
	}
	return 0
}

func (m *BattleDetailLog) GetReportDetail() *BattleReportDetail {
	if m != nil {
		return m.ReportDetail
	}
	return nil
}

func (m *BattleDetailLog) GetIsDetailLogFull() bool {
	if m != nil {
		return m.IsDetailLogFull
	}
	return false
}

func (m *BattleDetailLog) GetRoundData() []*BattleDetailRound {
	if m != nil {
		return m.RoundData
	}
	return nil
}

func init() {
	proto.RegisterType((*BRHeroSimple)(nil), "protomsg.BRHeroSimple")
	proto.RegisterType((*BRHeroMail)(nil), "protomsg.BRHeroMail")
	proto.RegisterType((*BRArmyData)(nil), "protomsg.BRArmyData")
	proto.RegisterType((*BRResource)(nil), "protomsg.BRResource")
	proto.RegisterType((*BRExtraPlayer)(nil), "protomsg.BRExtraPlayer")
	proto.RegisterType((*BRExtraCastle)(nil), "protomsg.BRExtraCastle")
	proto.RegisterType((*BRExtraMonster)(nil), "protomsg.BRExtraMonster")
	proto.RegisterType((*BRExtraBarbarians)(nil), "protomsg.BRExtraBarbarians")
	proto.RegisterType((*BRExtraBarbarianFort)(nil), "protomsg.BRExtraBarbarianFort")
	proto.RegisterType((*BRExtraGuildBuildingFort)(nil), "protomsg.BRExtraGuildBuildingFort")
	proto.RegisterType((*BRExtraGuildBuildingFlag)(nil), "protomsg.BRExtraGuildBuildingFlag")
	proto.RegisterType((*BRExtraStrongHold)(nil), "protomsg.BRExtraStrongHold")
	proto.RegisterType((*BRNewExtraStrongHold)(nil), "protomsg.BRNewExtraStrongHold")
	proto.RegisterType((*BRExtraPass)(nil), "protomsg.BRExtraPass")
	proto.RegisterType((*BRExtraTemple)(nil), "protomsg.BRExtraTemple")
	proto.RegisterType((*BREntity)(nil), "protomsg.BREntity")
	proto.RegisterType((*BRTroopSample)(nil), "protomsg.BRTroopSample")
	proto.RegisterType((*BRTroopDelta)(nil), "protomsg.BRTroopDelta")
	proto.RegisterType((*BRExtraPompeiiBuild)(nil), "protomsg.BRExtraPompeiiBuild")
	proto.RegisterType((*BRExtraPompeiiMonster)(nil), "protomsg.BRExtraPompeiiMonster")
	proto.RegisterType((*BRExtraPompeiiBoss)(nil), "protomsg.BRExtraPompeiiBoss")
	proto.RegisterType((*BattleDetailLogSimple)(nil), "protomsg.BattleDetailLogSimple")
	proto.RegisterType((*BattleReport)(nil), "protomsg.BattleReport")
	proto.RegisterType((*BREntityDetail)(nil), "protomsg.BREntityDetail")
	proto.RegisterType((*BattleReportDetail)(nil), "protomsg.BattleReportDetail")
	proto.RegisterType((*BattleMailBytes)(nil), "protomsg.BattleMailBytes")
	proto.RegisterType((*BattleMail)(nil), "protomsg.BattleMail")
	proto.RegisterType((*BattleDetailPartnerDamage)(nil), "protomsg.BattleDetailPartnerDamage")
	proto.RegisterType((*BattleDetailDamage)(nil), "protomsg.BattleDetailDamage")
	proto.RegisterType((*BattleDetailSkillUseInfo)(nil), "protomsg.BattleDetailSkillUseInfo")
	proto.RegisterType((*BattleDetailSkillInfo)(nil), "protomsg.BattleDetailSkillInfo")
	proto.RegisterType((*BattleDetailLogNormalAtk)(nil), "protomsg.BattleDetailLogNormalAtk")
	proto.RegisterType((*BattleDetailNagSkill)(nil), "protomsg.BattleDetailNagSkill")
	proto.RegisterType((*BattleDetailLogDisperseDamage)(nil), "protomsg.BattleDetailLogDisperseDamage")
	proto.RegisterType((*BattleDetailLogCounterAtk)(nil), "protomsg.BattleDetailLogCounterAtk")
	proto.RegisterType((*BattleDetailLogUseRage)(nil), "protomsg.BattleDetailLogUseRage")
	proto.RegisterType((*BattleDetailLogUseDirect)(nil), "protomsg.BattleDetailLogUseDirect")
	proto.RegisterType((*BattleDetailLogOnDamage)(nil), "protomsg.BattleDetailLogOnDamage")
	proto.RegisterType((*BattleDetailLogOnFriendSkillEffect)(nil), "protomsg.BattleDetailLogOnFriendSkillEffect")
	proto.RegisterType((*BattleDetailStatusDeleteNag)(nil), "protomsg.BattleDetailStatusDeleteNag")
	proto.RegisterType((*BattleDetailNagSkillBuff)(nil), "protomsg.BattleDetailNagSkillBuff")
	proto.RegisterType((*BattleDetailLeaderChange)(nil), "protomsg.BattleDetailLeaderChange")
	proto.RegisterType((*BattleDetailLogStatusEffect)(nil), "protomsg.BattleDetailLogStatusEffect")
	proto.RegisterType((*BattleDetailItem)(nil), "protomsg.BattleDetailItem")
	proto.RegisterType((*BattleDetailRoundPlayerData)(nil), "protomsg.BattleDetailRoundPlayerData")
	proto.RegisterType((*BattleDetailRound)(nil), "protomsg.BattleDetailRound")
	proto.RegisterType((*BattleDetailPlayerSimpleData)(nil), "protomsg.BattleDetailPlayerSimpleData")
	proto.RegisterType((*BattleDetailLog)(nil), "protomsg.BattleDetailLog")
	proto.RegisterEnum("protomsg.BRExtraType", BRExtraType_name, BRExtraType_value)
	proto.RegisterEnum("protomsg.BattleDetailAOrB", BattleDetailAOrB_name, BattleDetailAOrB_value)
	proto.RegisterEnum("protomsg.SkillType", SkillType_name, SkillType_value)
	proto.RegisterEnum("protomsg.SkillCondition", SkillCondition_name, SkillCondition_value)
	proto.RegisterEnum("protomsg.SkillConditionCompareType", SkillConditionCompareType_name, SkillConditionCompareType_value)
	proto.RegisterEnum("protomsg.SkillDotType", SkillDotType_name, SkillDotType_value)
	proto.RegisterEnum("protomsg.BattleDetailLogActionType", BattleDetailLogActionType_name, BattleDetailLogActionType_value)
	proto.RegisterEnum("protomsg.SkillSourceType", SkillSourceType_name, SkillSourceType_value)
}

func init() { proto.RegisterFile("msg_common_battle.proto", fileDescriptor38) }

var fileDescriptor38 = []byte{
	// 4147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5a, 0xcd, 0x6f, 0x1b, 0x49,
	0x76, 0x5f, 0x7e, 0x49, 0xe4, 0xa3, 0x48, 0x95, 0xcb, 0xb2, 0x4d, 0x59, 0x96, 0xed, 0xa1, 0x3d,
	0x1e, 0x8d, 0x6c, 0xcb, 0x63, 0x59, 0x9e, 0x9d, 0xcc, 0x2c, 0x02, 0x90, 0x92, 0x6c, 0x29, 0x23,
	0xcb, 0xda, 0x96, 0x3c, 0x9b, 0x5b, 0xa3, 0xc8, 0x2e, 0x51, 0xbd, 0x6a, 0x76, 0x33, 0xd5, 0x4d,
	0xd9, 0x42, 0x80, 0xe4, 0x12, 0x2c, 0x90, 0x43, 0x0e, 0xf9, 0x46, 0xf2, 0x0f, 0xe4, 0x14, 0xe4,
	0x94, 0x7b, 0x2e, 0x7b, 0x49, 0x2e, 0xb9, 0x24, 0xf9, 0x0b, 0x72, 0x0d, 0xb0, 0xd7, 0x5c, 0x12,
	0xd4, 0xab, 0xea, 0x2f, 0x52, 0x64, 0x4b, 0xde, 0x09, 0x32, 0x7b, 0xb1, 0xd9, 0xef, 0xfd, 0x5e,
	0xd5, 0xab, 0x7a, 0x9f, 0x55, 0x25, 0xb8, 0xd5, 0xf7, 0x7b, 0x66, 0xd7, 0xeb, 0xf7, 0x3d, 0xd7,
	0xec, 0xb0, 0x20, 0x70, 0xf8, 0xda, 0x40, 0x78, 0x81, 0x47, 0xcb, 0xf8, 0x5f, 0xdf, 0xef, 0xdd,
	0x5e, 0x48, 0x40, 0xfa, 0x6c, 0xa0, 0xf8, 0xb7, 0x49, 0x4c, 0xd5, 0x94, 0xc5, 0x9e, 0xe7, 0xf5,
	0x1c, 0xfe, 0x0c, 0xbf, 0x3a, 0xc3, 0xe3, 0x67, 0xcc, 0x3d, 0x57, 0xac, 0xe6, 0x2b, 0x98, 0x6b,
	0x1b, 0x3b, 0x5c, 0x78, 0x87, 0x76, 0x7f, 0xe0, 0x70, 0x7a, 0x0b, 0x66, 0x4f, 0xb8, 0xf0, 0x4c,
	0xdb, 0x6a, 0xe4, 0xee, 0xe7, 0x56, 0x6a, 0xc6, 0x8c, 0xfc, 0xdc, 0xb5, 0xe8, 0x32, 0x00, 0x32,
	0x1c, 0x7e, 0xc6, 0x9d, 0x46, 0x1e, 0x79, 0x15, 0x49, 0xd9, 0x93, 0x84, 0xe6, 0xcf, 0x01, 0xd4,
	0x38, 0x6f, 0x98, 0xed, 0x7c, 0xec, 0x28, 0x94, 0x40, 0x81, 0x7f, 0x18, 0x34, 0x0a, 0x48, 0x97,
	0x3f, 0x29, 0x85, 0xa2, 0x1f, 0x30, 0xd1, 0x28, 0x22, 0x09, 0x7f, 0x37, 0x7f, 0x55, 0x92, 0x93,
	0xb5, 0x44, 0xff, 0x7c, 0x8b, 0x05, 0x8c, 0x3e, 0x81, 0x92, 0x1c, 0xe1, 0x39, 0x4e, 0x55, 0x5d,
	0xbf, 0xb9, 0x16, 0xee, 0xcf, 0x5a, 0x72, 0x65, 0x86, 0x02, 0x85, 0xe8, 0x75, 0x9c, 0x3c, 0x03,
	0xbd, 0x1e, 0xa2, 0x5f, 0xa0, 0x4a, 0x19, 0xe8, 0x17, 0x21, 0x7a, 0x03, 0xb5, 0xcd, 0x40, 0x6f,
	0x84, 0xe8, 0x97, 0x8d, 0x52, 0x36, 0xfa, 0x25, 0xdd, 0x80, 0xea, 0x09, 0x67, 0x8e, 0x19, 0x08,
	0xcf, 0x1b, 0xf8, 0x8d, 0xca, 0xfd, 0xc2, 0x4a, 0x75, 0xfd, 0x7a, 0x2c, 0x73, 0x24, 0xe9, 0x72,
	0x3f, 0x0c, 0x90, 0x38, 0xfc, 0xf4, 0xa5, 0x94, 0xed, 0xda, 0x41, 0x28, 0x05, 0x53, 0xa4, 0x24,
	0x4e, 0x4b, 0x7d, 0x0d, 0xf5, 0xee, 0x50, 0x08, 0xee, 0x46, 0x82, 0xd5, 0xc9, 0x82, 0x35, 0x0d,
	0xd5, 0xb2, 0x2d, 0xa0, 0xbe, 0x63, 0xf7, 0x4e, 0x02, 0xf3, 0xbd, 0xe7, 0x59, 0xa1, 0xfc, 0xdc,
	0x64, 0x79, 0xa2, 0xe0, 0x3f, 0xf3, 0x3c, 0x2b, 0x56, 0xda, 0xe2, 0x2c, 0x92, 0xad, 0x4d, 0x51,
	0x5a, 0xe2, 0xb4, 0xd4, 0x3d, 0xa8, 0x0e, 0x1c, 0x76, 0xce, 0x85, 0xe9, 0xb2, 0x3e, 0x6f, 0xd4,
	0xef, 0xe7, 0x56, 0x2a, 0x06, 0x28, 0xd2, 0x3e, 0xeb, 0x73, 0xba, 0x0d, 0x0b, 0xbe, 0xed, 0xfe,
	0x7c, 0x28, 0xb8, 0x95, 0xd2, 0x6d, 0x7e, 0xf2, 0xf8, 0x34, 0x14, 0x48, 0x68, 0xb7, 0x04, 0x15,
	0xee, 0x06, 0x76, 0x70, 0x2e, 0xbd, 0xfb, 0xee, 0xfd, 0xdc, 0x4a, 0xd1, 0x28, 0x2b, 0xc2, 0xae,
	0x25, 0x99, 0x5a, 0x09, 0xdb, 0x6a, 0xdc, 0x53, 0x4c, 0x45, 0xd8, 0xb5, 0xe8, 0x22, 0x94, 0x7d,
	0x9b, 0xf7, 0xb8, 0xe4, 0xdd, 0x47, 0x7f, 0x9e, 0xc5, 0xef, 0x5d, 0x4b, 0x2a, 0xaf, 0x58, 0x2a,
	0x30, 0x3e, 0x41, 0x2e, 0x20, 0x49, 0xc5, 0xd7, 0xbf, 0xe7, 0xa4, 0xcf, 0x1b, 0xdc, 0xf7, 0x86,
	0xa2, 0xcb, 0xe9, 0x1a, 0x94, 0x85, 0xfe, 0xdd, 0xc8, 0xa1, 0xfe, 0x34, 0xd6, 0x3f, 0x44, 0x19,
	0x11, 0x26, 0x8e, 0x91, 0xfc, 0x95, 0x62, 0xa4, 0x70, 0x99, 0x18, 0x19, 0xd9, 0xf8, 0xe2, 0xd8,
	0xc6, 0xa7, 0x36, 0xa5, 0x94, 0xde, 0x94, 0xe6, 0x2f, 0x73, 0x50, 0x6b, 0x1b, 0xdb, 0x1f, 0x02,
	0xc1, 0x0e, 0x90, 0x96, 0x86, 0xe7, 0x46, 0xf6, 0x70, 0x64, 0xb2, 0xfc, 0xd8, 0x64, 0x8b, 0x50,
	0xee, 0x0d, 0x6d, 0xc7, 0x92, 0xc2, 0x05, 0x14, 0x9e, 0xc5, 0x6f, 0x95, 0x7c, 0x14, 0x2b, 0xa1,
	0x67, 0x05, 0x29, 0x28, 0x49, 0xa1, 0x78, 0xc2, 0x99, 0xd5, 0x98, 0x41, 0x06, 0xfe, 0xa6, 0x2b,
	0x40, 0x94, 0x88, 0x7f, 0xe2, 0x89, 0x40, 0x09, 0xce, 0x22, 0xbf, 0x8e, 0xf4, 0x43, 0x49, 0x96,
	0xd2, 0xc9, 0x75, 0x6c, 0x32, 0x3f, 0x70, 0xf8, 0x6f, 0xe8, 0x3a, 0xfa, 0x50, 0xd7, 0xcb, 0x78,
	0xe3, 0xb9, 0x7e, 0xc0, 0x05, 0x7d, 0x08, 0xf5, 0xbe, 0xfa, 0x69, 0x76, 0xfd, 0xb3, 0x38, 0xa7,
	0xcf, 0x69, 0xea, 0xa6, 0x7f, 0xb6, 0x6b, 0xd1, 0x97, 0x50, 0xd5, 0x61, 0x11, 0x9c, 0x0f, 0xd4,
	0x82, 0xea, 0xeb, 0x0b, 0xb1, 0xe7, 0x6c, 0x23, 0xf3, 0xe8, 0x7c, 0xc0, 0x0d, 0xe0, 0xd1, 0xef,
	0xe6, 0x57, 0x70, 0x4d, 0x4f, 0xd7, 0x66, 0xa2, 0xc3, 0x84, 0xcd, 0x5c, 0x9f, 0x3e, 0x80, 0x5a,
	0x27, 0xfa, 0x92, 0x13, 0x96, 0xd5, 0x84, 0x31, 0x71, 0xd7, 0x6a, 0x3e, 0x82, 0x85, 0x51, 0xc9,
	0x57, 0x9e, 0x08, 0x68, 0x1d, 0xf2, 0x91, 0x8a, 0x79, 0xdb, 0x6a, 0x9e, 0x40, 0x43, 0xe3, 0x5e,
	0xcb, 0x95, 0xb6, 0xe5, 0x3f, 0xb6, 0xdb, 0x43, 0xec, 0x12, 0x54, 0xba, 0x9e, 0x7b, 0x6c, 0xf7,
	0xe2, 0x55, 0x95, 0x15, 0x61, 0xd7, 0xa2, 0xcf, 0xa0, 0xe4, 0xbd, 0x77, 0xb9, 0xd0, 0x31, 0xb3,
	0x38, 0xba, 0x96, 0xb7, 0x92, 0x89, 0x69, 0x42, 0xe1, 0x26, 0xce, 0xe4, 0xb0, 0xde, 0xf7, 0x3c,
	0x13, 0x8b, 0x76, 0xed, 0x30, 0x10, 0x9e, 0xdb, 0xdb, 0xf1, 0x1c, 0xeb, 0x7b, 0x9e, 0xc2, 0x92,
	0xdb, 0xbb, 0xcf, 0xdf, 0xff, 0xdf, 0xce, 0xf2, 0xf7, 0x39, 0xa8, 0x86, 0xd1, 0xcf, 0x7c, 0x7f,
	0xfa, 0xe8, 0xc9, 0x90, 0x28, 0x4e, 0x0b, 0x89, 0xd2, 0x68, 0x48, 0x44, 0x6c, 0xbb, 0xeb, 0xb9,
	0x18, 0x18, 0x35, 0xcd, 0xde, 0xed, 0x7a, 0xee, 0x15, 0xa2, 0xe3, 0x1f, 0xe2, 0x28, 0x3f, 0xe2,
	0xd8, 0x30, 0xfd, 0xd0, 0x35, 0xfe, 0x55, 0x09, 0xca, 0x6d, 0x43, 0x6d, 0xbf, 0x2c, 0x1b, 0x03,
	0xcf, 0xb7, 0x03, 0xdb, 0x73, 0x75, 0xd7, 0x91, 0x28, 0x1b, 0x67, 0xbc, 0x1b, 0x78, 0x62, 0xdd,
	0x32, 0x22, 0x0c, 0x5d, 0x80, 0xd2, 0xc0, 0x7b, 0xcf, 0x05, 0x8e, 0x5d, 0x33, 0xd4, 0x07, 0xdd,
	0x00, 0xe0, 0x72, 0x07, 0x54, 0xa4, 0x97, 0x31, 0xd2, 0x6f, 0x24, 0x6b, 0x84, 0xda, 0x1f, 0x19,
	0xea, 0x15, 0x1e, 0xfe, 0xa4, 0xcf, 0x41, 0x7d, 0x98, 0xcc, 0x3d, 0x6f, 0x54, 0x70, 0xf2, 0x85,
	0x35, 0xd5, 0x98, 0xae, 0x85, 0x8d, 0xe9, 0x5a, 0xcb, 0x3d, 0x37, 0xca, 0x08, 0x6b, 0xb9, 0xe7,
	0x72, 0x6f, 0xb1, 0x7b, 0x61, 0xa2, 0x7f, 0xde, 0xa8, 0xaa, 0xbd, 0x95, 0x04, 0xd9, 0xfa, 0x49,
	0x26, 0x36, 0x44, 0xc8, 0x9c, 0x53, 0x4c, 0x49, 0x08, 0x99, 0xd8, 0x42, 0x20, 0xb3, 0xa6, 0x98,
	0x92, 0x80, 0xcc, 0x07, 0x50, 0x8b, 0x1a, 0x01, 0x04, 0xd4, 0x55, 0x7a, 0x09, 0x89, 0x08, 0x92,
	0x15, 0x59, 0xf5, 0x31, 0x08, 0x99, 0xd7, 0x15, 0x19, 0x49, 0x21, 0x40, 0xf0, 0x3e, 0xb3, 0x5d,
	0x05, 0x20, 0x0a, 0xa0, 0x48, 0x08, 0x58, 0x06, 0x08, 0xe4, 0x7e, 0x29, 0xfe, 0x35, 0x65, 0x42,
	0xa4, 0x20, 0x7b, 0x35, 0x2c, 0xc9, 0x37, 0xf4, 0x5e, 0x8c, 0x14, 0x59, 0xd9, 0x48, 0x87, 0x05,
	0x79, 0x35, 0x2c, 0xc8, 0x37, 0xb3, 0xb0, 0xeb, 0xf4, 0x4b, 0xa8, 0x9e, 0xda, 0x8e, 0x63, 0x0a,
	0xfe, 0x9e, 0x09, 0xab, 0x71, 0x1b, 0x25, 0x6e, 0x8c, 0x77, 0x07, 0x87, 0x3c, 0x30, 0x40, 0x22,
	0x0d, 0x04, 0xd2, 0x6f, 0xa0, 0x3e, 0x70, 0x86, 0xae, 0xc5, 0x45, 0x28, 0xba, 0x84, 0x8d, 0x45,
	0x6a, 0xb2, 0xa8, 0xb5, 0xa8, 0x69, 0xac, 0x16, 0x4e, 0x35, 0x45, 0x77, 0x46, 0x9a, 0xa2, 0x27,
	0x40, 0x43, 0x8f, 0x32, 0x05, 0xef, 0xc9, 0xff, 0x6c, 0xab, 0xb1, 0x8c, 0x28, 0x12, 0x72, 0x0c,
	0x64, 0xec, 0x5a, 0xb4, 0x05, 0xd7, 0x8e, 0x6d, 0xe1, 0x07, 0x66, 0x72, 0x15, 0x77, 0xa7, 0xad,
	0x62, 0x1e, 0xf1, 0xdf, 0x46, 0x4b, 0x69, 0xbe, 0x91, 0x41, 0x8a, 0xed, 0xda, 0x21, 0xc3, 0x20,
	0xa5, 0x50, 0x0c, 0xec, 0x3e, 0xc7, 0xf8, 0x2c, 0x18, 0xf8, 0x5b, 0x86, 0x90, 0xb6, 0x1f, 0xf6,
	0x81, 0xa6, 0x3b, 0xec, 0xeb, 0x03, 0x49, 0x5d, 0xd1, 0x71, 0x80, 0xfd, 0x61, 0xbf, 0xf9, 0x87,
	0xf2, 0x8c, 0xa4, 0x9a, 0x42, 0xee, 0x04, 0xec, 0xc2, 0xd1, 0x1e, 0xc1, 0x7c, 0x34, 0x8c, 0x69,
	0x49, 0x18, 0x0e, 0x56, 0x32, 0x6a, 0x81, 0x1e, 0x46, 0xc9, 0x8e, 0xd4, 0xfd, 0xc2, 0x58, 0xdd,
	0x0f, 0xab, 0x77, 0x31, 0xae, 0xde, 0xcd, 0x7f, 0xcc, 0xc1, 0xf5, 0x30, 0x4b, 0x7a, 0xfd, 0x01,
	0xb7, 0x6d, 0xac, 0x2d, 0x3f, 0xf8, 0xdc, 0xb3, 0x01, 0x37, 0xd2, 0x6a, 0x87, 0x2d, 0xc5, 0x34,
	0xc5, 0x9b, 0xcf, 0x81, 0x8e, 0x2c, 0xd6, 0xcb, 0xa8, 0x0c, 0x32, 0x2d, 0xdf, 0x68, 0xe3, 0x19,
	0x79, 0x8b, 0x07, 0xcc, 0x76, 0xf6, 0xbc, 0x9e, 0x3e, 0xcf, 0x2e, 0x42, 0xd9, 0xf1, 0x7a, 0x66,
	0x6f, 0xa8, 0xa5, 0x2a, 0xc6, 0xac, 0xe3, 0xf5, 0x5e, 0x0f, 0x6d, 0x74, 0x4b, 0x9f, 0x8b, 0x33,
	0x2e, 0x4c, 0xfe, 0x61, 0x60, 0x0b, 0x6e, 0xa2, 0x51, 0xf3, 0x68, 0x54, 0xa2, 0x38, 0xdb, 0xc8,
	0x38, 0x92, 0x06, 0xfe, 0x02, 0x66, 0x98, 0xe9, 0x09, 0xb3, 0x83, 0x36, 0xab, 0xaf, 0xdf, 0x4e,
	0x84, 0x45, 0x62, 0xe6, 0xd6, 0x5b, 0xd1, 0x36, 0x8a, 0xec, 0xad, 0x68, 0x4b, 0x8d, 0x63, 0x6f,
	0x57, 0x16, 0x28, 0x0b, 0xed, 0xe5, 0xcd, 0x3f, 0x2e, 0xc2, 0x9c, 0x92, 0x33, 0xf8, 0x40, 0xb6,
	0x22, 0x4d, 0xd9, 0xf3, 0xc8, 0x6f, 0x53, 0xea, 0x1b, 0xad, 0xb1, 0xaa, 0x88, 0x7b, 0x5e, 0x0f,
	0x03, 0x69, 0x56, 0x05, 0x55, 0xd8, 0xc7, 0xd3, 0x54, 0xd6, 0x45, 0x96, 0x11, 0x42, 0x62, 0x74,
	0xd8, 0xc7, 0x4f, 0x41, 0xaf, 0x5f, 0xb9, 0x34, 0x2c, 0x03, 0xc8, 0xc3, 0x78, 0xa0, 0x76, 0x6d,
	0x06, 0x77, 0xad, 0x82, 0x14, 0xdc, 0xae, 0x45, 0x28, 0x73, 0xd7, 0x52, 0xcc, 0x59, 0x64, 0xce,
	0x72, 0xd7, 0x42, 0xd6, 0x3d, 0xd0, 0x8b, 0x52, 0xf5, 0x03, 0x54, 0xe2, 0x54, 0x24, 0xac, 0x14,
	0x2f, 0x60, 0xe6, 0xcc, 0x96, 0x13, 0x62, 0xce, 0xaf, 0xaf, 0x2f, 0x8d, 0x6e, 0xf5, 0x77, 0xc8,
	0x55, 0xcd, 0xa4, 0x86, 0xd2, 0x6f, 0xe1, 0x9a, 0x85, 0x16, 0xc0, 0xfd, 0xf3, 0xd1, 0xfa, 0x58,
	0x16, 0xaa, 0xeb, 0xf7, 0x2e, 0x36, 0x55, 0xe4, 0x24, 0xc6, 0xbc, 0x35, 0xe2, 0x35, 0xcb, 0x00,
	0x02, 0xcd, 0x62, 0x0e, 0x85, 0x83, 0xf5, 0xa3, 0x62, 0x54, 0x14, 0xe5, 0x9d, 0x70, 0xe4, 0x0a,
	0x4e, 0x6c, 0x8b, 0x9b, 0x4a, 0x0c, 0xcb, 0x47, 0xd9, 0x00, 0x49, 0x52, 0x23, 0x4f, 0xc8, 0x78,
	0xf3, 0x17, 0x67, 0xbc, 0xe6, 0x7f, 0xe4, 0xb1, 0xe7, 0x46, 0x43, 0xe8, 0x01, 0x56, 0xd2, 0xc5,
	0x21, 0x61, 0x0a, 0x99, 0xee, 0x77, 0xdd, 0x63, 0x2f, 0x2c, 0x0d, 0x2b, 0xe9, 0xd2, 0x30, 0x11,
	0xb9, 0x4e, 0x57, 0xa0, 0x88, 0x95, 0xe8, 0xd6, 0x78, 0x5a, 0x0f, 0xef, 0x52, 0x0c, 0x44, 0xd0,
	0x27, 0x30, 0xc3, 0x8f, 0x8f, 0x79, 0x37, 0x68, 0x34, 0x46, 0xeb, 0xcd, 0x36, 0xd2, 0x11, 0xab,
	0x31, 0xd3, 0x73, 0xff, 0x4a, 0x78, 0x81, 0x72, 0x6f, 0xba, 0x7a, 0x2f, 0x42, 0xe4, 0x06, 0x1e,
	0x8d, 0xa7, 0x20, 0x37, 0x42, 0xe4, 0x4b, 0x3c, 0x26, 0x4f, 0x41, 0xbe, 0x6c, 0xfe, 0x01, 0xd0,
	0x64, 0x90, 0xe9, 0xcd, 0x7d, 0x01, 0x5a, 0x3f, 0x93, 0xe9, 0x38, 0x6a, 0x8c, 0x47, 0x86, 0xc2,
	0x86, 0xf1, 0xd1, 0x4a, 0x08, 0x75, 0x74, 0x38, 0x65, 0x0a, 0xb5, 0x9b, 0xeb, 0x30, 0xaf, 0xe6,
	0x97, 0x05, 0xba, 0x7d, 0x1e, 0x70, 0x3f, 0xe1, 0xfd, 0x7d, 0xe9, 0x3b, 0x32, 0xca, 0xe7, 0x42,
	0xef, 0x97, 0xa8, 0xe6, 0x7f, 0xcb, 0x93, 0x7e, 0xf4, 0x49, 0xbf, 0x89, 0xf2, 0x82, 0xf2, 0x3f,
	0x7d, 0xdc, 0xbf, 0x39, 0xea, 0xd3, 0x6a, 0x85, 0xf2, 0x8c, 0x94, 0x48, 0x2a, 0x2d, 0x20, 0x71,
	0x55, 0xf2, 0xb1, 0x16, 0x36, 0xca, 0x28, 0x7f, 0x2b, 0xa9, 0x7c, 0xa2, 0x54, 0x1a, 0xf5, 0xb0,
	0x5e, 0xe9, 0xd2, 0xf9, 0x63, 0xa8, 0xaa, 0x21, 0x54, 0x51, 0xab, 0x8c, 0xcd, 0x9e, 0xa8, 0x8c,
	0x06, 0x04, 0x71, 0x95, 0xfc, 0x98, 0x28, 0x6e, 0x1e, 0xc0, 0x62, 0x32, 0x44, 0x0f, 0x98, 0x08,
	0xf0, 0xc4, 0xd0, 0x67, 0x3d, 0x9e, 0x76, 0xb4, 0xdc, 0x88, 0xa3, 0xdd, 0x84, 0x19, 0x0b, 0x61,
	0xba, 0xee, 0xea, 0xaf, 0xe6, 0x87, 0xd0, 0x05, 0xd4, 0x88, 0x7a, 0xa8, 0x18, 0x9d, 0x4b, 0xa2,
	0xe9, 0xef, 0x40, 0x7d, 0xa0, 0xe6, 0x34, 0xa3, 0xd1, 0xe4, 0x82, 0x1f, 0x5c, 0x9c, 0x42, 0x52,
	0xfa, 0x19, 0xb5, 0x41, 0xf2, 0xb3, 0xb9, 0x0f, 0x8d, 0x24, 0xf6, 0x50, 0xf6, 0x33, 0xef, 0x7c,
	0x2e, 0xfd, 0x13, 0xaf, 0x82, 0xb0, 0xbf, 0x89, 0x12, 0xfd, 0x2c, 0x7e, 0xef, 0x5a, 0xc9, 0xbb,
	0xd3, 0x7c, 0xf2, 0xee, 0xb4, 0xf9, 0x21, 0x5d, 0xe3, 0x70, 0xbc, 0xac, 0xc1, 0x9e, 0x42, 0x31,
	0x71, 0x1c, 0x4f, 0x9c, 0xc7, 0x50, 0xfa, 0x10, 0x5b, 0x28, 0x34, 0x00, 0xc2, 0xe8, 0x0d, 0x98,
	0xd1, 0x47, 0x7c, 0x75, 0x05, 0x5b, 0xea, 0xca, 0xb3, 0x7d, 0xf3, 0x20, 0xbd, 0x92, 0x3d, 0xaf,
	0xb7, 0xef, 0x89, 0x3e, 0x73, 0x5a, 0xc1, 0x29, 0xdd, 0x48, 0xed, 0x64, 0x75, 0xfd, 0xce, 0xc5,
	0x3b, 0xa5, 0xb7, 0x28, 0xb4, 0xca, 0x77, 0xb0, 0x90, 0xe4, 0xee, 0xb3, 0x1e, 0x2a, 0x44, 0x7f,
	0x1b, 0x40, 0x2f, 0xc5, 0x3d, 0xf6, 0xf4, 0x88, 0x13, 0xd2, 0x77, 0xb4, 0x7e, 0xa3, 0xe2, 0x87,
	0x3f, 0x9b, 0xff, 0x96, 0x83, 0xe5, 0x11, 0x55, 0xb7, 0x6c, 0x7f, 0xc0, 0x85, 0xcf, 0xb5, 0xe5,
	0x3f, 0x4a, 0x5f, 0x19, 0xb5, 0xde, 0x19, 0x17, 0x0e, 0x4b, 0xf6, 0x89, 0xa0, 0x49, 0xfb, 0xc3,
	0xbe, 0xec, 0xff, 0x94, 0xe2, 0x7e, 0xc0, 0x82, 0xa1, 0x1f, 0x6f, 0x61, 0x0d, 0xc9, 0x87, 0x48,
	0xc5, 0x6b, 0x92, 0x12, 0x12, 0xf4, 0x15, 0x71, 0xe6, 0xda, 0x14, 0xba, 0xf9, 0xd3, 0x74, 0x5c,
	0xec, 0x79, 0xbd, 0x4d, 0x6f, 0xe8, 0x06, 0x5c, 0x7c, 0xbc, 0x09, 0x3a, 0x70, 0x73, 0x64, 0xc8,
	0x77, 0x3e, 0x37, 0xe4, 0x62, 0x77, 0xa0, 0xae, 0xd6, 0x32, 0xf4, 0x79, 0xd2, 0x10, 0xcd, 0x29,
	0xca, 0x6a, 0xc7, 0x36, 0xe6, 0xfc, 0xc4, 0x57, 0xd3, 0x1a, 0x73, 0x9c, 0x77, 0x3e, 0xdf, 0xb2,
	0x85, 0x2c, 0x1b, 0xdf, 0xdf, 0x2c, 0xbf, 0xc8, 0xc1, 0xad, 0x91, 0x69, 0xde, 0xba, 0xbf, 0x96,
	0xb9, 0x23, 0x2b, 0xe5, 0xaf, 0x64, 0xa5, 0x5f, 0xe4, 0xa1, 0x39, 0xa6, 0xc8, 0x2b, 0x61, 0x73,
	0xd7, 0x42, 0xac, 0x2a, 0x9e, 0xb2, 0x81, 0x3e, 0x46, 0xa2, 0x39, 0x9a, 0xce, 0xea, 0x8a, 0xbe,
	0x1d, 0x26, 0x35, 0x75, 0x18, 0x70, 0x74, 0x4a, 0xc3, 0xdf, 0xa9, 0x68, 0x2f, 0xa4, 0xa3, 0xfd,
	0x35, 0xd4, 0xfc, 0x61, 0xc7, 0x64, 0xdd, 0x20, 0xd1, 0x75, 0xd6, 0x27, 0x25, 0xaf, 0x3d, 0xaf,
	0xd7, 0x42, 0x24, 0x26, 0x80, 0xaa, 0x3f, 0xec, 0xa8, 0xcf, 0x5d, 0x6b, 0x24, 0x0c, 0x4b, 0x57,
	0x0e, 0xc3, 0xff, 0xca, 0xc1, 0x52, 0x0a, 0x84, 0xee, 0xbf, 0xc5, 0x1d, 0x1e, 0xf0, 0x7d, 0x75,
	0x1b, 0x16, 0xc7, 0x89, 0x6e, 0xe6, 0xfd, 0x30, 0x44, 0x76, 0x80, 0x6a, 0xe6, 0xf8, 0x85, 0xe2,
	0xb4, 0xae, 0x9b, 0x28, 0xa9, 0xf8, 0xa2, 0x51, 0x6e, 0x74, 0x7a, 0xa4, 0xe8, 0x2e, 0xb5, 0x9e,
	0xc4, 0x8e, 0x2d, 0xb8, 0x78, 0xe5, 0x05, 0xff, 0x67, 0x2e, 0xed, 0xe9, 0x61, 0x42, 0x6b, 0x0f,
	0x8f, 0x8f, 0xe9, 0x33, 0x58, 0x08, 0x84, 0x6d, 0x0a, 0xce, 0x7c, 0xcf, 0x1d, 0xb3, 0xf9, 0xb5,
	0x40, 0xd8, 0x06, 0xb2, 0x22, 0x6d, 0x7e, 0x0a, 0x8d, 0x71, 0x01, 0x7d, 0xfa, 0xc8, 0xde, 0x87,
	0xeb, 0x23, 0x03, 0x4a, 0x22, 0xdd, 0x1e, 0x8b, 0xb6, 0xc2, 0xe5, 0x16, 0x99, 0x0e, 0xb5, 0xb3,
	0x91, 0x80, 0xe6, 0xcc, 0xe2, 0x62, 0xf3, 0x84, 0xb9, 0x3d, 0x4e, 0xef, 0xc3, 0x1c, 0x1e, 0xa7,
	0xd3, 0x2f, 0x7f, 0x20, 0x69, 0x3b, 0xea, 0xf5, 0xef, 0x21, 0xd4, 0x7d, 0xde, 0xf5, 0x5c, 0xcb,
	0x4c, 0x57, 0xb8, 0x39, 0x45, 0xd5, 0x28, 0x0a, 0xc5, 0xc4, 0xd9, 0x18, 0x7f, 0x37, 0xff, 0x27,
	0x9f, 0x76, 0x28, 0xd9, 0xaa, 0x2b, 0x0b, 0x46, 0x3d, 0xe8, 0x64, 0x87, 0xda, 0x02, 0xd2, 0x65,
	0x7e, 0x70, 0x45, 0x77, 0xaa, 0x4b, 0x99, 0x84, 0x33, 0x3d, 0x84, 0x7a, 0x72, 0x94, 0xc8, 0x95,
	0xe6, 0x62, 0xdc, 0xaf, 0xef, 0x48, 0xf4, 0x5b, 0x98, 0x4f, 0x84, 0x30, 0xaa, 0x5a, 0xba, 0x7c,
	0x10, 0xd7, 0xa2, 0x20, 0x46, 0x95, 0xe3, 0xe4, 0x37, 0x73, 0x85, 0xe4, 0xb7, 0x00, 0xa5, 0x33,
	0xe6, 0x0c, 0xe5, 0xb9, 0xad, 0xb0, 0x52, 0x32, 0xd4, 0x47, 0xf3, 0xef, 0x72, 0x40, 0x92, 0x42,
	0xbb, 0x01, 0xef, 0x27, 0x0e, 0xc5, 0xb9, 0xcb, 0x1f, 0x8a, 0xe3, 0xf4, 0xa4, 0xac, 0x5f, 0x66,
	0x61, 0xda, 0x89, 0x66, 0x2e, 0x24, 0x66, 0xa6, 0x6b, 0x30, 0xdb, 0xf5, 0xdc, 0x80, 0xbb, 0x81,
	0xde, 0xcf, 0x8b, 0xaf, 0x0d, 0x43, 0x50, 0x93, 0xa7, 0x5d, 0xc5, 0xf0, 0x86, 0xae, 0xa5, 0x9e,
	0x96, 0xf0, 0xb9, 0xb8, 0x09, 0x35, 0x5f, 0x74, 0xc7, 0x2e, 0x7d, 0xaa, 0xbe, 0xe8, 0x86, 0x37,
	0x3e, 0x12, 0x83, 0xa7, 0xd7, 0x08, 0x53, 0xc0, 0x04, 0x5c, 0x95, 0x47, 0xd8, 0xf0, 0x56, 0xe8,
	0x5f, 0xf2, 0x70, 0x6d, 0x6c, 0x1e, 0xba, 0x0b, 0x35, 0x7d, 0xbf, 0x63, 0xb1, 0x80, 0x99, 0x4c,
	0x97, 0x9d, 0x4f, 0x2f, 0xde, 0x98, 0x11, 0xdd, 0x0c, 0x7d, 0x37, 0x24, 0x7f, 0xb7, 0x46, 0x87,
	0xea, 0xe8, 0x62, 0x74, 0xf5, 0xa1, 0xda, 0x78, 0x9e, 0x95, 0x7c, 0x75, 0x1e, 0x57, 0x55, 0xa3,
	0x82, 0x14, 0x3c, 0x91, 0x7f, 0x13, 0x9d, 0x49, 0xec, 0x80, 0xf7, 0x1b, 0x45, 0x6c, 0x79, 0x27,
	0xd8, 0x52, 0xda, 0x3d, 0x3c, 0xaf, 0xa0, 0x0f, 0x6c, 0x01, 0x49, 0x08, 0x9b, 0x78, 0x79, 0x55,
	0xca, 0x1c, 0xa1, 0x1e, 0x8f, 0xb0, 0xc3, 0x99, 0xd5, 0xfc, 0xdb, 0x02, 0xdc, 0x49, 0x75, 0xd6,
	0xa8, 0xbd, 0x3a, 0x8e, 0xa3, 0xd9, 0xfe, 0xbf, 0x5e, 0xd3, 0x52, 0x87, 0x8e, 0xd2, 0xc8, 0xa1,
	0x63, 0x19, 0xc0, 0xf6, 0x4d, 0xdd, 0xf6, 0x63, 0x90, 0x95, 0x8d, 0x8a, 0xed, 0xeb, 0x63, 0xc1,
	0x58, 0x46, 0x9c, 0x45, 0xf1, 0x64, 0x46, 0xbc, 0x05, 0xb3, 0xb6, 0x6f, 0x5a, 0x72, 0xcf, 0xca,
	0x28, 0x3d, 0x63, 0xfb, 0x5b, 0x9c, 0x8d, 0x3d, 0xa7, 0x55, 0x2e, 0xf7, 0x9c, 0x26, 0x1d, 0xb7,
	0x3b, 0x14, 0x09, 0xc7, 0x05, 0xe5, 0xb8, 0xdd, 0xa1, 0x88, 0x9c, 0x3b, 0x0e, 0xda, 0xea, 0xe5,
	0x82, 0xb6, 0xf9, 0x27, 0x33, 0xe1, 0x39, 0x36, 0x4a, 0x3a, 0xd3, 0x2e, 0xd6, 0x12, 0x17, 0x3c,
	0xe1, 0x8d, 0x5a, 0x31, 0xba, 0xe0, 0x91, 0xfe, 0xb6, 0x0f, 0xf3, 0xea, 0x82, 0xc6, 0xd4, 0x56,
	0x63, 0xba, 0x1a, 0x3d, 0x9a, 0x70, 0xcc, 0x1a, 0x71, 0x06, 0xa3, 0xa6, 0xc4, 0x15, 0xbd, 0x35,
	0x3e, 0x5e, 0x47, 0x67, 0x8a, 0x8f, 0x1a, 0xaf, 0x4d, 0xbf, 0x83, 0x79, 0xc1, 0x1d, 0x86, 0x69,
	0x4a, 0x6d, 0xae, 0xf6, 0xe8, 0xa7, 0x13, 0x93, 0xf0, 0x9a, 0xa1, 0x05, 0x94, 0x61, 0xb6, 0xdd,
	0x40, 0x9c, 0x1b, 0x75, 0x91, 0x22, 0xd2, 0xbb, 0x50, 0x75, 0xbd, 0xc0, 0x64, 0xc1, 0xa9, 0xe9,
	0xf3, 0x2e, 0xfa, 0x4b, 0xc9, 0xa8, 0xb8, 0x5e, 0xd0, 0x0a, 0x4e, 0x0f, 0x79, 0x57, 0x1a, 0x3d,
	0x79, 0x33, 0x36, 0x3b, 0x6a, 0xf4, 0x76, 0x74, 0x47, 0x96, 0xba, 0x2f, 0x7b, 0x0c, 0xd4, 0xc1,
	0x42, 0x1c, 0xd7, 0x26, 0x93, 0xa1, 0x3f, 0x15, 0x8d, 0x79, 0xc5, 0x09, 0xeb, 0x53, 0xeb, 0x42,
	0x70, 0x07, 0xfd, 0x6b, 0x0c, 0xdc, 0xa6, 0x2d, 0xa8, 0xe9, 0x7b, 0x30, 0x7d, 0xd5, 0x05, 0x17,
	0xd7, 0x91, 0xe4, 0xf5, 0x8a, 0x31, 0x27, 0x92, 0x97, 0x2d, 0x8f, 0x81, 0xa2, 0x87, 0x47, 0x57,
	0x73, 0xc7, 0x43, 0xc7, 0x41, 0xcf, 0x2b, 0x1b, 0xf3, 0xd2, 0xd9, 0xf5, 0x06, 0xbe, 0x1a, 0x3a,
	0x0e, 0xfd, 0x3a, 0xcc, 0x53, 0x32, 0xe3, 0x35, 0x2c, 0xdc, 0xf3, 0xa5, 0x29, 0xf9, 0x4e, 0x27,
	0x31, 0x69, 0xc3, 0xdb, 0x36, 0x5c, 0xbf, 0xc0, 0x06, 0x94, 0x40, 0xe1, 0x94, 0x9f, 0xeb, 0x8c,
	0x21, 0x7f, 0xd2, 0x9f, 0x84, 0x55, 0x26, 0x7f, 0x25, 0x1f, 0x51, 0x42, 0x5f, 0xe7, 0xbf, 0xca,
	0xad, 0xfe, 0x53, 0x21, 0x7a, 0xb5, 0x3c, 0x52, 0xc7, 0xe6, 0x6b, 0xa7, 0x89, 0x6f, 0x73, 0xdf,
	0x73, 0x39, 0xf9, 0x11, 0xbd, 0x05, 0xd7, 0x53, 0x64, 0x35, 0x24, 0xc9, 0xd1, 0x25, 0xb8, 0x95,
	0x62, 0xc4, 0x4f, 0xdf, 0x24, 0x3f, 0x26, 0xa5, 0xfe, 0x9a, 0x80, 0x14, 0xe8, 0x5d, 0xb8, 0x7d,
	0xb1, 0xd4, 0x2b, 0x4f, 0x04, 0xa4, 0x48, 0x9b, 0x70, 0x37, 0xc5, 0x1f, 0x7b, 0xee, 0x26, 0xa5,
	0x0c, 0x8c, 0xc3, 0x7a, 0x64, 0x66, 0x4c, 0x01, 0xf5, 0xd0, 0x49, 0x66, 0xc7, 0x96, 0x79, 0xc0,
	0x7c, 0x9f, 0x94, 0xc7, 0x56, 0x13, 0x3f, 0x16, 0x93, 0x0a, 0x6d, 0xc0, 0x42, 0x8a, 0xa9, 0x5f,
	0x00, 0x08, 0xd0, 0x65, 0x58, 0x4c, 0x8f, 0x96, 0x78, 0xd9, 0x20, 0x55, 0x7a, 0x0f, 0x96, 0x2e,
	0x62, 0x87, 0xf2, 0x73, 0xf4, 0x0e, 0x34, 0x2e, 0x94, 0xf7, 0x7c, 0x9f, 0xd4, 0xc6, 0x36, 0x6b,
	0x9f, 0xbf, 0x57, 0x7a, 0x9d, 0x48, 0xbd, 0xea, 0xab, 0xbf, 0x1c, 0x69, 0x67, 0xb0, 0x49, 0xbe,
	0x0d, 0x37, 0x4f, 0x47, 0x89, 0x29, 0x63, 0x8e, 0xf2, 0x18, 0xc9, 0x5d, 0xcc, 0xe8, 0x90, 0xbc,
	0x52, 0x61, 0x4c, 0xc2, 0x54, 0x47, 0xbc, 0xd0, 0x9e, 0x63, 0x82, 0x21, 0xbf, 0x48, 0x1f, 0xc0,
	0xbd, 0x8b, 0xe4, 0x99, 0x6b, 0x99, 0x1d, 0x93, 0xbb, 0xbc, 0x7f, 0x4e, 0x4a, 0xab, 0xff, 0x5c,
	0x82, 0x0a, 0x36, 0x92, 0xe8, 0x88, 0x0b, 0x40, 0x4e, 0xa3, 0x2f, 0xd5, 0xd6, 0x91, 0x1f, 0xd1,
	0x9b, 0x40, 0x63, 0xaa, 0xc1, 0x02, 0x2e, 0x5d, 0x8a, 0xe4, 0xe8, 0x75, 0x98, 0x4f, 0xa0, 0x79,
	0x97, 0x9d, 0x93, 0x7c, 0x9a, 0x78, 0xc4, 0x86, 0x6e, 0x40, 0x0a, 0xb8, 0xc6, 0x88, 0xb8, 0xdb,
	0x73, 0x3d, 0xc1, 0xb7, 0xf8, 0x31, 0x29, 0xa2, 0x4b, 0x44, 0x8c, 0x96, 0xef, 0xb3, 0xa1, 0x23,
	0xdd, 0x4c, 0x6e, 0x64, 0x3c, 0x88, 0x2c, 0x3c, 0x07, 0x5c, 0x74, 0xb9, 0x1b, 0x90, 0x19, 0xba,
	0x08, 0x37, 0x62, 0x1e, 0x5a, 0x5b, 0x2b, 0x3a, 0x9b, 0x56, 0x34, 0xbc, 0xb7, 0x21, 0x65, 0x4a,
	0xa1, 0x9e, 0x1c, 0x8e, 0x0d, 0x48, 0x05, 0xfd, 0x23, 0xa2, 0x1d, 0xf2, 0x01, 0xef, 0xda, 0xcc,
	0x89, 0xae, 0xa5, 0x08, 0x45, 0xff, 0x4a, 0xeb, 0xa0, 0xfb, 0x5c, 0x16, 0x70, 0xb2, 0x90, 0x66,
	0xbf, 0xf3, 0xe5, 0x7a, 0xb8, 0xdb, 0xe5, 0x47, 0x9e, 0x94, 0x6e, 0xa0, 0xdf, 0x26, 0xd9, 0x3b,
	0x03, 0xc5, 0x59, 0x4c, 0x4f, 0x1c, 0x73, 0x5a, 0xf2, 0xfc, 0xc2, 0x1c, 0xb2, 0x94, 0x06, 0x6c,
	0x3a, 0x9c, 0xb9, 0xef, 0xdc, 0xd7, 0x9e, 0x67, 0xa9, 0x03, 0x0b, 0xb9, 0x93, 0x1e, 0x1b, 0xe7,
	0xf5, 0xb9, 0x1c, 0x7b, 0x3d, 0xbd, 0x01, 0x07, 0xf8, 0x54, 0x1c, 0x9c, 0x92, 0x17, 0xe8, 0xeb,
	0x23, 0x76, 0x6d, 0x59, 0xaa, 0x15, 0x25, 0x1b, 0xf4, 0x3e, 0xdc, 0x19, 0xe5, 0xb6, 0xcf, 0xb7,
	0xbc, 0xe0, 0xad, 0xba, 0x9e, 0x22, 0x2f, 0xd1, 0xd5, 0x62, 0x44, 0xc4, 0xd9, 0xf2, 0x86, 0x1d,
	0x87, 0x93, 0x2f, 0xe9, 0x43, 0xb8, 0x7f, 0xc1, 0xf8, 0xdc, 0x6a, 0x9f, 0x6f, 0x7a, 0xae, 0x85,
	0xaf, 0x15, 0xe4, 0xc7, 0x98, 0x3c, 0xe2, 0x85, 0x0d, 0xc5, 0x38, 0xe6, 0xab, 0xf4, 0x4c, 0x7b,
	0x9e, 0xaf, 0x76, 0xbe, 0x65, 0x59, 0xf2, 0x24, 0x4c, 0x7e, 0x0b, 0x93, 0x45, 0x3c, 0x06, 0xf3,
	0x03, 0xfc, 0x40, 0x9b, 0xfc, 0x64, 0xf5, 0x04, 0xea, 0xf8, 0x19, 0x0d, 0x18, 0x3b, 0x5e, 0x44,
	0xd2, 0xe1, 0x18, 0x99, 0x2f, 0x62, 0xb4, 0xed, 0x5e, 0x8f, 0x8b, 0xa3, 0x13, 0xe6, 0x92, 0x5c,
	0xac, 0x46, 0xc4, 0xde, 0xb3, 0x65, 0x24, 0x29, 0x7e, 0x7e, 0xf5, 0x8f, 0x0a, 0xb0, 0x98, 0xe6,
	0x6f, 0x7a, 0xfd, 0x01, 0x13, 0x5c, 0x77, 0x51, 0x77, 0x4f, 0x27, 0x72, 0xb5, 0x02, 0x32, 0x3a,
	0x27, 0x62, 0x5e, 0x79, 0xa2, 0xcb, 0x49, 0x8e, 0xae, 0xc2, 0xa3, 0xc9, 0xa0, 0x5d, 0x37, 0xe0,
	0x8e, 0x63, 0xf7, 0xa4, 0xdb, 0x91, 0x3c, 0xfd, 0x0c, 0x1e, 0x4c, 0xc6, 0x6e, 0x7a, 0xfd, 0x3e,
	0x73, 0x2d, 0x2e, 0x48, 0x81, 0x3e, 0x85, 0xcf, 0x27, 0x03, 0xb7, 0x65, 0x5e, 0xd8, 0x8d, 0xfe,
	0x94, 0x93, 0x14, 0xa7, 0x8f, 0xbb, 0xef, 0xbd, 0xd7, 0xc0, 0xd2, 0x74, 0x65, 0xdf, 0xf9, 0x89,
	0x41, 0x67, 0xa6, 0xef, 0x10, 0x9a, 0x7a, 0x96, 0x7e, 0x02, 0xcb, 0x93, 0x31, 0x5b, 0x5e, 0x40,
	0xca, 0xab, 0xbf, 0x0b, 0x73, 0x88, 0xd8, 0xf2, 0x82, 0xa8, 0x90, 0x26, 0x09, 0x7a, 0xaf, 0x47,
	0xc9, 0xed, 0xa1, 0x90, 0x46, 0x8e, 0xb2, 0x8c, 0x26, 0x1f, 0x78, 0xb6, 0xef, 0xb9, 0xb6, 0xdb,
	0x23, 0xf9, 0xd5, 0x7f, 0xbd, 0x31, 0x76, 0x63, 0x9a, 0x38, 0x18, 0x8f, 0xa6, 0xd6, 0x14, 0x37,
	0xcc, 0xf8, 0x2b, 0xf0, 0x70, 0x2a, 0x28, 0x4c, 0x35, 0x39, 0xfa, 0x39, 0x7c, 0x3a, 0x05, 0x19,
	0xdf, 0xd4, 0x92, 0x3c, 0x7d, 0x04, 0xcd, 0x29, 0x50, 0x7d, 0x03, 0x4b, 0x0a, 0x19, 0x93, 0x47,
	0xb7, 0xa8, 0xa4, 0x48, 0x1f, 0xc3, 0x67, 0x53, 0x90, 0xc9, 0x5b, 0x12, 0x32, 0x43, 0xd7, 0x60,
	0x75, 0x0a, 0xf8, 0xcd, 0xd0, 0x09, 0xec, 0xc3, 0x40, 0xd8, 0xa7, 0xa1, 0x0d, 0xa5, 0x4f, 0x4c,
	0xc6, 0x4b, 0x5d, 0x0f, 0x98, 0x90, 0x36, 0x25, 0xe5, 0x4b, 0xed, 0xd7, 0x3e, 0xeb, 0x91, 0x4a,
	0x06, 0xb2, 0xcd, 0xb9, 0xab, 0x0a, 0x0f, 0x5c, 0x6e, 0x67, 0xe5, 0xa0, 0xd5, 0x8c, 0x9d, 0x95,
	0xaa, 0x4a, 0xdc, 0x5c, 0xc6, 0x92, 0xc2, 0x8b, 0x63, 0x89, 0xad, 0x61, 0xa8, 0x4d, 0xc6, 0xee,
	0x0c, 0x76, 0xec, 0xde, 0x49, 0x78, 0xd5, 0x47, 0xea, 0x19, 0xbb, 0xbb, 0x33, 0xd8, 0x93, 0x19,
	0x3d, 0xc2, 0xcf, 0xd3, 0x67, 0xf0, 0x78, 0x0a, 0xfe, 0x67, 0x2c, 0xe8, 0x9e, 0x1c, 0x49, 0x11,
	0x5d, 0x20, 0x49, 0xc6, 0x04, 0x87, 0x27, 0x36, 0x77, 0xac, 0x37, 0xb6, 0x5e, 0x02, 0xb9, 0x96,
	0xa1, 0x7f, 0xc2, 0xdc, 0x72, 0xb9, 0x34, 0x03, 0x9e, 0x7e, 0x48, 0x21, 0xd7, 0xe9, 0x13, 0x58,
	0x99, 0x02, 0x8f, 0x4b, 0x9e, 0x1c, 0xfc, 0xc6, 0xa5, 0xfc, 0x74, 0x87, 0x21, 0xf8, 0x66, 0x86,
	0x26, 0xdb, 0xd2, 0xea, 0x8a, 0x2d, 0xe1, 0xb7, 0xb2, 0x14, 0x57, 0xa5, 0x7d, 0xd3, 0x0e, 0xce,
	0x25, 0xbc, 0x91, 0xe1, 0x55, 0xad, 0xe0, 0x34, 0x84, 0x2e, 0x66, 0xad, 0x51, 0xb6, 0x2f, 0x6f,
	0x98, 0xe8, 0x4a, 0x2f, 0x20, 0xb7, 0x33, 0xf4, 0x38, 0xb4, 0xdd, 0x9e, 0xc3, 0x23, 0xf8, 0x52,
	0x86, 0x1e, 0x6f, 0xec, 0x0f, 0x2d, 0xd1, 0x47, 0x3d, 0xee, 0x60, 0x16, 0xcf, 0xf6, 0x5a, 0xb2,
	0x4c, 0x3f, 0x85, 0x4f, 0xa6, 0x02, 0xb1, 0x49, 0xb9, 0x9b, 0x11, 0x2d, 0x2d, 0xcb, 0xc2, 0x3c,
	0x74, 0x2f, 0x03, 0xf7, 0xc6, 0x76, 0x11, 0x77, 0x3f, 0x23, 0xa4, 0x5b, 0x56, 0xd8, 0xfd, 0x7c,
	0x42, 0xd7, 0x61, 0x6d, 0xaa, 0x82, 0x63, 0xef, 0x25, 0xa4, 0x99, 0xb1, 0xfa, 0x36, 0x73, 0x55,
	0x44, 0x3d, 0xc8, 0x70, 0xb2, 0x36, 0x73, 0xe3, 0xb4, 0xfd, 0xf0, 0x12, 0xc9, 0x6d, 0x9f, 0x7f,
	0x08, 0xe4, 0xfe, 0x7f, 0x9a, 0x15, 0x79, 0xe9, 0xf7, 0x0d, 0xf2, 0x28, 0x63, 0xdf, 0x64, 0x0f,
	0x2b, 0x71, 0x9f, 0x65, 0xdb, 0xa1, 0x23, 0x13, 0xf1, 0x4a, 0xc6, 0xfe, 0x2a, 0xb3, 0xca, 0x11,
	0x3f, 0xcf, 0xd0, 0x34, 0xd9, 0x8a, 0x4a, 0xfc, 0x6a, 0x86, 0x87, 0x1f, 0x46, 0x37, 0xf3, 0x12,
	0xfd, 0x38, 0x33, 0x21, 0x3b, 0x0e, 0xef, 0xe2, 0x96, 0x3d, 0xc9, 0xb0, 0xc5, 0xae, 0x8b, 0xc1,
	0xf3, 0x4a, 0xa6, 0x2c, 0xf2, 0x34, 0x43, 0x8b, 0xb7, 0xc3, 0x20, 0x81, 0x5e, 0xa3, 0x5f, 0xc0,
	0x93, 0x69, 0x5a, 0x8c, 0xf5, 0xdc, 0xcf, 0x2e, 0x65, 0xbf, 0xb8, 0x44, 0x7d, 0x91, 0xe1, 0x71,
	0x2d, 0x4b, 0x45, 0x3d, 0x79, 0x4e, 0x9f, 0xc3, 0xd3, 0x69, 0xaa, 0xe0, 0xe1, 0xbd, 0x65, 0xe1,
	0xdf, 0x94, 0x1e, 0x09, 0x66, 0xbb, 0x64, 0x3d, 0x4b, 0xfb, 0xa4, 0x08, 0x46, 0xeb, 0x8b, 0x8c,
	0x5d, 0xdf, 0xe3, 0xec, 0x4c, 0xa5, 0x15, 0xb2, 0x91, 0xa1, 0xcf, 0x6b, 0x26, 0x84, 0x6c, 0x92,
	0xa4, 0x41, 0xd5, 0xb3, 0x0d, 0x79, 0x99, 0x61, 0xa8, 0xe4, 0x1b, 0x0f, 0xf9, 0x92, 0x3e, 0x9e,
	0x1a, 0x34, 0x87, 0xc3, 0x4e, 0x94, 0x8b, 0xfe, 0xb4, 0x40, 0x3f, 0x9f, 0xea, 0xb5, 0x08, 0xc6,
	0x15, 0xfe, 0x59, 0x81, 0xae, 0x4e, 0x5d, 0xe2, 0xe1, 0xb0, 0x13, 0xe6, 0xa4, 0x3f, 0xbf, 0x04,
	0x36, 0xcc, 0x4b, 0x7f, 0x51, 0xa0, 0x6b, 0x53, 0x53, 0xb2, 0x6c, 0x73, 0xd4, 0xd2, 0xa4, 0xb7,
	0x90, 0xbf, 0x2c, 0xd0, 0x2f, 0xa6, 0xd6, 0xe4, 0x18, 0xaf, 0xfc, 0x8b, 0xfc, 0x55, 0xd6, 0x22,
	0x65, 0xea, 0xc3, 0xba, 0x4c, 0xfe, 0xba, 0x40, 0xbf, 0x81, 0x2f, 0x2f, 0xd3, 0xf8, 0x6c, 0xca,
	0x3c, 0x15, 0xa8, 0x79, 0x8e, 0x98, 0xe8, 0xf1, 0x80, 0xfc, 0x4d, 0x61, 0xf5, 0xf7, 0x61, 0x7e,
	0xe4, 0xaf, 0x36, 0xe2, 0x93, 0x64, 0x4c, 0xd3, 0xcd, 0xeb, 0x05, 0x1c, 0x69, 0x73, 0x92, 0x8b,
	0xcf, 0xdf, 0x31, 0x47, 0x1d, 0x24, 0xf3, 0x17, 0xb1, 0xb6, 0x7f, 0x6f, 0x68, 0x0f, 0x48, 0xa1,
	0x33, 0x83, 0x97, 0x64, 0x2f, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x4e, 0x8b, 0xc9, 0x96,
	0x38, 0x00, 0x00,
}
