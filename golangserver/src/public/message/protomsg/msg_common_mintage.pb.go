// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_common_mintage.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MintageInfoStatus int32

const (
	MintageInfoStatus_MintageInfoStatus_None    MintageInfoStatus = 0
	MintageInfoStatus_MintageInfoStatus_Execute MintageInfoStatus = 1
)

var MintageInfoStatus_name = map[int32]string{
	0: "MintageInfoStatus_None",
	1: "MintageInfoStatus_Execute",
}
var MintageInfoStatus_value = map[string]int32{
	"MintageInfoStatus_None":    0,
	"MintageInfoStatus_Execute": 1,
}

func (x MintageInfoStatus) String() string {
	return proto.EnumName(MintageInfoStatus_name, int32(x))
}
func (MintageInfoStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor50, []int{0} }

// 铸币信息
type MintageInfo struct {
	UseResource    uint64            `protobuf:"varint,1,opt,name=use_resource,json=useResource" json:"use_resource,omitempty"`
	EndMintageTime uint64            `protobuf:"varint,2,opt,name=end_mintage_time,json=endMintageTime" json:"end_mintage_time,omitempty"`
	CurFood        uint64            `protobuf:"varint,3,opt,name=cur_food,json=curFood" json:"cur_food,omitempty"`
	CurWood        uint64            `protobuf:"varint,4,opt,name=cur_wood,json=curWood" json:"cur_wood,omitempty"`
	CurOre         uint64            `protobuf:"varint,5,opt,name=cur_ore,json=curOre" json:"cur_ore,omitempty"`
	Status         MintageInfoStatus `protobuf:"varint,6,opt,name=status,enum=protomsg.MintageInfoStatus" json:"status,omitempty"`
	BeginTime      uint64            `protobuf:"varint,7,opt,name=begin_time,json=beginTime" json:"begin_time,omitempty"`
	MintageNum     uint64            `protobuf:"varint,8,opt,name=mintage_num,json=mintageNum" json:"mintage_num,omitempty"`
}

func (m *MintageInfo) Reset()                    { *m = MintageInfo{} }
func (m *MintageInfo) String() string            { return proto.CompactTextString(m) }
func (*MintageInfo) ProtoMessage()               {}
func (*MintageInfo) Descriptor() ([]byte, []int) { return fileDescriptor50, []int{0} }

func (m *MintageInfo) GetUseResource() uint64 {
	if m != nil {
		return m.UseResource
	}
	return 0
}

func (m *MintageInfo) GetEndMintageTime() uint64 {
	if m != nil {
		return m.EndMintageTime
	}
	return 0
}

func (m *MintageInfo) GetCurFood() uint64 {
	if m != nil {
		return m.CurFood
	}
	return 0
}

func (m *MintageInfo) GetCurWood() uint64 {
	if m != nil {
		return m.CurWood
	}
	return 0
}

func (m *MintageInfo) GetCurOre() uint64 {
	if m != nil {
		return m.CurOre
	}
	return 0
}

func (m *MintageInfo) GetStatus() MintageInfoStatus {
	if m != nil {
		return m.Status
	}
	return MintageInfoStatus_MintageInfoStatus_None
}

func (m *MintageInfo) GetBeginTime() uint64 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *MintageInfo) GetMintageNum() uint64 {
	if m != nil {
		return m.MintageNum
	}
	return 0
}

func init() {
	proto.RegisterType((*MintageInfo)(nil), "protomsg.MintageInfo")
	proto.RegisterEnum("protomsg.MintageInfoStatus", MintageInfoStatus_name, MintageInfoStatus_value)
}

func init() { proto.RegisterFile("msg_common_mintage.proto", fileDescriptor50) }

var fileDescriptor50 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x4d, 0xad, 0x69, 0x9c, 0x48, 0x89, 0x7b, 0xd0, 0xad, 0x52, 0xac, 0x9e, 0x82, 0x87,
	0x1c, 0xec, 0x67, 0x50, 0xf0, 0x60, 0x84, 0x28, 0x78, 0x5c, 0xda, 0xcd, 0x34, 0xe4, 0xb0, 0x3b,
	0xb2, 0x7f, 0xd0, 0x4f, 0xe3, 0x67, 0x95, 0x6c, 0x12, 0x11, 0x72, 0x9a, 0xe1, 0xfd, 0x1e, 0x8f,
	0xf7, 0x80, 0x2b, 0xdb, 0x08, 0x49, 0x4a, 0x91, 0x16, 0xaa, 0xd5, 0x6e, 0xd7, 0x60, 0xf1, 0x69,
	0xc8, 0x11, 0x4b, 0xc2, 0x51, 0xb6, 0xb9, 0xfb, 0x99, 0x41, 0xfa, 0xd2, 0xb3, 0x67, 0x7d, 0x20,
	0x76, 0x0b, 0x67, 0xde, 0xa2, 0x30, 0x68, 0xc9, 0x1b, 0x89, 0x3c, 0xda, 0x44, 0xf9, 0xbc, 0x4a,
	0xbd, 0xc5, 0x6a, 0x90, 0x58, 0x0e, 0x19, 0xea, 0x7a, 0x4c, 0x14, 0xae, 0x55, 0xc8, 0x67, 0xc1,
	0xb6, 0x44, 0x5d, 0x0f, 0x61, 0xef, 0xad, 0x42, 0xb6, 0x82, 0x44, 0x7a, 0x23, 0x0e, 0x44, 0x35,
	0x3f, 0x0e, 0x8e, 0x85, 0xf4, 0xe6, 0x89, 0xa8, 0x1e, 0xd1, 0x57, 0x87, 0xe6, 0x7f, 0xe8, 0xa3,
	0x43, 0x97, 0xd0, 0xbd, 0x82, 0x0c, 0xf2, 0x93, 0x40, 0x62, 0xe9, 0xcd, 0xab, 0x41, 0xb6, 0x85,
	0xd8, 0xba, 0x9d, 0xf3, 0x96, 0xc7, 0x9b, 0x28, 0x5f, 0x3e, 0x5c, 0x17, 0xe3, 0x8c, 0xe2, 0xdf,
	0x84, 0xb7, 0x60, 0xa9, 0x06, 0x2b, 0x5b, 0x03, 0xec, 0xb1, 0x69, 0x75, 0xdf, 0x73, 0x11, 0x02,
	0x4f, 0x83, 0x12, 0x2a, 0xde, 0x40, 0x3a, 0x0e, 0xd1, 0x5e, 0xf1, 0x24, 0x70, 0x18, 0xa4, 0xd2,
	0xab, 0xfb, 0x12, 0xce, 0x27, 0xe1, 0xec, 0x0a, 0x2e, 0x26, 0xa2, 0x28, 0x49, 0x63, 0x76, 0xc4,
	0xd6, 0xb0, 0x9a, 0xb2, 0xc7, 0x6f, 0x94, 0xde, 0x61, 0x16, 0xed, 0xe3, 0xd0, 0x79, 0xfb, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0xed, 0x42, 0x6d, 0x6b, 0x9d, 0x01, 0x00, 0x00,
}
