// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MsgCL2GSPluginDeployRequest struct {
	PluginSetData *PluginDeploySet `protobuf:"bytes,1,opt,name=plugin_set_data,json=pluginSetData" json:"plugin_set_data,omitempty"`
}

func (m *MsgCL2GSPluginDeployRequest) Reset()                    { *m = MsgCL2GSPluginDeployRequest{} }
func (m *MsgCL2GSPluginDeployRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSPluginDeployRequest) ProtoMessage()               {}
func (*MsgCL2GSPluginDeployRequest) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{0} }

func (m *MsgCL2GSPluginDeployRequest) GetPluginSetData() *PluginDeploySet {
	if m != nil {
		return m.PluginSetData
	}
	return nil
}

type MsgGS2CLPluginDeployInfoNotice struct {
	InfoList  *PluginDeploySyncInfoList `protobuf:"bytes,1,opt,name=info_list,json=infoList" json:"info_list,omitempty"`
	ErrorCode int32                     `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLPluginDeployInfoNotice) Reset()                    { *m = MsgGS2CLPluginDeployInfoNotice{} }
func (m *MsgGS2CLPluginDeployInfoNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLPluginDeployInfoNotice) ProtoMessage()               {}
func (*MsgGS2CLPluginDeployInfoNotice) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{1} }

func (m *MsgGS2CLPluginDeployInfoNotice) GetInfoList() *PluginDeploySyncInfoList {
	if m != nil {
		return m.InfoList
	}
	return nil
}

func (m *MsgGS2CLPluginDeployInfoNotice) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type MsgGS2CLPluginDeployErrorNotice struct {
	ErrorCode int32 `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgGS2CLPluginDeployErrorNotice) Reset()         { *m = MsgGS2CLPluginDeployErrorNotice{} }
func (m *MsgGS2CLPluginDeployErrorNotice) String() string { return proto.CompactTextString(m) }
func (*MsgGS2CLPluginDeployErrorNotice) ProtoMessage()    {}
func (*MsgGS2CLPluginDeployErrorNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor62, []int{2}
}

func (m *MsgGS2CLPluginDeployErrorNotice) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgCL2GSPluginDeployRequest)(nil), "protomsg.MsgCL2GSPluginDeployRequest")
	proto.RegisterType((*MsgGS2CLPluginDeployInfoNotice)(nil), "protomsg.MsgGS2CLPluginDeployInfoNotice")
	proto.RegisterType((*MsgGS2CLPluginDeployErrorNotice)(nil), "protomsg.MsgGS2CLPluginDeployErrorNotice")
}

func init() { proto.RegisterFile("plugin.proto", fileDescriptor62) }

var fileDescriptor62 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8e, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xc9, 0x41, 0x69, 0x47, 0x45, 0x08, 0x1e, 0xaa, 0xa2, 0x96, 0x9c, 0x7a, 0xca, 0x21,
	0x3e, 0x80, 0x4a, 0x2a, 0x45, 0x48, 0x45, 0x92, 0x07, 0x58, 0xd7, 0xcd, 0x74, 0x59, 0xc8, 0xee,
	0xc4, 0xcc, 0xf4, 0xd0, 0x9b, 0x8f, 0x2e, 0x4d, 0x22, 0xf4, 0xa0, 0x9e, 0x66, 0x98, 0xf9, 0xbf,
	0x8f, 0x1f, 0x4e, 0xdb, 0x66, 0x6b, 0x5d, 0x48, 0xdb, 0x8e, 0x84, 0xe2, 0x49, 0x3f, 0x3c, 0xdb,
	0xab, 0x0b, 0xcf, 0x56, 0x19, 0xf2, 0x9e, 0x82, 0xf2, 0xba, 0x1d, 0xfe, 0xc9, 0x3b, 0x5c, 0xaf,
	0xd9, 0xe6, 0x45, 0xb6, 0xaa, 0xde, 0x7a, 0x6e, 0x89, 0x6d, 0x43, 0xbb, 0x12, 0x3f, 0xb7, 0xc8,
	0x12, 0x3f, 0xc1, 0xf9, 0xa0, 0x53, 0x8c, 0xa2, 0x6a, 0x2d, 0x7a, 0x16, 0xcd, 0xa3, 0xc5, 0x49,
	0x76, 0x99, 0xfe, 0x88, 0xd3, 0x43, 0xae, 0x42, 0x29, 0xcf, 0x06, 0xa2, 0x42, 0x59, 0x6a, 0xd1,
	0xc9, 0x57, 0x04, 0xb7, 0x6b, 0xb6, 0xab, 0x2a, 0xcb, 0x8b, 0xc3, 0xe8, 0x4b, 0xd8, 0xd0, 0x2b,
	0x89, 0x33, 0x18, 0x3f, 0xc0, 0xd4, 0x85, 0x0d, 0xa9, 0xc6, 0xb1, 0x8c, 0xfe, 0xe4, 0x0f, 0xff,
	0x2e, 0x98, 0x3d, 0x58, 0x38, 0x96, 0x72, 0xe2, 0xc6, 0x2d, 0xbe, 0x01, 0xc0, 0xae, 0xa3, 0x4e,
	0x19, 0xaa, 0x71, 0x66, 0xe6, 0xd1, 0xe2, 0xa8, 0x9c, 0xf6, 0x97, 0x9c, 0x6a, 0x4c, 0x1e, 0xe1,
	0xee, 0xb7, 0x06, 0xcf, 0xfb, 0xc0, 0x58, 0xe1, 0x7f, 0xc3, 0xc7, 0x71, 0xdf, 0xe6, 0xfe, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0xae, 0x8e, 0x08, 0x5f, 0x5d, 0x01, 0x00, 0x00,
}
