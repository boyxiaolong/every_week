// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 通知聊天TOKEN
type MsgGS2CLTokenNotice struct {
	Token   string             `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Address *AllGateWayAddress `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *MsgGS2CLTokenNotice) Reset()                    { *m = MsgGS2CLTokenNotice{} }
func (m *MsgGS2CLTokenNotice) String() string            { return proto.CompactTextString(m) }
func (*MsgGS2CLTokenNotice) ProtoMessage()               {}
func (*MsgGS2CLTokenNotice) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *MsgGS2CLTokenNotice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MsgGS2CLTokenNotice) GetAddress() *AllGateWayAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

// 获取聊天TOKEN
type MsgCL2GSGetTokenRequest struct {
}

func (m *MsgCL2GSGetTokenRequest) Reset()                    { *m = MsgCL2GSGetTokenRequest{} }
func (m *MsgCL2GSGetTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSGetTokenRequest) ProtoMessage()               {}
func (*MsgCL2GSGetTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

// 获取聊天TOKEN
type MsgCL2GSGetTokenReply struct {
	ErrorCode int32 `protobuf:"varint,99,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *MsgCL2GSGetTokenReply) Reset()                    { *m = MsgCL2GSGetTokenReply{} }
func (m *MsgCL2GSGetTokenReply) String() string            { return proto.CompactTextString(m) }
func (*MsgCL2GSGetTokenReply) ProtoMessage()               {}
func (*MsgCL2GSGetTokenReply) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *MsgCL2GSGetTokenReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type GateWayAddress struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *GateWayAddress) Reset()                    { *m = GateWayAddress{} }
func (m *GateWayAddress) String() string            { return proto.CompactTextString(m) }
func (*GateWayAddress) ProtoMessage()               {}
func (*GateWayAddress) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *GateWayAddress) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GateWayAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type AllGateWayAddress struct {
	AllGatewayAddress []*GateWayAddress `protobuf:"bytes,1,rep,name=all_gateway_address,json=allGatewayAddress" json:"all_gateway_address,omitempty"`
}

func (m *AllGateWayAddress) Reset()                    { *m = AllGateWayAddress{} }
func (m *AllGateWayAddress) String() string            { return proto.CompactTextString(m) }
func (*AllGateWayAddress) ProtoMessage()               {}
func (*AllGateWayAddress) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *AllGateWayAddress) GetAllGatewayAddress() []*GateWayAddress {
	if m != nil {
		return m.AllGatewayAddress
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgGS2CLTokenNotice)(nil), "protomsg.MsgGS2CLTokenNotice")
	proto.RegisterType((*MsgCL2GSGetTokenRequest)(nil), "protomsg.MsgCL2GSGetTokenRequest")
	proto.RegisterType((*MsgCL2GSGetTokenReply)(nil), "protomsg.MsgCL2GSGetTokenReply")
	proto.RegisterType((*GateWayAddress)(nil), "protomsg.GateWayAddress")
	proto.RegisterType((*AllGateWayAddress)(nil), "protomsg.AllGateWayAddress")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x89, 0x3a, 0xb5, 0x6f, 0x20, 0x2c, 0x53, 0x8c, 0x88, 0x50, 0x7a, 0xea, 0xa9, 0x87,
	0x8a, 0x1e, 0x85, 0xd1, 0x43, 0x3d, 0x6c, 0x1e, 0x3a, 0xc1, 0x93, 0x94, 0xb7, 0xf6, 0x51, 0xc5,
	0x6c, 0x99, 0xc9, 0x93, 0xd1, 0xff, 0x5e, 0x4c, 0xad, 0x63, 0xee, 0x94, 0xbc, 0x97, 0x2f, 0xdf,
	0xf7, 0xfb, 0x00, 0xaa, 0x37, 0xe4, 0x64, 0x6d, 0x0d, 0x1b, 0x79, 0xea, 0x8f, 0xa5, 0x6b, 0xa2,
	0x05, 0x8c, 0x67, 0xae, 0xc9, 0xe7, 0x69, 0x36, 0x7d, 0x36, 0x1f, 0xb4, 0x7a, 0x32, 0xfc, 0x5e,
	0x91, 0x3c, 0x87, 0x01, 0xff, 0x8c, 0x4a, 0x84, 0x22, 0x0e, 0x8a, 0x6e, 0x90, 0x77, 0x70, 0x82,
	0x75, 0x6d, 0xc9, 0x39, 0x75, 0x10, 0x8a, 0x78, 0x98, 0x5e, 0x27, 0xbd, 0x51, 0x32, 0xd1, 0x3a,
	0x47, 0xa6, 0x17, 0x6c, 0x27, 0x9d, 0xa4, 0xe8, 0xb5, 0xd1, 0x15, 0x5c, 0xce, 0x5c, 0x93, 0x4d,
	0xd3, 0x7c, 0x9e, 0x13, 0xfb, 0x98, 0x82, 0x3e, 0xbf, 0xc8, 0x71, 0x74, 0x0f, 0x17, 0xfb, 0x4f,
	0x6b, 0xdd, 0xca, 0x1b, 0x00, 0xb2, 0xd6, 0xd8, 0xb2, 0x32, 0x35, 0xa9, 0x2a, 0x14, 0xf1, 0xa0,
	0x08, 0xfc, 0x26, 0x33, 0x35, 0x45, 0x0f, 0x70, 0xb6, 0x9b, 0x26, 0x25, 0x1c, 0xad, 0x70, 0x49,
	0xbf, 0xc0, 0xfe, 0x2e, 0xd5, 0x2e, 0x6f, 0xb0, 0x45, 0x7a, 0x85, 0xd1, 0x1e, 0xb0, 0x7c, 0x84,
	0x31, 0x6a, 0x5d, 0x36, 0xc8, 0xb4, 0xc1, 0xb6, 0xec, 0xbf, 0x8a, 0xf0, 0x30, 0x1e, 0xa6, 0x6a,
	0x5b, 0xf5, 0x5f, 0xcf, 0x11, 0x76, 0x4e, 0x9b, 0xbf, 0xd5, 0xe2, 0xd8, 0x6b, 0x6f, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x97, 0x31, 0x14, 0x1c, 0x74, 0x01, 0x00, 0x00,
}
